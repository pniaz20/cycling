%!PS-Adobe-2.0
%%Creator: dvips 5.47 Copyright 1986-91 Radical Eye Software
%%Pages: 8 1
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Roman Helvetica-Oblique Helvetica-BoldOblique
%%+ Times-Italic Helvetica
%%EndComments
%%BeginProcSet: tex.pro
/TeXDict 200 dict def TeXDict begin /N /def load def /B{bind def}N /S /exch
load def /X{S N}B /TR /translate load N /isls false N /vsize 10 N /@rigin{
isls{[0 1 -1 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
Resolution VResolution vsize neg mul TR matrix currentmatrix dup dup 4 get
round 4 exch put dup dup 5 get round 5 exch put setmatrix}N /@letter{/vsize 10
N}B /@landscape{/isls true N /vsize -1 N}B /@a4{/vsize 10.6929133858 N}B /@a3{
/vsize 15.5531 N}B /@ledger{/vsize 16 N}B /@legal{/vsize 13 N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0 0]N
/FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn begin
/FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X array
/BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo setfont}2
array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx FMat N df-tail}
B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{pop nn dup definefont
setfont}B /ch-width{ch-data dup length 5 sub get}B /ch-height{ch-data dup
length 4 sub get}B /ch-xoff{128 ch-data dup length 3 sub get sub}B /ch-yoff{
ch-data dup length 2 sub get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B
/ch-image{ch-data dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0
N /rw 0 N /rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S
dup /base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0
ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{ch-image}
imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn /base get cc ctr
put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1 sub dup 2 index S get sf
div put}if put /ctr ctr 1 add N}B /I{cc 1 add D}B /bop{userdict /bop-hook
known{bop-hook}if /SI save N @rigin 0 0 moveto}N /eop{clear SI restore
showpage userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if /VResolution X /Resolution X 1000 div /DVImag X /IE 256
array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for}N /p /show load N
/RMat[1 0 0 -1 0 0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X
/rulex X V}B /V statusdict begin /product where{pop product dup length 7 ge{0
7 getinterval(Display)eq}{pop false}ifelse}{false}ifelse end{{gsave TR -.1 -.1
TR 1 1 scale rulex ruley false RMat{BDot}imagemask grestore}}{{gsave TR -.1
-.1 TR rulex ruley scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /a{
moveto}B /delta 0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{
S p tail}B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B
/j{3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w
}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{clear SS restore}B end
%%EndProcSet
%%BeginProcSet: texps.pro
TeXDict begin /rf{655360 div mul Resolution mul 7227 div /PixPerEm X findfont
dup length 1 add dict /nn X{1 index /FID ne{nn 3 1 roll put}{pop pop}ifelse}
forall 256 dict begin nn /Encoding get 0 1 255{2 copy get 3 index 2 index get
1000 mul PixPerEm div def pop}for pop pop nn /Metrics currentdict put end
/fontname X /nn dup nn definefont[PixPerEm 0 0 PixPerEm neg 0 0]makefont N
fontname{/foo setfont}2 array copy cvx N fontname load 0 nn put}N
/ObliqueSlant{dup sin S cos div neg}B
/SlantFont{/foo X[1 0 foo 1 0 0] TransFont}N
/ExtendFont{/foo X 3 2 roll[S{foo div}forall]3 1 roll[foo 0 0 1 0 0]
TransFont}N
/ExpandFont{/foo X 3 2 roll[S{foo div}forall]3 1 roll[foo 0 0 foo 0 0]
TransFont}N
/TransFont{S findfont S makefont dup length dict /nn X{1 index
/FID ne{nn 3 1 roll put}{pop pop}ifelse}forall dup nn definefont pop}N end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N /vs
792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP false N /BBcalc false N
/p 3 def}B /@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{
@scaleunit div /vsc X}B /@hsize{/hs X /CLIP true N}B /@vsize{/vs X /CLIP true
N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{10 div /rwi X}
B /@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X /BBcalc true N}B
/magscale true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{md begin /letter{}N /note{}N /legal{}N /od{txpose 1 0 mtx
defaultmatrix dtransform S atan/pa X newpath clippath mark{transform{
itransform moveto}}{transform{itransform lineto}}{6 -2 roll transform 6 -2
roll transform 6 -2 roll transform{itransform 6 2 roll itransform 6 2 roll
itransform 6 2 roll curveto}}{{closepath}}pathforall newpath counttomark array
astore /gc xdf pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{
PaintBlack}if}N /txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR
pop 1 -1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0 TR}if
yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR pop pop 270
rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip not
and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg sub neg 0 TR}if yflip xflip
not and{TR pop pop 270 rotate ppr 2 get ppr 0 get neg sub neg 0 S TR}if}
ifelse scaleby96{ppr aload pop 4 -1 roll add 2 div 3 1 roll add 2 div 2 copy
TR .96 dup scale neg S neg S TR}if}N /cp{pop pop showpage pm restore}N end}if}
if}N /normalscale{Resolution 72 div VResolution 72 div neg scale magscale{
DVImag dup scale}if}N /psfts{S 65536 div N}N /startTexFig{/psf$SavedState save
N userdict maxlength dict begin /magscale false def normalscale currentpoint
TR /psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx psf$llx
sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy scale psf$cx
psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR /showpage{}N
/erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{psf$llx psf$lly
psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2 roll moveto 6 -1 roll
S lineto S lineto S lineto closepath clip newpath moveto}N /endTexFig{end
psf$SavedState restore}N /@beginspecial{SDict begin /SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults}N /@setspecial{CLIP{newpath 0 0
moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR
hsc vsc scale ang rotate BBcalc{rwi urx llx sub div dup scale llx neg lly neg
TR}if /showpage{}N /erasepage{}N /copypage{}N newpath}N /@endspecial{grestore
clear SpecialSave restore end}N /@defspecial{SDict begin}N /@fedspecial{end}B
/li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{/SaveX currentpoint /SaveY X N 1
setlinecap newpath}N /st{stroke SaveX SaveY moveto}N /fil{fill SaveX SaveY
moveto}N /ellipse{/endangle X /startangle X /yrad X /xrad X /savematrix matrix
currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc savematrix
setmatrix}N end
%%EndProcSet
TeXDict begin 1000 300 300 @start /Fa [ 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 12 18 18 30
22 7 11 11 13 19 9 11 9 9 18 18 18 18 18 18 18 18 18 18 9 9
19 19 19 18 34 22 22 24 24 22 20 26 24 9 17 22 18 28 24 26
22 26 24 22 20 24 22 31 22 22 20 9 9 9 16 18 7 18 18 17 18
18 9 18 18 7 7 17 7 28 18 18 18 18 11 17 9 18 17 24 17 17 17
11 9 11 19 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 11 18 18 6 18 18 18 18 6 11 18 11 11 17
17 0 18 18 18 9 0 18 12 7 11 11 18 33 33 0 20 0 11 11 11 11
11 11 11 11 0 11 11 0 11 11 11 33 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 33 0 12 0 0 0 0 18 26 33 12 0 0 0 0 0 30 0 0 0 9 0 0
7 20 31 20 0 0 0 0 ] /Helvetica-Oblique 1000 524288 rf /Fb
[ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 9 9 12 18 18 30 22 7 11 11 13 19 9 11 9 9 18 18 18 18
18 18 18 18 18 18 9 9 19 19 19 18 34 22 22 24 24 22 20 26 24
9 17 22 18 28 24 26 22 26 24 22 20 24 22 31 22 22 20 9 9 9
16 18 7 18 18 17 18 18 9 18 18 7 7 17 7 28 18 18 18 18 11 17
9 18 17 24 17 17 17 11 9 11 19 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 11 18 18 6 18 18 18
18 6 11 18 11 11 17 17 0 18 18 18 9 0 18 12 7 11 11 18 33 33
0 20 0 11 11 11 11 11 11 11 11 0 11 11 0 11 11 11 33 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 33 0 12 0 0 0 0 18 26 33 12 0 0 0
0 0 30 0 0 0 9 0 0 7 20 31 20 0 0 0 0 ] /Helvetica 1000 524288
rf /Fc 2 21 df<FFFFF0FFFFF014027D881B>0 D<0000300000F00003C0000700001E00007800
01E0000780000E00003C0000F00000F000003C00000E000007800001E000007800001E00000700
0003C00000F0000030000000000000000000000000000000000000FFFFF0FFFFF0141E7D951B>
20 D E /Fd 20 120 df<038003800380638CF39EFFFE3FF80FE00FE03FF8FFFEF39E638C0380
038003800F107E9214>42 D<70F8F8F8700505798414>46 D<0300070007000F003F00F7004700
07000700070007000700070007000700070007000700070007000700FFF0FFF00C177C9614>49
D<0FC03FF07838701CE01EE00EE00E400E000E001E001C003C007800F001E003C007800F001E00
3C0E700EFFFEFFFE0F177E9614>I<FFE0FFE0E000E000E000E000E000E000E000E000E000E000
E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000FFE0FFE00B1D799914
>91 D<FFE0FFE000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E0
00E000E000E000E000E000E000E000E000E0FFE0FFE00B1D7F9914>93 D<1FC0007FF000707800
203C00001C00001C0007FC001FFC007C1C00F01C00E01C00E01C00E01C00707C003FFF800F8F80
11107E8F14>97 D<007E00007E00000E00000E00000E00000E00000E0007CE001FFE003C3E0078
1E00700E00F00E00E00E00E00E00E00E00E00E00F00E00701E00781E003C3E001FFFC007CFC012
177F9614>100 D<07E01FF83C3C781C701EF00EE00EFFFEFFFEE000F0007000780E3C1E0FFC03
F00F107E8F14>I<007C01FE03CE0384038003800380FFFEFFFE03800380038003800380038003
80038003800380038003807FFC7FFC0F177F9614>I<07CF001FFF803C7B80783C00701C00701C
00701C00783C003C78003FF00077C0007000007000003FF8003FFE003FFF00700F80F00780E003
80E00380E003807007007C1F001FFC0007F00011197F8F14>I<03000780078003000000000000
000000FF80FF80038003800380038003800380038003800380038003800380FFFEFFFE0F187D97
14>105 D<FB8E00FFFF803EFB803CF38038E38038E38038E38038E38038E38038E38038E38038
E38038E38038E380FEFBE0FEFBE01310808F14>109 D<FC7800FDFE001F8F001E07001E07001C
07001C07001C07001C07001C07001C07001C07001C07001C0700FF9FE0FF9FE01310808F14>I<
07C01FF03C78701C701CE00EE00EE00EE00EE00EE00E701C783C3C781FF007C00F107E8F14>I<
FCF800FFFE001F0F001E07801C03801C03C01C01C01C01C01C01C01C01C01C03C01E03801E0780
1F0F001FFE001CF8001C00001C00001C00001C00001C00001C0000FF8000FF80001218808F14>
I<FF0F80FF3FC007F1C007C08007C0000780000700000700000700000700000700000700000700
00070000FFFC00FFFC001210808F14>114 D<0FD87FF8E078C038C038F0007F803FF007FC001E
E00EE006F006F81CFFF8CFE00F107E8F14>I<07000700070007000700FFFCFFFC070007000700
07000700070007000700070E070E070E079E03FC00F00F157F9414>I<FF7F80FF7F80380E0038
0E00380E00380E0039CE0039CE0019CC001B6C001B6C001A6C001A6C001E7C000E78000E780011
107F8F14>119 D E /Fe 41 123 df<000703C70FC70C401C001C001C001C001C00FFC7FFC71C
071C071C071C071C071C071C071C071C071C071C071C071C071018809713>12
D<0180030006000C001C001800380030007000700070006000E000E000E000E000E000E000E000
E000E000E00060007000700070003000380018001C000C0006000300018009227E980E>40
D<C0006000300018001C000C000E00060007000700070003000380038003800380038003800380
038003800380030007000700070006000E000C001C00180030006000C00009227E980E>I<E0E0
E0604040C003077D820A>44 D<FF80FF80090280880C>I<E0E0E003037D820A>I<00FF0003FFC0
0F83C01E00C01C0000380000700000700000E00000E00000E00000E00000E00000E00000E00000
7000007000003800001C00401E00C00F81C003FF8000FE0012177E9617>67
D<FFF000FFFC00E01E00E00700E00380E00380E001C0E001C0E000E0E000E0E000E0E000E0E000
E0E000E0E000E0E000C0E001C0E001C0E00380E00700E01E00FFFC00FFF00013177D9619>I<FF
FEFFFEE000E000E000E000E000E000E000E000FFF8FFF8E000E000E000E000E000E000E000E000
E000E000E0000F177D9614>70 D<E001C0E001C0E001C0E001C0E001C0E001C0E001C0E001C0E0
01C0E001C0FFFFC0FFFFC0E001C0E001C0E001C0E001C0E001C0E001C0E001C0E001C0E001C0E0
01C0E001C012177D9619>72 D<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E003177D
960A>I<F8001FF8001FE80017EC0037EC0037EE0077E60067E60067E700E7E300C7E381C7E381
C7E18187E1C387E1C387E0C307E0E707E0E707E06607E06607E03C07E03C07E03C0718177D961F
>77 D<01FC0007FF000F07801C01C03800E03800E0700070700070E00038E00038E00038E00038
E00038E00038E000387000707000703800E03800E01C01C00F078007FF0001FC0015177E961A>
79 D<FFF000FFFC00E01E00E00700E00380E00380E00380E00380E00380E00700E01E00FFFC00
FFF000E00000E00000E00000E00000E00000E00000E00000E00000E00000E0000011177D9617>
I<07E01FF8383C600CC00CC000C000E00070007E003FE00FF001F8001C000E000600060006C006
E00CF8387FF00FC00F177E9614>83 D<FFFFF8FFFFF80070000070000070000070000070000070
000070000070000070000070000070000070000070000070000070000070000070000070000070
0000700000700015177F9618>I<E00380E00380E00380E00380E00380E00380E00380E00380E0
0380E00380E00380E00380E00380E00380E00380E00380E00380E00380700700780F003C1E001F
FC0007F00011177D9618>I<E00FC01CE00FC01CE00DC01CE00CC01C701CE038701CE0387018E0
3830386030383870703838707038307070187030601C7038E01C6038E01C6018E00C6018C00EE0
1CC00EC01DC006C00D8006C00D8007C00F8007800F80038007001F177F9621>87
D<1FC07FE0707040380038003801F81FF87E38F038E038E038F0787FF83FB80D0F7F8E11>97
D<E000E000E000E000E000E000E000E000E7C0FFE0F870E038E038E01CE01CE01CE01CE01CE038
E038F0F0FFE0E7800E177E9612>I<07E01FF8381870007000E000E000E000E000E00070007008
38381FF807E00D0F7F8E10>I<001C001C001C001C001C001C001C001C079C1FFC3C3C701C701C
E01CE01CE01CE01CE01C701C703C387C1FFC0F9C0E177F9612>I<0F801FE0387070306038E018
FFF8FFF8E000E0006000700038181FF807E00D0F7F8E10>I<03E007E00C201C001C001C001C00
1C00FF80FF801C001C001C001C001C001C001C001C001C001C001C001C001C000B1780960B>I<
0F9F1FFF38F0707070707070707038E03FC06F80600070007FF03FF87FFC701EE00EE00EE00E78
3C3FF80FE010167F8E12>I<E000E000E000E000E000E000E000E000E7E0EFF0F878F038E038E0
38E038E038E038E038E038E038E038E038E0380D177E9612>I<E0E0E0000000000000E0E0E0E0
E0E0E0E0E0E0E0E0E0E0E003187E9708>I<E000E000E000E000E000E000E000E000E0F8E1F0E3
E0E3C0E780EF00FE00FF00FF80F380E1C0E1E0E0E0E0F0E0780D177E9611>107
D<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E003177E9608>I<E7E1F8EFF3FCF87E
1EF03C0EE0380EE0380EE0380EE0380EE0380EE0380EE0380EE0380EE0380EE0380EE0380E170F
7E8E1C>I<E7E0EFF0F878F038E038E038E038E038E038E038E038E038E038E038E0380D0F7E8E
12>I<07C01FF03838701C701CE00EE00EE00EE00EE00E701C701C3C781FF007C00F0F7F8E12>I<
E7C0FFE0F870E038E038E01CE01CE01CE01CE01CE038E038F0F0FFE0E780E000E000E000E000E0
00E0000E157E8E12>I<E380EF80FC00F800F000F000E000E000E000E000E000E000E000E000E0
00090F7E8E0C>114 D<1F007FC0E0C0E000E000F0007F003F800FC001E080E0C0E0E1C07FC01F
000B0F7F8E0E>I<3800380038003800FF80FF8038003800380038003800380038003800380038
0038401FC01F000A137F920D>I<E038E038E038E038E038E038E038E038E038E038E038E038E0
F87FF83F380D0F7E8E12>I<E038E038E03870707070707038E038E038E01CC01DC00D800D800F
8007000E0F7F8E10>I<E0F038E0F838E0D838E09838719C70719C70718C70310C603B0CE03B0E
E03B06E01A06C01A06C01E07C00E0380160F7F8E18>I<E038E038703870707070386038E018E0
1CC01CC00DC00D800580070007000700060006008C00FC00F8000E157F8E10>121
D<FFE0FFE001C001C00380070007000E001C001C00380070007000FFF0FFF00C0F7F8E0F>I
E /Ff 48 126 df<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E060C00B097D9312>34
D<0E700E700E700E70FFFEFFFE7FFE0E700E700E701CE01CE07FFEFFFEFFFE1CE01CE01CE01CE0
1CE00F147F9312>I<018007800F001E003C00380078007000F000E000E000E000E000E000E000
E000F0007000780038003C001E000F000780018009197B9612>40 D<C000F00078003C001E000E
000F00070007800380038003800380038003800380078007000F000E001E003C007800F000C000
09197D9612>I<070007000700E738FFF87FF01FC01FC07FF0FFF8E7380700070007000D0E7E90
12>I<038003800380038003800380FFFEFFFEFFFE0380038003800380038003800F0F7F9112>I<
307C7C3C0C1C38F0E006097A8312>I<FFF8FFF8FFF80D037E8B12>I<60F0F0600404798312>I<
0018003800380070007000E000E001C001C001C003800380070007000E000E001C001C001C0038
00380070007000E000E000C0000D1A7E9612>I<07C00FE01C703838701C701CE00EE00EE00EE0
0EE00EE00EE00EE01E701C701C38381C700FE007C00F147F9312>I<030007000F001F00FF00F7
000700070007000700070007000700070007000700070007007FF07FF00C147E9312>I<0F803F
E070F0F078E038E038403800380078007000F001E003C007800F001E0038387038FFF8FFF80D14
7E9312>I<0FE03FF0783C701C701C001C003C007807F007F0003C001C000E000EE00EE00EE01C
F83C3FF00FC00F147F9312>I<3078783000000000000030787838183830F0C005137A8D12>59
D<0038007801F003E00F801F003C00F800F000F8003C001F000F8003E001F0007800380D117E92
12>I<FFFEFFFE7FFE0000000000007FFEFFFEFFFE0F097F8E12>I<4000E000F0007C003E000F80
07C001E000F8007800F801E007C00F803E007C00F000E00040000D137E9312>I<FFC0FFF03878
3838381C381C381E380E380E380E380E380E380E380E381C381C38383878FFF0FFC00F147F9312
>68 D<FEFEFEFE3A383A383B383B383B383B383B383B3839B839B839B839B839B839B838B838B8
FEF8FEF80F147F9312>78 D<3FE07FF07070E038E038E038E038E038E038E038E038E038E038E0
38E738E3B8E3B873F07FF03FE000E000E000F0007000780D197E9312>81
D<FF80FFE038F03878383838383838387838F03FE03FE038F0387038703870387038773877FE3F
FE1C10147F9312>I<1F303FF070F0E0F0E070E070F000F0007F003FE00FF000F000780038E038
E038F078F070FFE0CF800D147E9312>I<FFC0FFC0E000E000E000E000E000E000E000E000E000
E000E000E000E000E000E000E000E000E000E000E000E000E000FFC0FFC00A1A7A9612>91
D<FFC0FFC001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C0
01C001C001C001C001C0FFC0FFC00A1A7F9612>93 D<FFF8FFF8FFF80D037E7F12>95
D<3F807FE070F0207000700FF03FF07870F070E070E070F0F07FFE1F3E0F0E7E8D12>97
D<07F01FF838387010F000E000E000E000E000F000703838781FF007E00D0E7E8D12>99
D<01F801F8003800380038003807B81FF838787078F038E038E038E038E038F038707878F81FFF
0FBF10147F9312>I<07801FE038F07078F038E038FFF8FFF8E000F000703838781FF007C00D0E
7E8D12>I<007E01FF03C7038203800380FFFEFFFE038003800380038003800380038003800380
03807FFC7FFC1014809312>I<0F9E1FFF38E7707070707070707038E03FC07F8070003FE03FF8
7FFCF01EE00EE00EE00EF01E783C3FF80FE010167F8D12>I<FC0000FC00001C00001C00001C00
001C00001CF0001FF8001F1C001E1C001C1C001C1C001C1C001C1C001C1C001C1C001C1C001C1C
00FF9F80FF9F801114809312>I<06000F000F000600000000000000FF00FF0007000700070007
00070007000700070007000700FFF8FFF80D157D9412>I<FF80FF800380038003800380038003
800380038003800380038003800380038003800380FFFEFFFE0F147F9312>108
D<FB8E00FFFF803EFB803CF38038E38038E38038E38038E38038E38038E38038E38038E380FEFB
E0FEFBE0130E818D12>I<FCF000FFF8001F1C001E1C001C1C001C1C001C1C001C1C001C1C001C
1C001C1C001C1C00FF9F80FF9F80110E808D12>I<0F803FE038E07070E038E038E038E038E038
F078707038E03FE00F800D0E7E8D12>I<FDF0FFF81F1E1E0E1C0F1C071C071C071C071C0F1E0E
1F1C1FF81DE01C001C001C001C001C00FF80FF801015808D12>I<FE7CFEFE0FCE0F840F000E00
0E000E000E000E000E000E00FFF0FFF00F0E7F8D12>114 D<1FF07FF0E070C070E000FF003FE0
0FF00078E018E018F038FFF0DFC00D0E7E8D12>I<0E000E000E000E00FFF8FFF80E000E000E00
0E000E000E000E000E380E380E7807F003C00D127F9112>I<FCFC00FCFC001C1C001C1C001C1C
001C1C001C1C001C1C001C1C001C1C001C1C001C3C000FFF8007DF80110E808D12>I<FEFEFEFE
38383C781C701C701C700EE00EE00EE006C007C007C003800F0E7F8D12>I<FEFEFEFE701C701C
301838383BB83FF83FF83AB838B81CF01CF01CF00F0E7F8D12>I<7FFC7FFC7038707000E001C0
038007000E001C1C381C701CFFFCFFFC0E0E7F8D12>122 D<00F803F807800700070007000700
07000700070007000F00FE00FE000F0007000700070007000700070007000700078003F800F80D
1A7E9612>I<F800FE000F0007000700070007000700070007000700078003F803F80780070007
000700070007000700070007000F00FE00F8000D1A7E9612>125 D E /Fg
18 120 df<70F8F8F8700505788416>46 D<01800380038007800F807F80FF8073800380038003
80038003800380038003800380038003800380038003807FF87FFC7FF80E197C9816>49
D<FFF0FFF0FFF0E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000
E000E000E000E000E000E000E000E000E000E000FFF0FFF0FFF00C20789C16>91
D<FFF0FFF0FFF00070007000700070007000700070007000700070007000700070007000700070
0070007000700070007000700070007000700070FFF0FFF0FFF00C207F9C16>93
D<1FE0007FF8007FFC00783C00301E00000E00000E0003FE001FFE007E0E00F00E00E00E00E00E
00F01E00F83E007FFFE03FE7E00F83E013127E9116>97 D<003F00007F00003F00000700000700
00070000070003C7000FF7003FFF003C1F00780F00F00700F00700E00700E00700E00700E00700
F00700F00F00781F007C3F003FFFE01FF7F007C7E014197F9816>100 D<03E00FF81FFC3C1E78
0E7007E007FFFFFFFFFFFFE000E000700778073C0F1FFE0FFC03F010127D9116>I<001F00007F
8000FF8001E78001C30001C00001C0007FFF00FFFF00FFFF0001C00001C00001C00001C00001C0
0001C00001C00001C00001C00001C00001C00001C0003FFE007FFF003FFE0011197F9816>I<FF
C000FFC000FFC00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001
C00001C00001C00001C00001C00001C00001C00001C00001C000FFFF80FFFF80FFFF8011197E98
16>108 D<F9C380FFEFC0FFFFE03E7CE03C78E03870E03870E03870E03870E03870E03870E038
70E03870E03870E03870E0FE7CF8FE7CF8FE3C781512809116>I<7E3C00FEFF007FFF800F8780
0F03800F03800E03800E03800E03800E03800E03800E03800E03800E03800E03807FC7F0FFE7F8
7FC7F01512809116>I<03E0000FF8001FFC003C1E00780F00700700E00380E00380E00380E003
80E00380F00780700700780F003C1E001FFC000FF80003E00011127E9116>I<7E3E00FEFF807F
FFC00F83E00F01E00E00F00E00F00E00700E00700E00700E00700E00F00F00E00F01E00F83C00F
FFC00EFF000E3C000E00000E00000E00000E00000E00000E00007FC000FFE0007FC000141B8091
16>I<FF0FC0FF3FE0FF7FE007F04007E00007C000078000078000070000070000070000070000
070000070000070000FFFC00FFFC00FFFC0013127F9116>114 D<0FEC3FFC7FFCF03CE01CE01C
F0007F801FF007FC003EE00EE00EF00EF81EFFFCFFF8C7E00F127D9116>I<0300000700000700
000700000700007FFF00FFFF00FFFF000700000700000700000700000700000700000700000701
0007038007038007078007878003FF0003FE0000F80011177F9616>I<7E1F80FE3F807E1F800E
03800E03800E03800E03800E03800E03800E03800E03800E03800E03800E07800F0F800FFFF007
FFF803E3F01512809116>I<FF1FE0FFBFE0FF1FE038038038038038038038038038E38019F300
19F30019B3001DB7001DB7001DB7001DB7000F1E000F1E000F1E0013127F9116>119
D E /Fh [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 14 17 24 28 28 44 36 14 17 17 19 29 14 17 14
14 28 28 28 28 28 28 28 28 28 28 17 17 29 29 29 30 49 36 36
36 36 33 30 39 36 14 28 36 30 41 36 39 33 39 36 33 30 36 33
47 33 33 30 17 14 17 29 28 14 28 30 28 30 28 17 30 30 14 14
28 14 44 30 30 30 30 19 28 17 30 28 39 28 28 25 19 14 19 29
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 17 28 28 8 28 28 28 28 12 25 28 17 17 30 30 0 28 28
28 14 0 28 17 14 25 25 28 50 50 0 30 0 17 17 17 17 17 17 17
17 0 17 17 0 17 17 17 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 50
0 18 0 0 0 0 30 39 50 18 0 0 0 0 0 44 0 0 0 14 0 0 14 30 47
30 0 0 0 0 ] /Helvetica-BoldOblique 1000 786432 rf /Fi 1 108
df<3C000C000C00180018001800187031903230340038007F00618061906190C1A0C0C00C117E
9010>107 D E /Fj 4 50 df<0102040C1818303070606060E0E0E0E0E0E0E0E0E0E060606070
303018180C04020108227D980E>40 D<8040203018180C0C0E0606060707070707070707070706
06060E0C0C18183020408008227E980E>I<003000003000003000003000003000003000003000
003000003000003000003000FFFFFCFFFFFC003000003000003000003000003000003000003000
00300000300000300000300016187E931B>43 D<03000700FF0007000700070007000700070007
0007000700070007000700070007000700070007007FF00C157E9412>49
D E /Fk 3 117 df<38F04518463846308C000C000C000C001800180018001800300030000D0E
7F8D10>114 D<07C00C201870187038001E000FC003E000606060E060C0C0C1803F000C0E7E8D
10>I<030003000600060006000600FFC00C000C000C0018001800180018003000308030803100
31001E000A147F930D>I E /Fl [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 11 14 17 17 28 26 11 11
11 17 19 8 11 8 9 17 17 17 17 17 17 17 17 17 17 9 9 19 19 19
15 31 24 22 22 24 20 18 24 24 11 13 24 20 30 24 24 18 24 22
18 20 24 24 31 24 24 20 11 9 11 16 17 11 15 17 15 17 15 11
17 17 9 9 17 9 26 17 17 17 17 11 13 9 17 17 24 17 17 15 16
7 16 18 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 11 17 17 6 17 17 17 17 6 15 17 11 11 18 18
0 17 17 17 8 0 15 12 11 15 15 17 33 33 0 15 0 11 11 11 11 11
11 11 11 0 11 11 0 11 11 11 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 30 0 9 0 0 0 0 20 24 30 10 0 0 0 0 0 22 0 0 0 9 0 0 9 17
24 17 0 0 0 0 ] /Times-Roman 1000 524288 rf /Fm 1 89 df<FFFFFFFFFFFFC0FFFFFFFF
FFFFE07F00000001FFE07F000000001FE03F8000000003F01FC000000000F00FC000000000380F
E0000000001807F0000000000C03F8000000000403F8000000000401FC000000000200FE000000
0000007F0000000000007F0000000000003F8000000000001FC000000000000FC000000000000F
E0000000000007F0000000000003F8000000000003F8000000000001FC000000000000FE000000
0000007E0000000000007F0000000000003F8000000000001FC000000000001FC000000000000F
C000000000000780000000000003800000000000070000000000000E0000000000001C00000000
0000380000000000007000000000000070000000000000E0000000000001C00000000000038000
00000000070000000000000E0000000000000E0000000000001C00000000020038000000000400
70000000000400E0000000000C01E0000000001801C00000000038038000000000F80700000000
01F00E000000000FF01C00000001FFF03FFFFFFFFFFFE03FFFFFFFFFFFE07FFFFFFFFFFFE0FFFF
FFFFFFFFC0373A7E7F3C>88 D E /Fn 1 1 df<FFFFC0FFFFC012027D871A>0
D E /Fo 7 111 df<0060006000E000C000C001C0018001800380030003000700060006000E00
0C000C001C0018001800380030003000700060006000E000C000C0000B1D7E9511>61
D<07FC1FC000E0060001C0080001C0100001C0600001C080000381000003860000038E0000039E
0000076700000787000007038000070380000E01C0000E01C0000E00E0000E00E0001C00F000FF
83FC001A147F931C>75 D<07F000FE00F000F0017001E0017002E0017002E0017004E0027009C0
023809C0023811C0023821C0043823800438438004388380041C8380081D0700081E0700081E07
00081C070018180E00FE187FC01F147F9320>77 D<07E01FC000E0060001700400017004000138
040001380400021C0800021C0800020E0800020E08000407100004071000040390000403900008
01E0000801E0000800E0000800E00018004000FE0040001A147F931A>I<006000700060000000
0000000000038004C0046008C008C000C000C0018001800180018003000300030003006600E600
CC0078000C1A81930E>106 D<3E0006000C000C000C000C001800187018B81938323034003800
3E006300631063106310C320C1C00D147E9312>I<30F8590C4E0C9C0C980C180C180C30183019
303130316032601C100D7F8C15>110 D E /Fp 11 62 df<006000006000006000006000006000
006000006000006000006000006000FFFFF0FFFFF0006000006000006000006000006000006000
00600000600000600000600014167E9119>43 D<0F0030C0606060604020C030C030C030C030C0
30C030C030C030C03040206060606030C00F000C137E9211>48 D<0C001C00EC000C000C000C00
0C000C000C000C000C000C000C000C000C000C000C000C00FFC00A137D9211>I<1F0060C06060
F070F030603000700070006000C001C00180020004000810101020207FE0FFE00C137E9211>I<
0FC030707038703870380038003000E00FC0007000380018001C601CF01CF018E03860701FC00E
137F9211>I<006000E000E00160026006600C600860106020606060C060FFFC00600060006000
60006003FC0E137F9211>I<60607FC07F8044004000400040004F0070C040E0006000700070E0
70E070E06040E021C01F000C137E9211>I<07C00C201070207060006000C000CF00D0C0E060C0
20C030C030C03040306020206010C00F000C137E9211>I<40007FFC7FF8401080108020004000
800100010003000200060006000E000E000E000E000E0004000E147E9311>I<0FC00030000840
08600870083C103F600F800FE031F06078C01CC00CC00CC00C601830300FC00E137F9211>I<7F
FFE0FFFFF0000000000000000000000000000000000000FFFFF07FFFE0140A7E8B19>61
D E /Fq [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 10 14 17 21 21 35 32 14 14 14 21 28 10 14 10
12 21 21 21 21 21 21 21 21 21 21 14 14 28 28 28 21 38 25 25
28 30 25 25 30 30 14 18 28 23 35 28 30 25 30 25 21 23 30 25
35 25 23 23 16 12 16 18 21 14 21 21 18 21 18 12 21 21 12 12
18 12 30 21 21 21 21 16 16 12 21 18 28 18 18 16 17 11 17 22
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 16 21 21 7 21 21 21 21 9 23 21 14 14 21 21 0 21 21
21 10 0 22 15 14 23 23 21 37 42 0 21 0 14 14 14 14 14 14 14
14 0 14 14 0 14 14 14 37 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 37
0 11 0 0 0 0 23 30 39 13 0 0 0 0 0 28 0 0 0 12 0 0 12 21 28
21 0 0 0 0 ] /Times-Italic 1000 655360 rf /Fr [ 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 21 30
35 35 55 45 17 21 21 24 36 17 21 17 17 35 35 35 35 35 35 35
35 35 35 21 21 36 36 36 38 61 45 45 45 45 42 38 48 45 17 35
45 38 52 45 48 42 48 45 42 38 45 42 59 42 42 38 21 17 21 36
35 17 35 38 35 38 35 21 38 38 17 17 35 17 55 38 38 38 38 24
35 21 38 35 48 35 35 31 24 17 24 36 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 21 35 35 10 35
35 35 35 15 31 35 21 21 38 38 0 35 35 35 17 0 35 22 17 31 31
35 62 62 0 38 0 21 21 21 21 21 21 21 21 0 21 21 0 21 21 21
62 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 62 0 23 0 0 0 0 38 48 62
23 0 0 0 0 0 55 0 0 0 17 0 0 17 38 59 38 0 0 0 0 ] /Helvetica-BoldOblique
1000 983040 rf /Fs [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 10 10 13 21 21 33 25 8 12 12 15 22
10 12 10 10 21 21 21 21 21 21 21 21 21 21 10 10 22 22 22 21
38 25 25 27 27 25 23 29 27 10 19 25 21 31 27 29 25 29 27 25
23 27 25 35 25 25 23 10 10 10 18 21 8 21 21 19 21 21 10 21
21 8 8 19 8 31 21 21 21 21 12 19 10 21 19 27 19 19 19 12 10
12 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 12 21 21 6 21 21 21 21 7 12 21 12 12 19 19 0
21 21 21 10 0 20 13 8 12 12 21 37 37 0 23 0 12 12 12 12 12
12 12 12 0 12 12 0 12 12 12 37 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 37 0 14 0 0 0 0 21 29 37 14 0 0 0 0 0 33 0 0 0 10 0 0 8
23 35 23 0 0 0 0 ] /Helvetica-Oblique 1000 589824 rf /Ft [
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 10 14 17 21 21 35 32 14 14 14 21 23 10 14 10 12 21 21 21
21 21 21 21 21 21 21 12 12 23 23 23 18 38 30 28 28 30 25 23
30 30 14 16 30 25 37 30 30 23 30 28 23 25 30 30 39 30 30 25
14 12 14 19 21 14 18 21 18 21 18 14 21 21 12 12 21 12 32 21
21 21 21 14 16 12 21 21 30 21 21 18 20 8 20 22 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 14
21 21 7 21 21 21 21 7 18 21 14 14 23 23 0 21 21 21 10 0 19
15 14 18 18 21 42 42 0 18 0 14 14 14 14 14 14 14 14 0 14 14
0 14 14 14 42 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 37 0 11 0 0 0
0 25 30 37 13 0 0 0 0 0 28 0 0 0 12 0 0 12 21 30 21 0 0 0 0
] /Times-Roman 1000 655360 rf /Fu 14 112 df<004000800100020006000C000C00180018
00300030007000600060006000E000E000E000E000E000E000E000E000E000E000E000E0006000
60006000700030003000180018000C000C00060002000100008000400A2A7D9E10>40
D<800040002000100018000C000C000600060003000300038001800180018001C001C001C001C0
01C001C001C001C001C001C001C001C0018001800180038003000300060006000C000C00180010
002000400080000A2A7E9E10>I<01800180018001804182F18F399C0FF003C003C00FF0399CF1
8F4182018001800180018010127E9E15>I<000600000006000000060000000600000006000000
06000000060000000600000006000000060000000600000006000000060000FFFFFFE0FFFFFFE0
000600000006000000060000000600000006000000060000000600000006000000060000000600
000006000000060000000600001B1C7E9720>I<03C00C301818300C300C700E60066006E007E0
07E007E007E007E007E007E007E007E007E007E007E00760066006700E300C300C18180C3007E0
101D7E9B15>48 D<030007003F00C7000700070007000700070007000700070007000700070007
0007000700070007000700070007000700070007000F80FFF80D1C7C9B15>I<07C01830201C40
0C400EF00FF80FF807F8077007000F000E000E001C001C00380070006000C00180030006010C01
180110023FFE7FFEFFFE101C7E9B15>I<000C00000C00001C00003C00003C00005C0000DC0000
9C00011C00031C00021C00041C000C1C00081C00101C00301C00201C00401C00C01C00FFFFC000
1C00001C00001C00001C00001C00001C00001C0001FFC0121C7F9B15>52
D<300C3FF83FF03FC020002000200020002000200023E024302818301C200E000E000F000F000F
600FF00FF00FF00F800E401E401C2038187007C0101D7E9B15>I<00F0030C06040C0E181E301E
300C700070006000E3E0E430E818F00CF00EE006E007E007E007E007E007600760077006300E30
0C18180C3003E0101D7E9B15>I<7FFFFFC0FFFFFFE00000000000000000000000000000000000
000000000000000000000000000000FFFFFFE07FFFFFC01B0C7E8F20>61
D<00038003C4C00C38C01C3880181800381C00381C00381C00381C001818001C38000C300013C0
001000003000001800001FF8001FFF001FFF803003806001C0C000C0C000C0C000C06001803003
001C0E0007F800121C7F9215>103 D<FC001C001C001C001C001C001C001C001C001C001C001C
001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C00FF80091D7F9C
0C>108 D<03F0000E1C00180600300300700380600180E001C0E001C0E001C0E001C0E001C0E0
01C06001807003803003001806000E1C0003F00012127F9115>111 D E
/Fv 19 117 df<60F0F06004047C830C>58 D<60F0F0701010101020204080040C7C830C>I<00
00038000000F0000003C000000F0000003C000000F0000003C000000F0000003C000000F000000
3C000000F0000000F00000003C0000000F00000003C0000000F00000003C0000000F00000003C0
000000F00000003C0000000F000000038019187D9520>I<00030003000700060006000E000C00
1C0018001800380030003000700060006000E000C000C001C00180038003000300070006000600
0E000C000C001C001800180038003000700060006000E000C000C00010297E9E15>I<0001F808
000E061800380138006000F001C0007003800070070000300F0000200E0000201C0000203C0000
203C000000780000007800000078000000F0000000F0000000F0007FF0F0000780F0000700F000
0700F00007007000070070000E0030000E0038000E001C001E000E0064000701840000FE00001D
1E7E9C21>71 D<01FFC3FF80003C00780000380070000038007000003800700000380070000070
00E000007000E000007000E000007000E00000E001C00000E001C00000E001C00000FFFFC00001
C003800001C003800001C003800001C00380000380070000038007000003800700000380070000
07000E000007000E000007000E000007000E00000F001E0000FFE1FFC000211C7E9B23>I<01FF
C07F80003C001E0000380018000038002000003800400000380080000070020000007004000000
70080000007010000000E040000000E0C0000000E1E0000000E2E0000001C470000001D0700000
01E038000001C0380000038038000003801C000003801C000003800E000007000E000007000E00
00070007000007000700000F00078000FFE03FF000211C7E9B23>75 D<01FE0000FF003E0000F0
002E0001E0002E0002E0002E0002E0002E0004E0004E0009C0004E0009C000470011C000470011
C00087002380008700438000870043800087008380010701070001070107000103820700010382
07000203840E000203880E000203880E000203900E000403A01C000403A01C000401C01C000C01
C01C001C01803C00FF8103FF80281C7E9B28>77 D<01FC00FF80001C001C00002E001800002E00
1000002E001000002700100000470020000043002000004380200000438020000081C040000081
C040000081C040000080E040000100E08000010070800001007080000100708000020039000002
00390000020039000002001D000004001E000004000E000004000E00000C000E00001C00040000
FF80040000211C7E9B21>I<01FFFE00003C03C0003800E0003800F00038007000380070007000
F0007000F0007000F0007001E000E001C000E0078000E01E0000FFF00001C0300001C0180001C0
1C0001C01C0003801C0003801C0003801C0003801C0007003C0007003C0807003C0807003C100F
001E10FFE00E20000007C01D1D7E9B20>82 D<000FC100303300400F0080060180060300060300
0606000406000407000007000007800003F00001FF0000FFC0003FE00003E00000F00000700000
300000302000302000306000606000606000C0600080F00300CC060083F800181E7E9C19>I<00
7180018B800307800607800E07000C07001C07001C0700380E00380E00380E00380E00381C0038
1C00381C00183C0008F800073800003800003800007000607000F06000F0E000E180007E000011
1A7F9114>103 D<0FC00001C00001C00003800003800003800003800007000007000007000007
00000E3E000EC3000F03800E03801E03801C03801C03801C0380380700380700380700380E0070
0E20700E20701C20701C40E00C80600700131D7E9C18>I<0007000F000F000600000000000000
00000000000070009C010C020C021C041C001C001C0038003800380038007000700070007000E0
00E000E000E001C061C0F180F300E6007C001024809B11>106 D<0FC00001C00001C000038000
0380000380000380000700000700000700000700000E07000E18800E21C00E23C01C47801C8300
1D00001E00003F800039C00038E00038E00070E10070E10070E10070E200E06200603C00121D7E
9C16>I<381F004E61804681C04701C08F01C08E01C00E01C00E01C01C03801C03801C03801C07
00380710380710380E10380E2070064030038014127E9119>110 D<383C4E424687470F8E1E8E
0C0E000E001C001C001C001C0038003800380038007000300010127E9113>114
D<01F0060C04040C0E180C1C001F000FE00FF003F80038201C7018F018F010803060601F800F12
7E9113>I<00C001C001C001C00380038003800380FFF00700070007000E000E000E000E001C00
1C001C001C00382038203840384018800F000C1A80990F>I E /Fw 7 121
df<FFFFFF80FFFFFF8019027D8A20>0 D<01800180018001804182F18F399C0FF003C003C00FF0
399CF18F4182018001800180018010127E9215>3 D<FFFFFFE0FFFFFFE0000000000000000000
00000000000000000000000000000000000000FFFFFFE0FFFFFFE0000000000000000000000000
00000000000000000000000000000000FFFFFFE0FFFFFFE01B147E9320>17
D<000001800000078000001E00000078000001E00000078000001E00000078000001E000000780
00001E00000078000000E0000000780000001E0000000780000001E0000000780000001E000000
0780000001E0000000780000001E00000007800000018000000000000000000000000000000000
000000000000000000000000FFFFFF80FFFFFF8019227D9920>20 D<0006000000000600000000
0C000000000C00000000180000000030000000007FFFFFF000FFFFFFF803800000000700000000
3C00000000F0000000003C000000000E00000000030000000001C000000000FFFFFFF8007FFFFF
F000300000000018000000000C000000000C0000000006000000000600000025187E952A>40
D<0000030000000003000000000180000000018000000000C00000000060007FFFFFF000FFFFFF
F8000000000E00000000070000000001E0000000007800000001E0000000038000000006000000
001C00FFFFFFF8007FFFFFF0000000006000000000C00000000180000000018000000003000000
0003000025187E952A>I<1F00308070406060E0E0E0E0E040E00060007000300018001C003300
718061C0E0C0E0E0E0E0E0E060E070C031C0198007000300018001C000C000E040E0E0E0E0E0C0
C041C021801F000B257D9C12>120 D E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300
TeXDict begin 
%%EndSetup
%%Page: 538 1
bop 0 50 a Ft(538)288 b Fs(Chapter)10 b(13.)52 b(Fourier)10
b(and)g(Spectral)h(Applications)p 0 68 1395 2 v 0 143 a @beginspecial
@setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial 51 x Fr(13.1)16 b(Convolution)21
b(and)g(Deconvolution)f(Using)138 269 y(the)k(FFT)83 394 y
Ft(W)m(e)15 b(have)g(de\256ned)f(the)h Fq(convolution)d Ft(of)i(two)g
(functions)f(for)h(the)g(continuous)f(case)i(in)0 443 y(equation)9
b(\(12.0.8\),)h(and)g(have)g(given)f(the)h Fq(convolution)e(theor)n(em)i
Ft(as)h(equation)e(\(12.0.9\).)14 b(The)0 493 y(theorem)d(says)g(that)f(the)g
(Fourier)g(transform)g(of)g(the)g(convolution)e(of)j(two)e(functions)h(is)g
(equal)0 543 y(to)k(the)g(product)f(of)i(their)e(individual)f(Fourier)i
(transforms.)27 b(Now)m(,)16 b(we)f(want)f(to)g(deal)h(with)0
593 y(the)c(discrete)g(case.)19 b(W)m(e)11 b(will)f(mention)g(\256rst)h(the)f
(context)h(in)f(which)h(convolution)d(is)j(a)g(useful)0 643
y(procedure,)i(and)f(then)f(discuss)h(how)f(to)h(compute)g(it)f(ef)o
(\256ciently)g(using)g(the)h(FFT)m(.)83 693 y(The)d(convolution)d(of)j(two)f
(functions)f Fv(r)q Fu(\()p Fv(t)p Fu(\))i Ft(and)f Fv(s)p
Fu(\()p Fv(t)p Fu(\))p Ft(,)j(denoted)d Fv(r)f Fw(\003)f Fv(s)p
Ft(,)i(is)h(mathematically)0 742 y(equal)20 b(to)f(their)f(convolution)f(in)i
(the)h(opposite)e(order)n(,)k Fv(s)14 b Fw(\003)e Fv(r)q Ft(.)43
b(Nevertheless,)23 b(in)c(most)0 792 y(applications)9 b(the)i(two)e
(functions)h(have)g(quite)g(dif)o(ferent)g(meanings)h(and)f(characters.)17
b(One)11 b(of)0 842 y(the)h(functions,)f(say)i Fv(s)p Ft(,)g(is)f(typically)e
(a)j(signal)e(or)h(data)g(stream,)h(which)f(goes)g(on)g(inde\256nitely)0
892 y(in)i(time)h(\(or)g(in)f(whatever)h(the)g(appropriate)f(independent)g
(variable)h(may)g(be\).)30 b(The)15 b(other)0 942 y(function)10
b Fv(r)j Ft(is)f(a)h(\252response)g(function,\272)e(typically)g(a)h(peaked)h
(function)d(that)i(falls)f(to)h(zero)g(in)0 991 y(both)e(directions)h(from)g
(its)g(maximum.)19 b(The)13 b(ef)o(fect)f(of)f(convolution)e(is)j(to)e(smear)
j(the)f(signal)0 1041 y Fv(s)p Fu(\()p Fv(t)p Fu(\))e Ft(in)f(time)g
(according)g(to)f(the)h(recipe)h(provided)e(by)g(the)h(response)h(function)e
Fv(r)q Fu(\()p Fv(t)p Fu(\))p Ft(,)i(as)f(shown)0 1091 y(in)f(Figure)g
(13.1.1.)14 b(In)8 b(particular)n(,)h(a)g(spike)f(or)g(delta-function)f(of)h
(unit)f(area)j(in)d Fv(s)i Ft(which)f(occurs)0 1141 y(at)13
b(some)h(time)f Fv(t)246 1147 y Fp(0)278 1141 y Ft(is)g(supposed)g(to)f(be)i
(smeared)g(into)e(the)h(shape)h(of)f(the)g(response)g(function)0
1191 y(itself,)i(but)e(translated)g(from)h(time)g(0)g(to)g(time)g
Fv(t)719 1197 y Fp(0)752 1191 y Ft(as)g Fv(r)q Fu(\()p Fv(t)d
Fw(\000)g Fv(t)920 1197 y Fp(0)939 1191 y Fu(\))p Ft(.)83 1240
y(In)e(the)h(discrete)f(case,)j(the)d(signal)g Fv(s)p Fu(\()p
Fv(t)p Fu(\))h Ft(is)g(represented)g(by)f(its)g(sampled)h(values)f(at)h
(equal)0 1290 y(time)f(intervals)f Fv(s)254 1296 y Fo(j)272
1290 y Ft(.)15 b(The)10 b(response)f(function)e(is)i(also)g(a)h(discrete)f
(set)g(of)g(numbers)g Fv(r)1221 1296 y Fo(k)1241 1290 y Ft(,)h(with)e(the)0
1340 y(following)d(interpretation:)11 b Fv(r)437 1346 y Fp(0)463
1340 y Ft(tells)c(what)h(multiple)e(of)h(the)h(input)e(signal)h(in)g(one)h
(channel)g(\(one)0 1390 y(particular)k(value)g(of)h Fv(j)r
Ft(\))g(is)f(copied)g(into)g(the)g(identical)g(output)e(channel)j(\(same)h
(value)f(of)f Fv(j)r Ft(\);)0 1440 y Fv(r)19 1446 y Fp(1)49
1440 y Ft(tells)f(what)g(multiple)f(of)h(input)f(signal)h(in)f(channel)i
Fv(j)i Ft(is)d(additionally)e(copied)j(into)e(output)0 1490
y(channel)h Fv(j)g Fu(+)f(1)p Ft(;)g Fv(r)272 1496 y Fn(\000)p
Fp(1)327 1490 y Ft(tells)f(the)i(multiple)d(that)i(is)g(copied)h(into)e
(channel)h Fv(j)i Fw(\000)e Fu(1)p Ft(;)f(and)i(so)f(on)g(for)0
1539 y(both)f(positive)g(and)i(negative)f(values)h(of)f Fv(k)i
Ft(in)d Fv(r)705 1545 y Fo(k)726 1539 y Ft(.)16 b(Figure)9
b(13.1.2)i(illustrates)e(the)h(situation.)83 1589 y(Example:)27
b(a)16 b(response)h(function)e(with)g Fv(r)729 1595 y Fp(0)764
1589 y Fu(=)i(1)f Ft(and)g(all)g(other)g Fv(r)1105 1595 y Fo(k)1125
1589 y Ft(')n(s)g(equal)g(to)f(zero)0 1639 y(is)e(just)g(the)g(identity)e
(\256lter:)21 b(convolution)11 b(of)i(a)h(signal)f(with)f(this)g(response)i
(function)e(gives)0 1689 y(identically)d(the)i(signal.)k(Another)10
b(example)h(is)g(the)f(response)h(function)e(with)h Fv(r)1180
1695 y Fp(14)1227 1689 y Fu(=)i(1)p Fv(:)p Fu(5)e Ft(and)0
1739 y(all)h(other)g Fv(r)169 1745 y Fo(k)189 1739 y Ft(')n(s)g(equal)h(to)f
(zero.)19 b(This)12 b(produces)f(convolved)g(output)e(that)i(is)g(the)h
(input)e(signal)0 1788 y(multiplied)i(by)i Fu(1)p Fv(:)p Fu(5)g
Ft(and)g(delayed)h(by)f Fu(14)g Ft(sample)h(intervals.)83 1838
y(Evidently)m(,)c(we)h(have)g(just)f(described)g(in)g(words)g(the)h
(following)d(de\256nition)g(of)j(discrete)0 1888 y(convolution)f(with)i(a)h
(response)g(function)f(of)g(\256nite)g(duration)g Fv(M)5 b
Ft(:)447 2017 y Fu(\()p Fv(r)10 b Fw(\003)f Fv(s)p Fu(\))557
2023 y Fo(j)587 2017 y Fw(\021)687 1961 y Fo(M)q(=)p Fp(2)690
1977 y Fm(X)631 2068 y Fo(k)q Fp(=)p Fn(\000)p Fo(M)q(=)p Fp(2+1)816
2017 y Fv(s)835 2023 y Fo(j)r Fn(\000)p Fo(k)909 2017 y Fv(r)928
2023 y Fo(k)1259 2017 y Fu(\()p Ft(13.1.1)p Fu(\))0 2149 y
Ft(If)j(a)h(discrete)f(response)h(function)e(is)h(nonzero)g(only)f(in)h(some)
h(range)g Fw(\000)p Fv(M)r(=)p Fu(2)h Fv(<)f(k)i Fw(\024)e
Fv(M)r(=)p Fu(2)p Ft(,)0 2199 y(where)g Fv(M)18 b Ft(is)12
b(a)i(suf)o(\256ciently)e(lar)o(ge)h(even)g(integer)n(,)h(then)e(the)g
(response)i(function)d(is)h(called)h(a)0 2248 y Fq(\256nite)c(impulse)g(r)n
(esponse)i(\(FIR\))p Ft(,)f(and)g(its)f Fq(duration)f Ft(is)h
Fv(M)c Ft(.)15 b(\(Notice)9 b(that)g(we)i(are)f(de\256ning)f
Fv(M)0 2298 y Ft(as)k(the)f(number)g(of)g(nonzero)g Fq(values)g
Ft(of)g Fv(r)626 2304 y Fo(k)646 2298 y Ft(;)g(these)h(values)f(span)h(a)f
(time)g(interval)f(of)h Fv(M)j Fw(\000)10 b Fu(1)0 2348 y Ft(sampling)g
(times.\))18 b(In)11 b(most)g(practical)g(circumstances)i(the)e(case)h(of)f
(\256nite)g Fv(M)16 b Ft(is)11 b(the)g(case)h(of)0 2398 y(interest,)c(either)
g(because)i(the)e(response)g(really)g(has)h(a)f(\256nite)g(duration,)f(or)h
(because)i(we)e(choose)0 2448 y(to)h(truncate)g(it)f(at)h(some)h(point)e(and)
h(approximate)g(it)f(by)h(a)h(\256nite-duration)c(response)k(function.)83
2497 y(The)i Fq(discr)n(ete)h(convolution)c(theor)n(em)j Ft(is)g(this:)17
b(If)11 b(a)h(signal)f Fv(s)983 2503 y Fo(j)1013 2497 y Ft(is)h
Fq(periodic)f Ft(with)g(period)0 2547 y Fv(N)5 b Ft(,)21 b(so)d(that)g(it)f
(is)i(completely)f(determined)g(by)g(the)g Fv(N)23 b Ft(values)c
Fv(s)1030 2553 y Fp(0)1049 2547 y Fv(;)7 b(:)g(:)g(:)e(;)i(s)1161
2553 y Fo(N)s Fn(\000)p Fp(1)1235 2547 y Ft(,)21 b(then)d(its)p
eop
%%Page: 539 2
bop 217 50 a Fs(13.1)10 b(Convolution)f(and)h(Deconvolution)f(Using)h(the)g
(FFT)258 b Ft(539)p 0 68 1395 2 v 0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore

@endspecial 95 1022 a @beginspecial -44 @llx 456 @lly 245
@urx 638 @ury 2890 @rwi @setspecial
%%BeginDocument: epsf/fig13x1x1.ps
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
/TX {pop} def
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def	% - cf flatness
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
[/_Times-Italic/Times-Italic 0 0 1 TZ
0 A
0 To
0.9 0 0 0.9 14.4382 607.2621 0 Tp
TP
-13.7228 0 Td
0 Tr
0 O
0 g
0 i 0 J 0 j 1 w 4 M []0 d
0 D
/_Times-Italic 10.0001 Tf
0 Ts
100 Tz
0 Tt
1 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
2 Ta
0 Tq
12.2223 0 Tl
0 Tc
0 Tw
(s) Tx 0 -40 Tk
(\(t\)) Tx
(\r) TX 
TO
0 R
0 G
0.5 w
17.8764 635.176 m
17.8764 583.0326 l
S
17.8764 609.3574 m
237.5874 609.3574 l
S
2 w
17.8764 609.3574 m
20.6608 609.3574 37.9997 609.3574 y
39.3919 609.6105 44.2012 614.5464 44.8341 616.3183 c
45.4669 618.0902 48.6309 626.5698 49.1372 628.0885 c
49.6434 629.6073 51.0747 632.3588 52.1746 631.7588 c
53.5668 630.9994 54.0731 627.5823 54.0731 625.3042 c
54.0731 623.0261 54.0731 616.4449 55.5918 615.8121 c
57.1105 615.1792 64.4511 614.1667 67.2355 613.9136 c
70.0198 613.6605 75.5885 614.9261 76.4745 611.6355 c
77.3604 608.3449 77.7401 604.4215 77.7401 603.2825 c
77.7401 602.1434 77.7401 594.8028 77.8666 593.9169 c
77.9932 593.031 78.3729 591.2591 79.6385 591.2591 c
80.9041 591.2591 82.0918 592.2277 82.8025 596.0684 c
83.6743 600.7794 86.915 609.9262 89.5103 612.5214 c
90.6494 613.6605 95.4587 619.1027 102.0399 619.3558 c
118.9992 619.3558 l
118.9992 630.8729 l
175.8254 630.8729 l
175.8254 609.3574 l
227.7156 609.3574 l
S
0.5 w
18.0171 573.167 m
18.0171 521.0236 l
S
-9.5734 547.3484 m
237.7281 547.3484 l
S
2 w
43.4025 547.6747 m
29.7339 547.6747 31.7307 565.2949 18.0621 565.2949 c
4.3934 565.2949 6.3903 547.6747 -7.2784 547.6747 c
S
0.5 w
17.9608 511.0987 m
17.9608 458.9553 l
S
-9.6296 485.2801 m
237.6718 485.2801 l
S
2 w
17.7077 485.4067 m
23.9092 485.5332 29.6081 491.1465 34.2873 492.6207 c
40.454 494.5636 48.0825 494.1394 50.3606 493.8863 c
52.6387 493.6332 60.7386 492.4941 65.548 487.4317 c
70.3573 482.3692 78.4439 478.2489 83.6463 478.3192 c
93.0119 478.4458 99.5581 485.3202 103.1368 489.2035 c
109.0852 495.6582 118.0711 503.2519 129.335 504.5175 c
140.599 505.7831 153.0021 505.0237 156.6724 504.8972 c
160.3426 504.7706 177.7212 503.0066 185.5284 496.1644 c
196.7924 486.2926 209.322 485.7864 232.3562 485.7864 c
S
0 To
0.9 0 0 0.9 -13.0116 545.1125 0 Tp
TP
-14.3228 0 Td
0 Tr
0 O
0 g
1 w
(r) Tx 0 -100 Tk
(\(t\)) Tx
(\r) TX 
TO
0 To
0.9 0 0 0.9 -13.2366 483.2129 0 Tp
TP
-23.512 0 Td
0 Tr
(r) Tx 0 -10 Tk
-1.9445 Ts
(*) Tx 0 -60 Tk
0 Ts
(s) Tx 0 -60 Tk
(\(t\)) Tx
(\r) TX 
TO
0 To
0.9 0 0 0.9 235.3867 601.1871 0 Tp
TP
-2.7783 0 Td
0 Tr
(t) Tx
(\r) TX 
TO
0 To
0.9 0 0 0.9 235.3867 539.0376 0 Tp
TP
-2.7783 0 Td
0 Tr
(t) Tx
(\r) TX 
TO
0 To
0.9 0 0 0.9 235.3867 477.0376 0 Tp
TP
-2.7783 0 Td
0 Tr
(t) Tx
(\r) TX 
TO
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 0 1084 a Fl(Figure)14 b(13.1.1.)57 b(Example)13
b(of)h(the)f(convolution)f(of)h(two)h(functions.)28 b(A)14
b(signal)f Fk(s)p Fj(\()p Fk(t)p Fj(\))h Fl(is)g(convolved)d(with)j(a)0
1122 y(response)8 b(function)g Fk(r)q Fj(\()p Fk(t)p Fj(\))p
Fl(.)15 b(Since)9 b(the)g(response)f(function)g(is)h(broader)f(than)h(some)f
(features)h(in)g(the)g(original)g(signal,)0 1159 y(these)i(are)f(\252washed)g
(out\272)h(in)g(the)g(convolution.)19 b(In)11 b(the)g(absence)e(of)i(any)f
(additional)h(noise,)g(the)g(process)f(can)g(be)0 1196 y(reversed)k(by)g
(deconvolution.)31 2324 y @beginspecial -41 @llx 419 @lly 279
@urx 659 @ury 3200 @rwi @setspecial
%%BeginDocument: epsf/fig13x1x2.ps
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
/TX {pop} def
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def	% - cf flatness
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
[/_Symbol/Symbol 0 0 0 TZ
[/_Times-Italic/Times-Italic 0 0 1 TZ
[/_Times-Roman/Times-Roman 0 0 1 TZ
0 A
0 To
0.9 0 0 0.9 -11.4368 614.7621 0 Tp
TP
-5.8958 0 Td
0 Tr
0 O
0 g
0 i 0 J 0 j 1 w 4 M []0 d
0 D
/_Times-Italic 10.0001 Tf
0 Ts
100 Tz
0 Tt
1 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
2 Ta
0 Tq
12.2223 0 Tl
0 Tc
0 Tw
(s) Tx
/_Times-Italic 7.2223 Tf
-1.6667 Ts
(j) Tx
(\r) TX 
TO
0 R
0 G
0.5 w
-6.6023 656.5789 m
-6.6023 584.0241 l
S
258.8419 656.5789 m
258.8419 584.0241 l
S
-6.6023 617.0572 m
258.8419 617.0572 l
S
0 O
0 g
1 w
10.5041 615.2875 m
11.4814 615.2875 12.2737 616.0798 12.2737 617.0572 c
12.2737 618.0345 11.4814 618.8268 10.5041 618.8268 c
9.5267 618.8268 8.7344 618.0345 8.7344 617.0572 c
8.7344 616.0798 9.5267 615.2875 10.5041 615.2875 c
f
10.5041 617.0572 m
F
27.0201 639.4725 m
27.9974 639.4725 28.7897 638.6802 28.7897 637.7028 c
28.7897 636.7255 27.9974 635.9332 27.0201 635.9332 c
26.0428 635.9332 25.2505 636.7255 25.2505 637.7028 c
25.2505 638.6802 26.0428 639.4725 27.0201 639.4725 c
f
43.5361 618.8268 m
44.5134 618.8268 45.3057 618.0345 45.3057 617.0572 c
45.3057 616.0798 44.5134 615.2875 43.5361 615.2875 c
42.5588 615.2875 41.7665 616.0798 41.7665 617.0572 c
41.7665 618.0345 42.5588 618.8268 43.5361 618.8268 c
f
60.0521 618.8268 m
61.0295 618.8268 61.8218 618.0345 61.8218 617.0572 c
61.8218 616.0798 61.0295 615.2875 60.0521 615.2875 c
59.0748 615.2875 58.2825 616.0798 58.2825 617.0572 c
58.2825 618.0345 59.0748 618.8268 60.0521 618.8268 c
f
93.0877 618.8268 m
94.065 618.8268 94.8573 618.0345 94.8573 617.0572 c
94.8573 616.0798 94.065 615.2875 93.0877 615.2875 c
92.1104 615.2875 91.3181 616.0798 91.3181 617.0572 c
91.3181 618.0345 92.1104 618.8268 93.0877 618.8268 c
f
109.6037 618.8268 m
110.5811 618.8268 111.3734 618.0345 111.3734 617.0572 c
111.3734 616.0798 110.5811 615.2875 109.6037 615.2875 c
108.6264 615.2875 107.8341 616.0798 107.8341 617.0572 c
107.8341 618.0345 108.6264 618.8268 109.6037 618.8268 c
f
126.1198 639.4725 m
127.0971 639.4725 127.8894 638.6802 127.8894 637.7028 c
127.8894 636.7255 127.0971 635.9332 126.1198 635.9332 c
125.1424 635.9332 124.3501 636.7255 124.3501 637.7028 c
124.3501 638.6802 125.1424 639.4725 126.1198 639.4725 c
f
142.6358 639.4725 m
143.6131 639.4725 144.4054 638.6802 144.4054 637.7028 c
144.4054 636.7255 143.6131 635.9332 142.6358 635.9332 c
141.6585 635.9332 140.8662 636.7255 140.8662 637.7028 c
140.8662 638.6802 141.6585 639.4725 142.6358 639.4725 c
f
159.1518 639.4725 m
160.1291 639.4725 160.9214 638.6802 160.9214 637.7028 c
160.9214 636.7255 160.1291 635.9332 159.1518 635.9332 c
158.1745 635.9332 157.3822 636.7255 157.3822 637.7028 c
157.3822 638.6802 158.1745 639.4725 159.1518 639.4725 c
f
175.6714 639.4725 m
176.6487 639.4725 177.441 638.6802 177.441 637.7028 c
177.441 636.7255 176.6487 635.9332 175.6714 635.9332 c
174.694 635.9332 173.9017 636.7255 173.9017 637.7028 c
173.9017 638.6802 174.694 639.4725 175.6714 639.4725 c
f
192.1874 639.4725 m
193.1647 639.4725 193.957 638.6802 193.957 637.7028 c
193.957 636.7255 193.1647 635.9332 192.1874 635.9332 c
191.2101 635.9332 190.4178 636.7255 190.4178 637.7028 c
190.4178 638.6802 191.2101 639.4725 192.1874 639.4725 c
f
208.7034 618.8268 m
209.6807 618.8268 210.473 618.0345 210.473 617.0572 c
210.473 616.0798 209.6807 615.2875 208.7034 615.2875 c
207.7261 615.2875 206.9338 616.0798 206.9338 617.0572 c
206.9338 618.0345 207.7261 618.8268 208.7034 618.8268 c
f
225.2194 618.8268 m
226.1968 618.8268 226.9891 618.0345 226.9891 617.0572 c
226.9891 616.0798 226.1968 615.2875 225.2194 615.2875 c
224.2421 615.2875 223.4498 616.0798 223.4498 617.0572 c
223.4498 618.0345 224.2421 618.8268 225.2194 618.8268 c
f
241.7355 615.2875 m
242.7128 615.2875 243.5051 616.0798 243.5051 617.0572 c
243.5051 618.0345 242.7128 618.8268 241.7355 618.8268 c
240.7581 618.8268 239.9658 618.0345 239.9658 617.0572 c
239.9658 616.0798 240.7581 615.2875 241.7355 615.2875 c
f
241.7355 617.0572 m
F
u
0 R
0 G
2 w
27.0206 637.7028 m
27.0206 617.0572 L
S
U
u
126.1198 637.7028 m
126.1198 617.0572 L
S
U
u
142.651 637.7028 m
142.651 617.0572 L
S
U
u
159.1233 637.7028 m
159.1233 617.0572 L
S
U
u
175.6546 637.7028 m
175.6546 617.0572 L
S
U
u
192.2449 637.7028 m
192.2449 617.0572 L
S
U
0 O
0 g
1 w
76.5697 594.6419 m
77.547 594.6419 78.3393 595.4342 78.3393 596.4115 c
78.3393 597.3888 77.547 598.1811 76.5697 598.1811 c
75.5924 598.1811 74.8 597.3888 74.8 596.4115 c
74.8 595.4342 75.5924 594.6419 76.5697 594.6419 c
f
u
0 R
0 G
2 w
76.5702 596.4115 m
76.5702 617.0572 L
S
U
0.5 w
-6.6023 575.176 m
-6.6023 502.6212 l
S
258.8419 575.176 m
258.8419 502.6212 l
S
-6.6023 535.6543 m
258.8419 535.6543 l
S
0 O
0 g
1 w
10.4888 553.9404 m
11.4661 553.9404 12.2584 553.1481 12.2584 552.1708 c
12.2584 551.1935 11.4661 550.4012 10.4888 550.4012 c
9.5115 550.4012 8.7192 551.1935 8.7192 552.1708 c
8.7192 553.1481 9.5115 553.9404 10.4888 553.9404 c
f
u
0 R
0 G
2 w
10.4893 552.1708 m
10.4893 535.6543 L
S
U
0.5 w
-6.6023 493.7731 m
-6.6023 421.2183 l
S
258.8419 493.7731 m
258.8419 421.2183 l
S
-6.6023 454.2514 m
258.8419 454.2514 l
S
0 O
0 g
1 w
27.0201 476.6667 m
27.9974 476.6667 28.7897 475.8744 28.7897 474.897 c
28.7897 473.9197 27.9974 473.1274 27.0201 473.1274 c
26.0428 473.1274 25.2505 473.9197 25.2505 474.897 c
25.2505 475.8744 26.0428 476.6667 27.0201 476.6667 c
f
126.1198 489.0541 m
127.0971 489.0541 127.8894 488.2618 127.8894 487.2845 c
127.8894 486.3071 127.0971 485.5148 126.1198 485.5148 c
125.1424 485.5148 124.3501 486.3071 124.3501 487.2845 c
124.3501 488.2618 125.1424 489.0541 126.1198 489.0541 c
f
142.6358 489.0541 m
143.6131 489.0541 144.4054 488.2618 144.4054 487.2845 c
144.4054 486.3071 143.6131 485.5148 142.6358 485.5148 c
141.6585 485.5148 140.8662 486.3071 140.8662 487.2845 c
140.8662 488.2618 141.6585 489.0541 142.6358 489.0541 c
f
159.1518 489.0541 m
160.1291 489.0541 160.9214 488.2618 160.9214 487.2845 c
160.9214 486.3071 160.1291 485.5148 159.1518 485.5148 c
158.1745 485.5148 157.3822 486.3071 157.3822 487.2845 c
157.3822 488.2618 158.1745 489.0541 159.1518 489.0541 c
f
175.6714 489.0541 m
176.6487 489.0541 177.441 488.2618 177.441 487.2845 c
177.441 486.3071 176.6487 485.5148 175.6714 485.5148 c
174.694 485.5148 173.9017 486.3071 173.9017 487.2845 c
173.9017 488.2618 174.694 489.0541 175.6714 489.0541 c
f
192.1874 489.0541 m
193.1647 489.0541 193.957 488.2618 193.957 487.2845 c
193.957 486.3071 193.1647 485.5148 192.1874 485.5148 c
191.2101 485.5148 190.4178 486.3071 190.4178 487.2845 c
190.4178 488.2618 191.2101 489.0541 192.1874 489.0541 c
f
225.2194 456.021 m
226.1968 456.021 226.9891 455.2287 226.9891 454.2514 c
226.9891 453.2741 226.1968 452.4817 225.2194 452.4817 c
224.2421 452.4817 223.4498 453.2741 223.4498 454.2514 c
223.4498 455.2287 224.2421 456.021 225.2194 456.021 c
f
241.7355 452.4817 m
242.7128 452.4817 243.5051 453.2741 243.5051 454.2514 c
243.5051 455.2287 242.7128 456.021 241.7355 456.021 c
240.7581 456.021 239.9658 455.2287 239.9658 454.2514 c
239.9658 453.2741 240.7581 452.4817 241.7355 452.4817 c
f
241.7355 454.2514 m
F
u
0 R
0 G
2 w
27.0206 474.897 m
27.0206 454.2514 L
S
U
u
126.1198 487.2845 m
126.1198 454.2514 L
S
U
u
142.651 487.2845 m
142.651 454.2514 L
S
U
u
159.1233 487.2845 m
159.1233 454.2514 L
S
U
u
175.6546 487.2845 m
175.6546 454.2514 L
S
U
u
192.2449 487.2845 m
192.2449 454.2514 L
S
U
0 O
0 g
1 w
76.5697 427.707 m
77.547 427.707 78.3393 428.4993 78.3393 429.4766 c
78.3393 430.4539 77.547 431.2462 76.5697 431.2462 c
75.5924 431.2462 74.8 430.4539 74.8 429.4766 c
74.8 428.4993 75.5924 427.707 76.5697 427.707 c
f
u
0 R
0 G
2 w
76.5702 429.4766 m
76.5702 454.2514 L
S
U
0 O
0 g
1 w
258.8118 553.9404 m
259.7891 553.9404 260.5814 553.1481 260.5814 552.1708 c
260.5814 551.1935 259.7891 550.4012 258.8118 550.4012 c
257.8345 550.4012 257.0421 551.1935 257.0421 552.1708 c
257.0421 553.1481 257.8345 553.9404 258.8118 553.9404 c
f
u
0 R
0 G
2 w
258.8123 552.1708 m
258.8123 535.6543 L
S
U
0 O
0 g
1 w
10.4888 472.5375 m
11.4661 472.5375 12.2584 471.7453 12.2584 470.7679 c
12.2584 469.7906 11.4661 468.9983 10.4888 468.9983 c
9.5115 468.9983 8.7192 469.7906 8.7192 470.7679 c
8.7192 471.7453 9.5115 472.5375 10.4888 472.5375 c
f
u
0 R
0 G
2 w
10.4893 470.7679 m
10.4893 454.2514 L
S
U
0 O
0 g
1 w
43.5514 472.5375 m
44.5287 472.5375 45.321 471.7453 45.321 470.7679 c
45.321 469.7906 44.5287 468.9983 43.5514 468.9983 c
42.574 468.9983 41.7817 469.7906 41.7817 470.7679 c
41.7817 471.7453 42.574 472.5375 43.5514 472.5375 c
f
u
0 R
0 G
2 w
43.5519 470.7679 m
43.5519 454.2514 L
S
U
0 O
0 g
1 w
60.0826 435.9652 m
61.0599 435.9652 61.8523 436.7575 61.8523 437.7349 c
61.8523 438.7122 61.0599 439.5045 60.0826 439.5045 c
59.1053 439.5045 58.313 438.7122 58.313 437.7349 c
58.313 436.7575 59.1053 435.9652 60.0826 435.9652 c
f
u
0 R
0 G
2 w
60.0831 437.7349 m
60.0831 454.2514 L
S
U
0 O
0 g
1 w
93.4106 435.9652 m
94.388 435.9652 95.1802 436.7575 95.1802 437.7349 c
95.1802 438.7122 94.388 439.5045 93.4106 439.5045 c
92.4333 439.5045 91.641 438.7122 91.641 437.7349 c
91.641 436.7575 92.4333 435.9652 93.4106 435.9652 c
f
u
0 R
0 G
2 w
93.4111 437.7349 m
93.4111 454.2514 L
S
U
0 O
0 g
1 w
109.9419 472.5375 m
110.9192 472.5375 111.7115 471.7453 111.7115 470.7679 c
111.7115 469.7906 110.9192 468.9983 109.9419 468.9983 c
108.9646 468.9983 108.1723 469.7906 108.1723 470.7679 c
108.1723 471.7453 108.9646 472.5375 109.9419 472.5375 c
f
u
0 R
0 G
2 w
109.9424 470.7679 m
109.9424 454.2514 L
S
U
0 O
0 g
1 w
209.1295 472.5375 m
210.1068 472.5375 210.8992 471.7453 210.8992 470.7679 c
210.8992 469.7906 210.1068 468.9983 209.1295 468.9983 c
208.1522 468.9983 207.3599 469.7906 207.3599 470.7679 c
207.3599 471.7453 208.1522 472.5375 209.1295 472.5375 c
f
u
0 R
0 G
2 w
209.13 470.7679 m
209.13 454.2514 L
S
U
0 O
0 g
1 w
-6.6323 566.3278 m
-5.655 566.3278 -4.8627 565.5355 -4.8627 564.5582 c
-4.8627 563.5809 -5.655 562.7886 -6.6323 562.7886 c
-7.6096 562.7886 -8.402 563.5809 -8.402 564.5582 c
-8.402 565.5355 -7.6096 566.3278 -6.6323 566.3278 c
f
u
0 R
0 G
2 w
-6.6318 564.5582 m
-6.6318 535.6543 L
S
U
u
0 O
1 g
1 w
-2.875 605.025 m
-2.875 614.025 L
-10.375 614.025 L
-10.375 605.025 L
-2.875 605.025 L
f
-6.625 609.525 m
F
U
0 To
0.9 0 0 0.9 -6.5618 606.5121 0 Tp
TP
-2.5 0 Td
0 Tr
0 g
/_Times-Roman 10.0001 Tf
0 Ts
1 Ta
(0) Tx
(\r) TX 
TO
u
1 g
-2.875 523.622 m
-2.875 532.622 L
-10.375 532.622 L
-10.375 523.622 L
-2.875 523.622 L
f
-6.625 528.122 m
F
U
0 To
0.9 0 0 0.9 -6.5618 525.1091 0 Tp
TP
-2.5 0 Td
0 Tr
0 g
(0) Tx
(\r) TX 
TO
u
1 g
-2.875 442.219 m
-2.875 451.219 L
-10.375 451.219 L
-10.375 442.219 L
-2.875 442.219 L
f
-6.625 446.719 m
F
U
0 To
0.9 0 0 0.9 -6.5618 443.7061 0 Tp
TP
-2.5 0 Td
0 Tr
0 g
(0) Tx
(\r) TX 
TO
u
1 g
262.625 523.622 m
262.625 532.622 L
255.125 532.622 L
255.125 523.622 L
262.625 523.622 L
f
258.875 528.122 m
F
U
0 To
0.9 0 0 0.9 258.9382 525.1091 0 Tp
TP
-11.0792 0 Td
0 Tr
0 g
/_Times-Italic 10.0001 Tf
(N) Tx
/_Times-Roman 10.0001 Tf
( ) Tx
/_Symbol 10.0001 Tf
0 TA
(-) Tx 
/_Times-Roman 10.0001 Tf
1 TA
( 1) Tx
(\r) TX 
TO
0 To
0.9 0 0 0.9 -11.4368 533.3591 0 Tp
TP
-7.2947 0 Td
0 Tr
/_Times-Italic 10.0001 Tf
2 Ta
(r) Tx 0 -20 Tk
/_Times-Italic 7.2223 Tf
-1.6667 Ts
(k) Tx
(\r) TX 
TO
0 To
0.9 0 0 0.9 -11.4368 451.9561 0 Tp
TP
-22.1403 0 Td
0 Tr
/_Times-Italic 10.0001 Tf
0 Ts
(\(r) Tx 0 -10 Tk
-1.9445 Ts
(*) Tx 0 -60 Tk
0 Ts
(s\)) Tx
/_Times-Italic 7.2223 Tf
-1.6667 Ts
(j) Tx
(\r) TX 
TO
u
1 g
262.625 605.122 m
262.625 614.122 L
255.125 614.122 L
255.125 605.122 L
262.625 605.122 L
f
258.875 609.622 m
F
U
0 To
0.9 0 0 0.9 258.9382 606.6091 0 Tp
TP
-11.0792 0 Td
0 Tr
0 g
/_Times-Italic 10.0001 Tf
0 Ts
1 Ta
(N) Tx
/_Times-Roman 10.0001 Tf
( ) Tx
/_Symbol 10.0001 Tf
0 TA
(-) Tx 
/_Times-Roman 10.0001 Tf
1 TA
( 1) Tx
(\r) TX 
TO
u
1 g
262.625 442.372 m
262.625 451.372 L
255.125 451.372 L
255.125 442.372 L
262.625 442.372 L
f
258.875 446.872 m
F
U
0 To
0.9 0 0 0.9 258.9382 443.8591 0 Tp
TP
-11.0792 0 Td
0 Tr
0 g
/_Times-Italic 10.0001 Tf
(N) Tx
/_Times-Roman 10.0001 Tf
( ) Tx
/_Symbol 10.0001 Tf
0 TA
(-) Tx 
/_Times-Roman 10.0001 Tf
1 TA
( 1) Tx
(\r) TX 
TO
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 0 2386 a(Figure)7 b(13.1.2.)22 b(Convolution)5
b(of)i(discretely)f(sampled)f(functions.)11 b(Note)6 b(how)g(the)h(response)e
(function)h(for)g(negative)0 2424 y(times)11 b(is)f(wrapped)g(around)e(and)i
(stored)g(at)h(the)f(extreme)g(right)g(end)g(of)g(the)g(array)g
Fk(r)1014 2430 y Fi(k)1033 2424 y Fl(.)p eop
%%Page: 540 3
bop 0 50 a Ft(540)288 b Fs(Chapter)10 b(13.)52 b(Fourier)10
b(and)g(Spectral)h(Applications)p 0 68 1395 2 v 0 143 a @beginspecial
@setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial 46 x Ft(discrete)j(convolution)d(with)i(a)i
(response)f(function)e Fq(of)g(\256nite)g(duration)f Fv(N)19
b Ft(is)14 b(a)g(member)h(of)0 239 y(the)i(discrete)h(Fourier)e(transform)h
(pair)n(,)456 318 y Fo(N=)p Fp(2)456 334 y Fm(X)400 425 y Fo(k)q
Fp(=)p Fn(\000)p Fo(N=)p Fp(2+1)579 374 y Fv(s)598 380 y Fo(j)r
Fn(\000)p Fo(k)672 374 y Fv(r)691 380 y Fo(k)764 374 y Fw(\()-7
b(\))52 b Fv(S)918 380 y Fo(n)941 374 y Fv(R)973 380 y Fo(n)1259
374 y Fu(\()p Ft(13.1.2)p Fu(\))0 513 y Ft(Here)21 b Fv(S)126
519 y Fo(n)149 513 y Fv(;)27 b Fu(\()p Fv(n)21 b Fu(=)g(0)p
Fv(;)7 b(:)g(:)g(:)e(;)i(N)17 b Fw(\000)c Fu(1\))21 b Ft(is)f(the)g(discrete)
g(Fourier)g(transform)g(of)g(the)g(values)0 562 y Fv(s)19 568
y Fo(j)37 562 y Fv(;)k Fu(\()p Fv(j)c Fu(=)e(0)p Fv(;)7 b(:)g(:)g(:)t(;)g(N)
16 b Fw(\000)c Fu(1\))p Ft(,)19 b(while)d Fv(R)589 568 y Fo(n)611
562 y Fv(;)24 b Fu(\()p Fv(n)17 b Fu(=)h(0)p Fv(;)7 b(:)g(:)g(:)t(;)g(N)16
b Fw(\000)c Fu(1\))17 b Ft(is)f(the)h(discrete)g(Fourier)0
612 y(transform)c(of)f(the)h(values)g Fv(r)424 618 y Fo(k)444
612 y Fv(;)21 b Fu(\()p Fv(k)15 b Fu(=)f(0)p Fv(;)7 b(:)g(:)g(:)e(;)i(N)14
b Fw(\000)d Fu(1\))p Ft(.)23 b(These)15 b(values)e(of)g Fv(r)1149
618 y Fo(k)1182 612 y Ft(are)h(the)e(same)0 662 y(ones)h(as)h(for)f(the)g
(range)h Fv(k)h Fu(=)f Fw(\000)p Fv(N)q(=)p Fu(2)d(+)g(1)p
Fv(;)c(:)g(:)g(:)t(;)g(N)q(=)p Fu(2)p Ft(,)14 b(but)e(in)h(wrap-around)f
(order)n(,)j(exactly)0 712 y(as)j(was)f(described)g(at)g(the)g(end)g(of)f
Fw(x)q Ft(12.2.)0 808 y Fh(T)o(reatment)e(of)g(End)h(Ef)o(fects)d(by)i(Zero)g
(Padding)83 903 y Ft(The)j(discrete)g(convolution)d(theorem)j(presumes)h(a)f
(set)g(of)f(two)h(circumstances)h(that)0 953 y(are)e(not)e(universal.)28
b(First,)16 b(it)e(assumes)i(that)e(the)h(input)e(signal)h(is)h(periodic,)h
(whereas)g(real)0 1003 y(data)g(often)f(either)h(go)f(forever)h(without)e
(repetition)g(or)h(else)i(consist)e(of)h(one)f(nonperiodic)0
1053 y(stretch)e(of)g(\256nite)g(length.)23 b(Second,)15 b(the)e(convolution)
e(theorem)i(takes)h(the)f(duration)f(of)h(the)0 1103 y(response)i(to)g(be)g
(the)g(same)i(as)f(the)f(period)f(of)h(the)g(data;)i(they)e(are)h(both)e
Fv(N)5 b Ft(.)29 b(W)m(e)16 b(need)f(to)0 1152 y(work)i(around)f(these)i(two)
f(constraints.)83 1202 y(The)h(second)g(is)g(very)f(straightforward.)36
b(Almost)17 b(always,)j(one)e(is)f(interested)g(in)g(a)0 1252
y(response)f(function)e(whose)i(duration)e Fv(M)21 b Ft(is)16
b(much)g(shorter)f(than)g(the)h(length)f(of)g(the)h(data)0
1302 y(set)j Fv(N)5 b Ft(.)41 b(In)18 b(this)g(case,)23 b(you)18
b(simply)g(extend)h(the)f(response)h(function)f(to)g(length)f
Fv(N)24 b Ft(by)0 1352 y(padding)18 b(it)h(with)f(zeros,)23
b(i.e.,)g(de\256ne)d Fv(r)632 1358 y Fo(k)672 1352 y Fu(=)h(0)e
Ft(for)g Fv(M)r(=)p Fu(2)h Fw(\024)h Fv(k)g Fw(\024)f Fv(N)q(=)p
Fu(2)f Ft(and)h(also)f(for)0 1402 y Fw(\000)p Fv(N)q(=)p Fu(2)8
b(+)h(1)i Fw(\024)h Fv(k)g Fw(\024)g(\000)p Fv(M)r(=)p Fu(2)e(+)f(1)p
Ft(.)15 b(Dealing)9 b(with)g(the)h(\256rst)f(constraint)g(is)g(more)i
(challenging.)0 1451 y(Since)18 b(the)f(convolution)e(theorem)i(rashly)g
(assumes)i(that)d(the)h(data)h(are)g(periodic,)h(it)d(will)0
1501 y(falsely)e(\252pollute\272)g(the)g(\256rst)h(output)d(channel)j
Fu(\()p Fv(r)d Fw(\003)e Fv(s)p Fu(\))814 1507 y Fp(0)848 1501
y Ft(with)k(some)h(wrapped-around)f(data)0 1551 y(from)i(the)h(far)g(end)f
(of)h(the)f(data)h(stream)g Fv(s)655 1557 y Fo(N)s Fn(\000)p
Fp(1)730 1551 y Fv(;)7 b(s)768 1557 y Fo(N)s Fn(\000)p Fp(2)842
1551 y Ft(,)18 b(etc.)35 b(\(See)17 b(Figure)g(13.1.3.\))34
b(So,)0 1601 y(we)14 b(need)g(to)f(set)g(up)g(a)h(buf)o(fer)f(zone)h(of)f
(zero-padded)h(values)f(at)h(the)f(end)h(of)f(the)g Fv(s)1251
1607 y Fo(j)1282 1601 y Ft(vector)n(,)0 1651 y(in)i(order)g(to)g(make)i(this)
d(pollution)f(zero.)32 b(How)15 b(many)h(zero)g(values)g(do)f(we)h(need)g(in)
f(this)0 1700 y(buf)o(fer?)g(Exactly)10 b(as)h(many)g(as)g(the)f(most)g
(negative)g(index)f(for)h(which)g(the)g(response)g(function)0
1750 y(is)g(nonzero.)17 b(For)10 b(example,)i(if)e Fv(r)484
1756 y Fn(\000)p Fp(3)539 1750 y Ft(is)g(nonzero,)h(while)f
Fv(r)854 1756 y Fn(\000)p Fp(4)898 1750 y Fv(;)d(r)936 1756
y Fn(\000)p Fp(5)980 1750 y Fv(;)g(:)g(:)g(:)i Ft(are)i(all)g(zero,)g(then)f
(we)0 1800 y(need)15 b(three)f(zero)h(pads)g(at)f(the)g(end)h(of)f(the)g
(data:)22 b Fv(s)787 1806 y Fo(N)s Fn(\000)p Fp(3)877 1800
y Fu(=)16 b Fv(s)944 1806 y Fo(N)s Fn(\000)p Fp(2)1034 1800
y Fu(=)f Fv(s)1100 1806 y Fo(N)s Fn(\000)p Fp(1)1190 1800 y
Fu(=)g(0)p Ft(.)28 b(These)0 1850 y(zeros)15 b(will)d(protect)i(the)f
(\256rst)h(output)e(channel)i Fu(\()p Fv(r)e Fw(\003)e Fv(s)p
Fu(\))829 1856 y Fp(0)862 1850 y Ft(from)k(wrap-around)f(pollution.)23
b(It)0 1900 y(should)10 b(be)h(obvious)f(that)h(the)g(second)g(output)e
(channel)j Fu(\()p Fv(r)e Fw(\003)g Fv(s)p Fu(\))946 1906 y
Fp(1)976 1900 y Ft(and)h(subsequent)g(ones)g(will)0 1949 y(also)h(be)g
(protected)g(by)f(these)h(same)i(zeros.)21 b(Let)12 b Fv(K)j
Ft(denote)d(the)g(number)f(of)h(padding)f(zeros,)0 1999 y(so)k(that)f(the)h
(last)g(actual)g(input)e(data)j(point)d(is)i Fv(s)729 2005
y Fo(N)s Fn(\000)p Fo(K)r Fn(\000)p Fp(1)859 1999 y Ft(.)83
2049 y(What)i(now)g(about)f(pollution)e(of)j(the)g(very)f Fq(last)h
Ft(output)e(channel?)35 b(Since)18 b(the)f(data)0 2099 y(now)c(end)h(with)e
Fv(s)265 2105 y Fo(N)s Fn(\000)p Fo(K)r Fn(\000)p Fp(1)395
2099 y Ft(,)j(the)e(last)g(output)f(channel)i(of)f(interest)g(is)g
Fu(\()p Fv(r)e Fw(\003)g Fv(s)p Fu(\))1156 2105 y Fo(N)s Fn(\000)p
Fo(K)r Fn(\000)p Fp(1)1286 2099 y Ft(.)25 b(This)0 2149 y(channel)14
b(can)g(be)g(polluted)e(by)h(wrap-around)g(from)g(input)f(channel)i
Fv(s)1053 2155 y Fp(0)1086 2149 y Ft(unless)g(the)f(number)0
2199 y Fv(K)20 b Ft(is)d(also)g(lar)o(ge)g(enough)g(to)f(take)h(care)i(of)d
(the)h(most)g(positive)f(index)g Fv(k)i Ft(for)e(which)h(the)0
2248 y(response)c(function)e Fv(r)328 2254 y Fo(k)361 2248
y Ft(is)h(nonzero.)22 b(For)13 b(example,)h(if)e Fv(r)859 2254
y Fp(0)890 2248 y Ft(through)f Fv(r)1051 2254 y Fp(6)1082 2248
y Ft(are)i(nonzero,)h(while)0 2298 y Fv(r)19 2304 y Fp(7)37
2298 y Fv(;)7 b(r)75 2304 y Fp(8)100 2298 y Fv(:)g(:)g(:)k
Ft(are)i(all)g(zero,)g(then)g(we)g(need)g(at)f(least)h Fv(K)k
Fu(=)d(6)e Ft(padding)f(zeros)i(at)g(the)f(end)h(of)f(the)0
2348 y(data:)29 b Fv(s)129 2354 y Fo(N)s Fn(\000)p Fp(6)222
2348 y Fu(=)18 b Fv(:)7 b(:)g(:)17 b Fu(=)i Fv(s)409 2354 y
Fo(N)s Fn(\000)p Fp(1)501 2348 y Fu(=)g(0)p Ft(.)83 2398 y(T)m(o)f(summarize)
h(\320)e(we)h(need)g(to)f(pad)h(the)f(data)h(with)f(a)h(number)f(of)h(zeros)g
Fq(on)d(one)0 2448 y(end)k Ft(equal)f(to)g(the)g(maximum)h(positive)e
(duration)g Fq(or)i Ft(maximum)g(negative)f(duration)f(of)0
2497 y(the)c(response)h(function,)e Fq(whichever)h(is)f(lar)n(ger)p
Ft(.)25 b(\(For)13 b(a)g(symmetric)h(response)g(function)d(of)0
2547 y(duration)e Fv(M)c Ft(,)10 b(you)g(will)f(need)h(only)f
Fv(M)r(=)p Fu(2)i Ft(zero)f(pads.\))16 b(Combining)8 b(this)h(operation)g
(with)g(the)p eop
%%Page: 541 4
bop 217 50 a Fs(13.1)10 b(Convolution)f(and)h(Deconvolution)f(Using)h(the)g
(FFT)258 b Ft(541)p 0 68 1395 2 v 0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore

@endspecial 141 1089 a @beginspecial 138 @llx 304 @lly 405
@urx 530 @ury 2670 @rwi @setspecial
%%BeginDocument: epsf/fig13x1x3.ps
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
/TX {pop} def
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def	% - cf flatness
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
[/_Symbol/Symbol 0 0 0 TZ
[/_Times-Italic/Times-Italic 0 0 1 TZ
[/_Times-Roman/Times-Roman 0 0 1 TZ
0 A
0 R
0 G
0 i 0 J 0 j 0.5 w 4 M []0 d
0 D
144.8663 488.3222 m
184.6106 488.3222 l
S
u
0 O
1 g
1 w
171.25 484.8125 m
171.25 491.6875 L
158.5 491.6875 L
158.5 484.8125 L
171.25 484.8125 L
f
U
0 To
1 0 0 1 165.125 486.0625 0 Tp
TP
-5.2573 0 Td
0 Tr
0 g
/_Times-Italic 9 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 Tq
11 0 Tl
0 Tc
0 Tw
(m) Tx 0 -50 Tk 
/_Symbol 6.5 Tf
-1.5 Ts
(+) Tx 
(\r) TX 
TO
u
0 R
0 G
0.5 w
143.4913 524.2991 m
143.4913 477.4999 L
S
399.1321 477.4999 m
399.1321 524.2991 L
S
143.4913 500.8995 m
399.1321 500.8995 L
S
U
u
143.4913 439.7006 m
143.4913 392.9014 L
S
399.1321 392.9014 m
399.1321 439.7006 L
S
143.4913 416.301 m
399.1321 416.301 L
S
143.4913 329.7224 m
399.1321 329.7224 L
S
U
u
143.4913 352.8295 m
143.4913 306.0303 L
S
399.1321 306.0303 m
399.1321 352.8295 L
S
U
u
185.6106 507.9194 m
185.6106 493.8796 L
S
U
u
335.3682 507.9194 m
335.3682 493.8796 L
S
U
2 w
143.4181 524.2991 m
145.9775 524.2991 155.0448 521.0817 157.7504 519.6192 c
160.456 518.1567 169.8564 513.4322 172.887 510.7712 c
175.8851 508.1388 180.3457 501.0458 185.6106 500.8995 c
S
335.3682 500.8995 m
337.7812 501.0458 351.821 504.0438 353.8685 504.9944 c
355.916 505.945 372.8155 512.4336 374.855 513.6962 c
377.9262 515.5974 384.0686 517.2792 388.3829 517.4255 c
399.1321 517.4255 l
S
0.5 w
177.0757 510.7693 m
193.6005 520.6617 329.5583 522.3742 357.7904 509.0543 c
S
1 w
143.4913 500.8995 m
185.6106 500.8995 l
S
0.5 w
336.7644 488.3222 m
398.0696 488.3222 l
S
2 w
143.4913 430.0483 m
181.5157 430.0483 185.0277 406.116 198.4804 406.3562 c
214.8601 406.6487 225.9749 443.2106 239.4297 443.2106 c
257.2719 443.2106 265.4618 406.0637 274.2366 406.0637 c
284.474 406.0637 289.7414 445.6342 298.5138 445.843 c
304.6562 445.9893 302.9012 441.1631 308.1661 440.8706 c
313.431 440.5781 313.7235 443.7956 317.6722 443.7956 c
321.6209 443.7956 323.5228 440.0581 326.447 439.9931 c
333.0282 439.8469 337.2113 443.2982 340.4868 442.4794 c
349.8467 440.1394 359.2162 406.6977 371.4913 405.7712 c
379.2424 405.1862 391.381 413.8148 399.1321 414.3998 c
S
u
0.5 w
205.7928 423.3209 m
205.7928 409.2811 L
S
U
u
362.2777 423.3209 m
362.2777 409.2811 L
S
U
363.339 425.1984 m
397.8821 425.1984 l
S
167.4759 416.301 m
177.0357 378.6262 225.4841 362.1875 260.2149 357.3132 c
276.8872 354.9732 329.7008 352.8945 363.6302 333.0048 c
S
377.4875 416.301 m
371.9301 390.2689 323.7299 372.6907 303.7787 365.6993 c
269.5567 353.707 201.1128 352.8295 170.4008 332.6474 c
S
u
185.0256 336.7423 m
185.0256 322.7025 L
S
U
u
334.7832 336.7423 m
334.7832 322.7025 L
S
U
187.0881 315.3901 m
334.0757 315.3901 l
S
0 To
1 0 0 1 164.25 313.75 0 Tp
TP
-12.9979 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Roman 9 Tf
0 Ts
(spoiled) Tx 
(\r) TX 
TO
0 To
1 0 0 1 367.5 313.75 0 Tp
TP
-12.9979 0 Td
0 Tr
(spoiled) Tx 
(\r) TX 
TO
u
1 g
279 312.25 m
279 319.5 L
240 319.5 L
240 312.25 L
279 312.25 L
f
259.5 315.875 m
F
U
0 To
1 0 0 1 259.5 313.75 0 Tp
TP
-17.4979 0 Td
0 Tr
0 g
(unspoiled) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
144.7756 401.0151 m
204.7007 401.0151 l
S
u
0 O
1 g
1 w
168.125 397.5 m
168.125 404.375 L
155.25 404.375 L
155.25 397.5 L
168.125 397.5 L
f
160.875 400.9375 m
F
U
0 To
1 0 0 1 162.625 398.75 0 Tp
TP
-5.2573 0 Td
0 Tr
0 g
/_Times-Italic 9 Tf
(m) Tx 0 -50 Tk 
/_Symbol 6.5 Tf
-1.5 Ts
(-) Tx 
(\r) TX 
TO
1 g
300.375 514.75 m
300.375 522 L
232.625 522 L
232.625 514.75 L
300.375 514.75 L
f
0 To
1 0 0 1 266.5 516.25 0 Tp
TP
-31.8625 0 Td
0 Tr
0 g
/_Times-Roman 9 Tf
0 Ts
(response function) Tx 
(\r) TX 
TO
1 g
294.375 418.75 m
294.375 429 L
206.875 429 L
206.875 418.75 L
294.375 418.75 L
f
0 To
1 0 0 1 260.5 421.25 0 Tp
TP
-48.8584 0 Td
0 Tr
0 g
(sample of original function) Tx 
(\r) TX 
TO
0 To
1 0 0 1 260 334.25 0 Tp
TP
-21.498 0 Td
0 Tr
(convolution) Tx 
(\r) TX 
TO
u
1 g
387.75 421.5625 m
387.75 428.4375 L
375 428.4375 L
375 421.5625 L
387.75 421.5625 L
f
U
0 To
1 0 0 1 381.625 422.8125 0 Tp
TP
-5.2573 0 Td
0 Tr
0 g
/_Times-Italic 9 Tf
(m) Tx 0 -50 Tk 
/_Symbol 6.5 Tf
-1.5 Ts
(+) Tx 
(\r) TX 
TO
u
1 g
375.875 485 m
375.875 491.875 L
363 491.875 L
363 485 L
375.875 485 L
f
368.625 488.4375 m
F
U
0 To
1 0 0 1 370.375 486.25 0 Tp
TP
-5.2573 0 Td
0 Tr
0 g
/_Times-Italic 9 Tf
0 Ts
(m) Tx 0 -50 Tk 
/_Symbol 6.5 Tf
-1.5 Ts
(-) Tx 
(\r) TX 
TO
u
144.9575 488.1676 m
144.9376 488.1275 L
145.6774 487.6376 146.4073 487.0977 146.9772 486.4078 c
146.8372 486.2378 L
145.8774 486.8977 144.8976 487.5377 143.8877 488.1275 c
143.8877 488.5274 L
144.8976 489.0973 145.8774 489.7373 146.8472 490.3871 c
146.9872 490.2272 L
146.3873 489.5673 145.6874 489.0074 144.9376 488.5375 c
144.9575 488.4974 L
144.9575 488.1676 L
f
U
u
184.2925 488.1676 m
184.3124 488.1275 L
183.5726 487.6376 182.8427 487.0977 182.2728 486.4078 c
182.4128 486.2378 L
183.3726 486.8977 184.3524 487.5377 185.3623 488.1275 c
185.3623 488.5274 L
184.3524 489.0973 183.3726 489.7373 182.4028 490.3871 c
182.2628 490.2272 L
182.8627 489.5673 183.5626 489.0074 184.3124 488.5375 c
184.2925 488.4974 L
184.2925 488.1676 L
f
U
u
177.2366 510.5717 m
177.2384 510.5269 L
178.1226 510.4522 179.022 510.3289 179.8531 509.9972 c
179.8119 509.7809 L
178.6531 509.8992 177.4864 509.9903 176.3174 510.023 c
176.1254 510.3739 L
176.7379 511.3585 177.2902 512.3903 177.8291 513.4257 c
178.0287 513.3527 L
177.8192 512.4858 177.4739 511.6587 177.0417 510.8867 c
177.0783 510.861 L
177.2366 510.5717 L
f
U
u
357.6218 508.9034 m
357.6231 508.8586 L
356.7463 508.7224 355.8577 508.5366 355.0518 508.1477 c
355.108 507.9348 L
356.2556 508.1336 357.4131 508.306 358.577 508.4202 c
358.7441 508.7836 L
358.0644 509.7231 357.4414 510.7138 356.8315 511.7091 c
356.6375 511.6224 L
356.9071 510.7722 357.3092 509.9712 357.7943 509.2312 c
357.7595 509.203 L
357.6218 508.9034 L
f
U
u
337.02 488.1676 m
337.0001 488.1275 L
337.7399 487.6376 338.4698 487.0977 339.0397 486.4078 c
338.8997 486.2378 L
337.9399 486.8977 336.9601 487.5377 335.9502 488.1275 c
335.9502 488.5274 L
336.9601 489.0973 337.9399 489.7373 338.9097 490.3871 c
339.0497 490.2272 L
338.4498 489.5673 337.7499 489.0074 337.0001 488.5375 c
337.02 488.4974 L
337.02 488.1676 L
f
U
u
397.6675 488.1676 m
397.6874 488.1275 L
396.9476 487.6376 396.2177 487.0977 395.6478 486.4078 c
395.7878 486.2378 L
396.7476 486.8977 397.7274 487.5377 398.7373 488.1275 c
398.7373 488.5274 L
397.7274 489.0973 396.7476 489.7373 395.7778 490.3871 c
395.6378 490.2272 L
396.2377 489.5673 396.9376 489.0074 397.6874 488.5375 c
397.6675 488.4974 L
397.6675 488.1676 L
f
U
u
397.7613 425.0113 m
397.7812 424.9712 L
397.0413 424.4813 396.3115 423.9414 395.7416 423.2515 c
395.8816 423.0815 L
396.8414 423.7414 397.8211 424.3814 398.8311 424.9712 c
398.8311 425.3711 L
397.8211 425.941 396.8414 426.581 395.8715 427.2308 c
395.7315 427.0709 L
396.3314 426.411 397.0314 425.8511 397.7812 425.3812 c
397.7613 425.3411 L
397.7613 425.0113 L
f
U
u
363.4262 425.0113 m
363.4063 424.9712 L
364.1461 424.4813 364.876 423.9414 365.4459 423.2515 c
365.3059 423.0815 L
364.3461 423.7414 363.3663 424.3814 362.3564 424.9712 c
362.3564 425.3711 L
363.3663 425.941 364.3461 426.581 365.3159 427.2308 c
365.4559 427.0709 L
364.856 426.411 364.1561 425.8511 363.4063 425.3812 c
363.4262 425.3411 L
363.4262 425.0113 L
f
U
u
144.895 400.8176 m
144.8751 400.7775 L
145.6149 400.2876 146.3448 399.7477 146.9147 399.0578 c
146.7747 398.8878 L
145.8149 399.5477 144.8351 400.1877 143.8252 400.7775 c
143.8252 401.1774 L
144.8351 401.7473 145.8149 402.3873 146.7847 403.0371 c
146.9247 402.8772 L
146.3248 402.2173 145.6249 401.6574 144.8751 401.1875 c
144.895 401.1474 L
144.895 400.8176 L
f
U
u
204.48 400.8176 m
204.4999 400.7775 L
203.7601 400.2876 203.0302 399.7477 202.4603 399.0578 c
202.6003 398.8878 L
203.5601 399.5477 204.5399 400.1877 205.5498 400.7775 c
205.5498 401.1774 L
204.5399 401.7473 203.5601 402.3873 202.5903 403.0371 c
202.4503 402.8772 L
203.0502 402.2173 203.7501 401.6574 204.4999 401.1875 c
204.48 401.1474 L
204.48 400.8176 L
f
U
u
170.5648 332.5123 m
170.5686 332.4677 L
171.4552 332.4319 172.3592 332.3483 173.204 332.0534 c
173.1724 331.8355 L
172.0095 331.9027 170.8399 331.9425 169.6706 331.9238 c
169.4634 332.2659 L
170.032 333.2765 170.5385 334.3315 171.0314 335.3897 c
171.234 335.3255 L
171.0627 334.4503 170.7541 333.6087 170.3562 332.8184 c
170.394 332.7944 L
170.5648 332.5123 L
f
U
u
333.855 315.1926 m
333.8749 315.1525 L
333.1351 314.6626 332.4052 314.1227 331.8353 313.4328 c
331.9753 313.2628 L
332.9351 313.9227 333.9149 314.5627 334.9248 315.1525 c
334.9248 315.5524 L
333.9149 316.1223 332.9351 316.7623 331.9653 317.4121 c
331.8253 317.2522 L
332.4252 316.5923 333.1251 316.0324 333.8749 315.5625 c
333.855 315.5224 L
333.855 315.1926 L
f
U
u
363.5506 332.8509 m
363.5492 332.8062 L
362.6657 332.7241 361.7673 332.5932 360.9391 332.2545 c
360.9821 332.0385 L
362.1398 332.1665 363.3057 332.2675 364.4744 332.3101 c
364.6634 332.6625 L
364.0427 333.642 363.4817 334.669 362.9341 335.7 c
362.7351 335.6252 L
362.952 334.7602 363.3042 333.9359 363.7429 333.1675 c
363.7065 333.1416 L
363.5506 332.8509 L
f
U
u
187.145 315.1926 m
187.1251 315.1525 L
187.8649 314.6626 188.5948 314.1227 189.1647 313.4328 c
189.0247 313.2628 L
188.0649 313.9227 187.0851 314.5627 186.0752 315.1525 c
186.0752 315.5524 L
187.0851 316.1223 188.0649 316.7623 189.0347 317.4121 c
189.1747 317.2522 L
188.5748 316.5923 187.8749 316.0324 187.1251 315.5625 c
187.145 315.5224 L
187.145 315.1926 L
f
U
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 0 1151 a Fl(Figure)10 b(13.1.3.)37 b(The)10 b(wrap-around)e
(problem)i(in)g(convolving)e(\256nite)j(segments)e(of)h(a)h(function.)17
b(Not)11 b(only)e(must)0 1189 y(the)i(response)e(function)h(wrap)g(be)h
(viewed)f(as)h(cyclic,)g(but)g(so)g(must)f(the)h(sampled)f(original)g
(function.)20 b(Therefore)0 1226 y(a)12 b(portion)f(at)h(each)f(end)f(of)i
(the)g(original)f(function)g(is)h(erroneously)e(wrapped)g(around)g(by)h
(convolution)f(with)i(the)0 1263 y(response)i(function.)-5
2266 y @beginspecial 174 @llx 330 @lly 511 @urx 556 @ury 3370
@rwi @setspecial
%%BeginDocument: epsf/fig13x1x4.ps
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
/TX {pop} def
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def	% - cf flatness
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
[/_Symbol/Symbol 0 0 0 TZ
[/_Times-Italic/Times-Italic 0 0 1 TZ
[/_Times-Roman/Times-Roman 0 0 1 TZ
0 A
0 R
0 G
0 i 0 J 0 j 0.5 w 4 M []0 d
0 D
179.1246 552.4673 m
179.1246 508.0668 l
S
422.1271 552.4673 m
422.1271 508.0668 l
S
242.7252 451.6662 m
242.7252 434.8661 l
S
421.9521 451.6662 m
421.9521 434.8661 l
S
422.1271 367.9654 m
422.1271 353.2652 l
S
431.7272 367.9654 m
431.7272 353.2652 l
S
422.1271 349.9652 m
422.1271 335.265 l
S
431.7272 349.9652 m
431.7272 335.265 l
S
179.4246 529.667 m
422.1271 529.667 l
S
179.1246 465.1664 m
179.1246 420.7659 l
S
506.1279 465.1664 m
506.1279 420.7659 l
S
2 w
179.4246 453.4662 m
214.8249 452.5662 220.8337 429.638 231.3251 430.066 c
246.0253 430.666 260.1254 468.1664 272.4255 467.5664 c
283.8161 467.0108 298.2258 430.366 304.8259 431.266 c
311.4259 432.166 319.226 470.2664 327.3261 470.5664 c
334.2214 470.8218 332.7261 466.0664 336.0262 465.7664 c
339.3262 465.4664 342.3262 469.3665 345.3263 469.0664 c
348.3263 468.7664 351.0263 465.4664 354.0264 465.4664 c
357.0264 465.4664 365.1359 468.2673 367.2265 468.4664 c
373.5266 469.0664 384.9267 432.766 398.1268 433.366 c
408.9199 433.8567 418.8579 443.4212 422.158 442.8212 C
506 442.8212 l
S
0.5 w
506.058 442.9261 m
179.4246 442.7959 l
S
179.1246 381.1655 m
179.1246 336.7651 l
S
506.1279 381.1655 m
506.1279 336.7651 l
S
179.4246 358.3653 m
506.1279 358.3653 l
S
2 w
180.3246 549.7672 m
183.6246 549.1672 197.4248 550.9673 214.2249 530.567 c
S
422.1271 546.4673 m
416.727 547.0672 412.1611 546.4713 409.5269 546.1672 c
404.7492 545.6157 366.9265 529.967 363.6265 529.967 c
360.3264 529.967 355.8264 529.967 y
S
0.5 w
320.176 548.6172 m
324.376 548.6172 370.9764 546.7922 380.9766 539.0421 c
S
248.7752 548.6672 m
242.9558 548.8036 218.0125 544.2631 210.75 539.0921 c
S
247.7004 344.1902 m
420.302 344.1902 l
S
478.5776 420.566 m
462.3774 405.5658 373.5266 385.0656 302.1258 379.6655 c
223.6918 373.7336 213.925 371.0654 y
S
213.9249 421.666 m
222.225 408.9658 350.7263 407.8658 378.3266 403.0657 c
406.7563 398.1213 446.5272 387.5656 463.3274 371.9655 c
S
0 To
1 0 0 1 284.4265 546.6165 0 Tp
TP
-31.8625 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Roman 9 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 Tq
0 0 Tl
0 Tc
0 Tw
(response function) Tx 
(\r) TX 
TO
0 To
1 0 0 1 198.4265 517.6165 0 Tp
TP
-5.0323 0 Td
0 Tr
/_Times-Italic 9 Tf
(m) Tx 
/_Symbol 6.5 Tf
-1.5 Ts
11 0 Tl
(+) Tx 
(\r) TX 
TO
0 To
1 0 0 1 388.1765 517.6165 0 Tp
TP
-5.0323 0 Td
0 Tr
/_Times-Italic 9 Tf
0 Ts
0 0 Tl
(m) Tx 
/_Symbol 6.5 Tf
-1.5 Ts
11 0 Tl
(-) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
191.2139 519.1508 m
180.2294 519.1508 l
S
204.5141 519.082 m
216.3736 519.082 l
S
381.4639 519.1508 m
360.7919 519.1508 l
S
394.5141 519.207 m
415.1861 519.207 l
S
0 To
1 0 0 1 210.6765 424.6165 0 Tp
TP
-5.2573 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Italic 9 Tf
0 Ts
0 0 Tl
(m) Tx 0 -50 Tk 
/_Symbol 6.5 Tf
-1.5 Ts
11 0 Tl
(-) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
203.9639 426.1508 m
180.1669 426.1508 l
S
217.0141 426.207 m
241.0611 426.207 l
S
0 To
1 0 0 1 198.4265 363.1165 0 Tp
TP
-5.0323 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Italic 9 Tf
0 Ts
0 0 Tl
(m) Tx 
/_Symbol 6.5 Tf
-1.5 Ts
11 0 Tl
(+) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
191.2139 364.6508 m
180.0419 364.6508 l
S
205.7641 364.707 m
215.8736 364.707 l
S
0 To
1 0 0 1 469.1765 363.1165 0 Tp
TP
-5.2573 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Italic 9 Tf
0 Ts
0 0 Tl
(m) Tx 0 -50 Tk 
/_Symbol 6.5 Tf
-1.5 Ts
11 0 Tl
(-) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
462.4639 364.6508 m
433.2919 364.6508 l
S
475.5141 364.707 m
505.3111 364.707 l
S
454.9639 344.1508 m
433.2919 344.1508 l
S
484.0141 344.207 m
505.0611 344.207 l
S
0 To
1 0 0 1 484.9265 424.6165 0 Tp
TP
-5.0323 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Italic 9 Tf
0 Ts
0 0 Tl
(m) Tx 
/_Symbol 6.5 Tf
-1.5 Ts
11 0 Tl
(+) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
477.7139 426.1508 m
467.6669 426.1508 l
S
492.2641 426.207 m
504.9986 426.207 l
S
0 To
1 0 0 1 464.6765 450.1165 0 Tp
TP
-23.3646 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Roman 9 Tf
0 Ts
(zero padding) Tx 
(\r) TX 
TO
u
1 g
332.9265 450.3665 m
332.9265 459.6165 L
272.1765 459.6165 L
272.1765 450.3665 L
332.9265 450.3665 L
f
302.5515 454.9915 m
F
U
0 To
1 0 0 1 302.4265 452.6165 0 Tp
TP
-30.1157 0 Td
0 Tr
0 g
(original function) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
217.2252 364.6662 m
217.2252 349.8661 l
S
0 To
1 0 0 1 469.1765 341.8665 0 Tp
TP
-12.9979 0 Td
0 Tr
0 O
0 g
1 w
9 0 Tl
(spoiled\r) Tx 
-11.1149 -9 Td
(but irrelevant) Tx 
(\r) TX 
TO
0 To
1 0 0 1 228.1765 341.8665 0 Tp
TP
-17.4979 0 Td
0 Tr
11 0 Tl
(unspoiled) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
209.2139 344.1508 m
180.0419 344.1508 l
S
0 To
1 0 0 1 287.9265 384.8665 0 Tp
TP
-44.1046 0 Td
0 Tr
0 O
0 g
1 w
(not spoiled because zero) Tx 
(\r) TX 
TO
u
180.4575 518.935 m
180.4376 518.8949 L
181.1774 518.405 181.9073 517.8651 182.4772 517.1752 c
182.3372 517.0052 L
181.3774 517.6651 180.3976 518.3051 179.3877 518.8949 c
179.3877 519.2948 L
180.3976 519.8647 181.3774 520.5047 182.3472 521.1545 c
182.4872 520.9946 L
181.8873 520.3347 181.1874 519.7748 180.4376 519.3049 c
180.4575 519.2648 L
180.4575 518.935 L
f
U
u
216.0425 518.935 m
216.0624 518.8949 L
215.3226 518.405 214.5927 517.8651 214.0228 517.1752 c
214.1628 517.0052 L
215.1226 517.6651 216.1024 518.3051 217.1123 518.8949 c
217.1123 519.2948 L
216.1024 519.8647 215.1226 520.5047 214.1528 521.1545 c
214.0128 520.9946 L
214.6127 520.3347 215.3126 519.7748 216.0624 519.3049 c
216.0425 519.2648 L
216.0425 518.935 L
f
U
u
210.7409 539.195 m
210.7016 539.2165 L
211.0266 540.0421 211.3149 540.903 211.3861 541.795 c
211.1739 541.854 L
210.7661 540.7629 210.3305 539.6767 209.8415 538.6143 c
210.0708 538.2867 L
211.225 538.3991 212.3947 538.4368 213.5618 538.4606 c
213.5848 538.6719 L
212.7149 538.8685 211.8204 538.9257 210.9367 538.8806 c
210.93 538.9249 L
210.7409 539.195 L
f
U
u
381.0716 539.1325 m
381.1109 539.154 L
380.7859 539.9796 380.4976 540.8405 380.4264 541.7325 c
380.6386 541.7915 L
381.0464 540.7004 381.482 539.6142 381.971 538.5518 c
381.7417 538.2242 L
380.5875 538.3366 379.4178 538.3743 378.2507 538.3981 c
378.2277 538.6094 L
379.0976 538.806 379.9921 538.8632 380.8758 538.8181 c
380.8825 538.8624 L
381.0716 539.1325 L
f
U
u
180.4575 425.9975 m
180.4376 425.9574 L
181.1774 425.4675 181.9073 424.9276 182.4772 424.2377 c
182.3372 424.0677 L
181.3774 424.7276 180.3976 425.3676 179.3877 425.9574 c
179.3877 426.3573 L
180.3976 426.9272 181.3774 427.5672 182.3472 428.217 c
182.4872 428.0571 L
181.8873 427.3972 181.1874 426.8373 180.4376 426.3674 c
180.4575 426.3273 L
180.4575 425.9975 L
f
U
u
240.9175 425.9975 m
240.9374 425.9574 L
240.1976 425.4675 239.4677 424.9276 238.8978 424.2377 c
239.0378 424.0677 L
239.9976 424.7276 240.9774 425.3676 241.9873 425.9574 c
241.9873 426.3573 L
240.9774 426.9272 239.9976 427.5672 239.0278 428.217 c
238.8878 428.0571 L
239.4877 427.3972 240.1876 426.8373 240.9374 426.3674 c
240.9175 426.3273 L
240.9175 425.9975 L
f
U
u
180.4575 364.4975 m
180.4376 364.4574 L
181.1774 363.9675 181.9073 363.4276 182.4772 362.7377 c
182.3372 362.5677 L
181.3774 363.2276 180.3976 363.8676 179.3877 364.4574 c
179.3877 364.8573 L
180.3976 365.4272 181.3774 366.0672 182.3472 366.717 c
182.4872 366.5571 L
181.8873 365.8972 181.1874 365.3373 180.4376 364.8674 c
180.4575 364.8273 L
180.4575 364.4975 L
f
U
u
215.6675 364.4975 m
215.6874 364.4574 L
214.9476 363.9675 214.2177 363.4276 213.6478 362.7377 c
213.7878 362.5677 L
214.7476 363.2276 215.7274 363.8676 216.7373 364.4574 c
216.7373 364.8573 L
215.7274 365.4272 214.7476 366.0672 213.7778 366.717 c
213.6378 366.5571 L
214.2377 365.8972 214.9376 365.3373 215.6874 364.8674 c
215.6675 364.8273 L
215.6675 364.4975 L
f
U
u
180.4575 343.9975 m
180.4376 343.9574 L
181.1774 343.4675 181.9073 342.9276 182.4772 342.2377 c
182.3372 342.0677 L
181.3774 342.7276 180.3976 343.3676 179.3877 343.9574 c
179.3877 344.3573 L
180.3976 344.9272 181.3774 345.5672 182.3472 346.217 c
182.4872 346.0571 L
181.8873 345.3972 181.1874 344.8373 180.4376 344.3674 c
180.4575 344.3273 L
180.4575 343.9975 L
f
U
u
420.1675 343.9975 m
420.1874 343.9574 L
419.4476 343.4675 418.7177 342.9276 418.1478 342.2377 c
418.2878 342.0677 L
419.2476 342.7276 420.2274 343.3676 421.2373 343.9574 c
421.2373 344.3573 L
420.2274 344.9272 419.2476 345.5672 418.2778 346.217 c
418.1378 346.0571 L
418.7377 345.3972 419.4376 344.8373 420.1874 344.3674 c
420.1675 344.3273 L
420.1675 343.9975 L
f
U
u
504.5425 343.9975 m
504.5624 343.9574 L
503.8226 343.4675 503.0927 342.9276 502.5228 342.2377 c
502.6628 342.0677 L
503.6226 342.7276 504.6024 343.3676 505.6123 343.9574 c
505.6123 344.3573 L
504.6024 344.9272 503.6226 345.5672 502.6528 346.217 c
502.5128 346.0571 L
503.1127 345.3972 503.8126 344.8373 504.5624 344.3674 c
504.5425 344.3273 L
504.5425 343.9975 L
f
U
u
433.4575 343.9975 m
433.4376 343.9574 L
434.1774 343.4675 434.9073 342.9276 435.4772 342.2377 c
435.3372 342.0677 L
434.3774 342.7276 433.3976 343.3676 432.3877 343.9574 c
432.3877 344.3573 L
433.3976 344.9272 434.3774 345.5672 435.3472 346.217 c
435.4872 346.0571 L
434.8873 345.3972 434.1874 344.8373 433.4376 344.3674 c
433.4575 344.3273 L
433.4575 343.9975 L
f
U
u
504.605 364.8775 m
504.6249 364.9176 L
503.8851 365.4075 503.1552 365.9474 502.5853 366.6372 c
502.7253 366.8072 L
503.6851 366.1473 504.6649 365.5074 505.6748 364.9176 c
505.6748 364.5177 L
504.6649 363.9477 503.6851 363.3078 502.7153 362.658 c
502.5753 362.8179 L
503.1752 363.4777 503.8751 364.0377 504.6249 364.5075 c
504.605 364.5476 L
504.605 364.8775 L
f
U
u
433.4575 364.815 m
433.4376 364.8551 L
434.1774 365.345 434.9073 365.8849 435.4772 366.5747 c
435.3372 366.7447 L
434.3774 366.0848 433.3976 365.4449 432.3877 364.8551 c
432.3877 364.4552 L
433.3976 363.8852 434.3774 363.2453 435.3472 362.5955 c
435.4872 362.7554 L
434.8873 363.4152 434.1874 363.9752 433.4376 364.445 c
433.4575 364.4851 L
433.4575 364.815 L
f
U
u
504.605 426.3775 m
504.6249 426.4176 L
503.8851 426.9075 503.1552 427.4474 502.5853 428.1372 c
502.7253 428.3072 L
503.6851 427.6473 504.6649 427.0074 505.6748 426.4176 c
505.6748 426.0177 L
504.6649 425.4477 503.6851 424.8078 502.7153 424.158 c
502.5753 424.3179 L
503.1752 424.9777 503.8751 425.5377 504.6249 426.0075 c
504.605 426.0476 L
504.605 426.3775 L
f
U
u
467.9575 426.315 m
467.9376 426.3551 L
468.6774 426.845 469.4073 427.3849 469.9772 428.0747 c
469.8372 428.2447 L
468.8774 427.5848 467.8976 426.9449 466.8877 426.3551 c
466.8877 425.9552 L
467.8976 425.3852 468.8774 424.7453 469.8472 424.0955 c
469.9872 424.2554 L
469.3873 424.9152 468.6874 425.4752 467.9376 425.945 c
467.9575 425.9851 L
467.9575 426.315 L
f
U
u
213.9404 371.1431 m
213.9094 371.1755 L
214.4693 371.8639 215.0047 372.597 215.3427 373.4256 c
215.1583 373.5461 L
214.4393 372.6298 213.6952 371.7265 212.9074 370.862 c
213.0268 370.4804 L
214.1608 370.238 215.2869 369.9196 216.4065 369.589 c
216.4924 369.7834 L
215.7228 370.2341 214.8877 370.5595 214.0318 370.7842 c
214.0388 370.8284 L
213.9404 371.1431 L
f
U
u
462.9118 372.0208 m
462.8974 371.9784 L
462.0285 372.1583 461.1312 372.2959 460.24 372.2142 c
460.218 371.9951 L
461.3625 371.7789 462.507 371.5345 463.6371 371.2334 c
463.9209 371.5151 L
463.6138 372.6333 463.3777 373.7795 463.1555 374.9256 c
462.9434 374.9123 L
462.8978 374.0216 462.9936 373.1305 463.1884 372.2673 c
463.1459 372.2531 L
462.9118 372.0208 L
f
U
u
415.1675 519.315 m
415.1874 519.3551 L
414.4476 519.845 413.7177 520.3849 413.1478 521.0747 c
413.2878 521.2447 L
414.2476 520.5848 415.2274 519.9449 416.2373 519.3551 c
416.2373 518.9552 L
415.2274 518.3852 414.2476 517.7453 413.2778 517.0955 c
413.1378 517.2554 L
413.7377 517.9152 414.4376 518.4752 415.1874 518.945 c
415.1675 518.9851 L
415.1675 519.315 L
f
U
u
360.8325 519.2525 m
360.8126 519.2926 L
361.5524 519.7825 362.2823 520.3224 362.8522 521.0122 c
362.7122 521.1822 L
361.7524 520.5223 360.7726 519.8824 359.7627 519.2926 c
359.7627 518.8927 L
360.7726 518.3227 361.7524 517.6828 362.7222 517.033 c
362.8622 517.1929 L
362.2623 517.8527 361.5624 518.4127 360.8126 518.8825 c
360.8325 518.9226 L
360.8325 519.2525 L
f
U
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 0 2328 a(Figure)9 b(13.1.4.)27 b(Zero)9 b(padding)e(as)h
(solution)g(to)h(the)g(wrap-around)d(problem.)13 b(The)c(original)f(function)
g(is)h(extended)0 2366 y(by)f(zeros,)h(serving)e(a)i(dual)f(purpose:)k(When)c
(the)h(zeros)f(wrap)g(around,)g(they)g(do)g(not)h(disturb)f(the)g(true)h
(convolution;)0 2403 y(and)f(while)h(the)f(original)h(function)e(wraps)i
(around)e(onto)h(the)h(zero)f(region,)g(that)h(region)f(can)g(be)g
(discarded.)p eop
%%Page: 542 5
bop 0 50 a Ft(542)283 b Fs(Chapter)10 b(13.)55 b(Fourier)11
b(and)f(Spectral)g(Applications)p 0 68 1395 2 v 0 143 a @beginspecial
@setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial 46 x Ft(padding)j(of)g(the)h(response)g
Fv(r)439 195 y Fo(k)473 189 y Ft(described)g(above,)h(we)g(ef)o(fectively)e
(insulate)g(the)h(data)g(from)0 239 y(artifacts)f(of)f(undesired)g
(periodicity)m(.)21 b(Figure)12 b(13.1.4)h(illustrates)e(matters.)0
361 y Fh(Use)i(of)h(FFT)h(for)f(Convolution)83 473 y Ft(The)f(data,)h
(complete)f(with)e(zero)i(padding,)g(are)g(now)f(a)h(set)g(of)f(real)h
(numbers)f Fv(s)1279 479 y Fo(j)1297 473 y Fv(;)20 b(j)c Fu(=)0
522 y(0)p Fv(;)7 b(:)g(:)g(:)e(;)i(N)16 b Fw(\000)c Fu(1)p
Ft(,)21 b(and)d(the)g(response)h(function)d(is)i(zero)h(padded)f(out)f(to)h
(duration)f Fv(N)23 b Ft(and)0 572 y(arranged)9 b(in)f(wrap-around)g(order)n
(.)14 b(\(Generally)9 b(this)f(means)i(that)e(a)h(lar)o(ge)g(contiguous)e
(section)0 622 y(of)15 b(the)h Fv(r)136 628 y Fo(k)156 622
y Ft(')n(s,)h(in)e(the)h(middle)f(of)g(that)h(array)m(,)i(is)d(zero,)j(with)d
(nonzero)g(values)h(clustered)g(at)0 672 y(the)d(two)g(extreme)h(ends)g(of)f
(the)g(array)m(.\))25 b(Y)l(ou)12 b(now)h(compute)h(the)f(discrete)g
(convolution)e(as)0 722 y(follows:)16 b(Use)c(the)f(FFT)i(algorithm)d(to)h
(compute)g(the)h(discrete)f(Fourier)g(transform)g(of)h Fv(s)g
Ft(and)0 771 y(of)f Fv(r)q Ft(.)17 b(Multiply)8 b(the)j(two)f(transforms)g
(together)g(component)h(by)f(component,)h(remembering)0 821
y(that)k(the)g(transforms)g(consist)g(of)g(complex)h(numbers.)30
b(Then)16 b(use)g(the)f(FFT)h(algorithm)e(to)0 871 y(take)19
b(the)f(inverse)g(discrete)h(Fourier)f(transform)g(of)g(the)g(products.)39
b(The)19 b(answer)g(is)f(the)0 921 y(convolution)f Fv(r)d Fw(\003)f
Fv(s)p Ft(.)83 971 y(What)20 b(about)f Fq(deconvolution)p Ft(?)43
b(Deconvolution)18 b(is)i(the)g(process)g(of)g Fq(undoing)e
Ft(the)0 1020 y(smearing)d(in)f(a)h(data)g(set)f(that)g(has)h(occurred)g
(under)f(the)h(in\257uence)g(of)f(a)h(known)f(response)0 1070
y(function,)c(for)g(example,)i(because)h(of)d(the)h(known)f(ef)o(fect)h(of)g
(a)g(less-than-perfect)g(measuring)0 1120 y(apparatus.)j(The)8
b(de\256ning)e(equation)g(of)h(deconvolution)e(is)h(the)h(same)i(as)e(that)g
(for)f(convolution,)0 1170 y(namely)11 b(\(13.1.1\),)g(except)g(now)f(the)h
(left-hand)f(side)g(is)h(taken)g(to)f(be)h(known,)f(and)h(\(13.1.1\))f(is)0
1220 y(to)d(be)i(considered)e(as)i(a)f(set)h(of)e Fv(N)13 b
Ft(linear)8 b(equations)f(for)g(the)h(unknown)f(quantities)f
Fv(s)1223 1226 y Fo(j)1241 1220 y Ft(.)15 b(Solving)0 1270
y(these)e(simultaneous)f(linear)h(equations)f(in)h(the)f(time)h(domain)g(of)f
(\(13.1.1\))h(is)g(unrealistic)e(in)0 1319 y(most)h(cases,)j(but)d(the)h(FFT)
g(renders)f(the)h(problem)f(almost)g(trivial.)20 b(Instead)13
b(of)f(multiplying)0 1369 y(the)f(transform)f(of)h(the)g(signal)f(and)h
(response)g(to)g(get)g(the)f(transform)h(of)g(the)f(convolution,)f(we)0
1419 y(just)e(divide)h(the)g(transform)g(of)g(the)g(\(known\))f(convolution)f
(by)i(the)g(transform)g(of)g(the)h(response)0 1469 y(to)15
b(get)g(the)h(transform)e(of)i(the)f(deconvolved)g(signal.)83
1519 y(This)e(procedure)g(can)g(go)g(wrong)f Fq(mathematically)f
Ft(if)h(the)h(transform)f(of)h(the)g(response)0 1568 y(function)i(is)h
(exactly)g(zero)h(for)f(some)h(value)f Fv(R)730 1574 y Fo(n)752
1568 y Ft(,)j(so)d(that)g(we)h(can')o(t)f(divide)f(by)h(it.)33
b(This)0 1618 y(indicates)18 b(that)g(the)g(original)f(convolution)f(has)j
(truly)e(lost)h(all)g(information)e(at)j(that)f(one)0 1668
y(frequency)m(,)i(so)d(that)f(a)i(reconstruction)e(of)h(that)f(frequency)h
(component)g(is)g(not)f(possible.)0 1718 y(Y)l(ou)11 b(should)f(be)i(aware,)h
(however)n(,)f(that)f(apart)g(from)g(mathematical)i(problems,)e(the)g
(process)0 1768 y(of)i(deconvolution)f(has)i(other)f(practical)h
(shortcomings.)25 b(The)14 b(process)h(is)e(generally)h(quite)0
1817 y(sensitive)7 b(to)h(noise)g(in)f(the)h(input)f(data,)i(and)f(to)f(the)h
(accuracy)i(to)d(which)h(the)g(response)g(function)0 1867 y
Fv(r)19 1873 y Fo(k)49 1867 y Ft(is)h(known.)14 b(Perfectly)9
b(reasonable)h(attempts)f(at)h(deconvolution)d(can)j(sometimes)g(produce)0
1917 y(nonsense)f(for)e(these)i(reasons.)15 b(In)8 b(such)h(cases)h(you)e
(may)h(want)f(to)f(make)j(use)f(of)f(the)g(additional)0 1967
y(process)15 b(of)f Fq(optimal)c(\256ltering)p Ft(,)k(which)g(is)g(discussed)
g(in)g Fw(x)p Ft(13.3.)83 2017 y(Here)21 b(is)g(our)e(routine)h(for)g
(convolution)e(and)i(deconvolution,)h(using)f(the)g(FFT)h(as)0
2067 y(implemented)16 b(in)f Fg(four1)g Ft(of)g Fw(x)p Ft(12.2.)32
b(Since)16 b(the)f(data)h(and)g(response)g(functions)f(are)h(real,)0
2116 y(not)d(complex,)j(both)d(of)h(their)f(transforms)h(can)g(be)h(taken)f
(simultaneously)e(using)i Fg(twofft)n Ft(.)0 2166 y(Note,)e(however)n(,)h
(that)e(two)h(calls)g(to)f Fg(realft)f Ft(should)h(be)h(substituted)e(if)h
Fg(data)g Ft(and)h Fg(respns)0 2216 y Ft(have)h(very)f(dif)o(ferent)f
(magnitudes,)i(to)e(minimize)h(roundof)o(f.)20 b(The)12 b(data)h(are)g
(assumed)g(to)f(be)0 2266 y(stored)e(in)f(a)i Fg(float)e Ft(array)i
Fg(data[1..n])n Ft(,)g(with)e Fg(n)h Ft(an)g(integer)g(power)g(of)g(two.)15
b(The)c(response)0 2316 y(function)d(is)h(assumed)h(to)f(be)g(stored)g(in)f
(wrap-around)h(order)g(in)f(a)i(sub-array)f Fg(respns[1..m])0
2365 y Ft(of)f(the)h(array)g Fg(respns[1..n])m Ft(.)18 b(The)10
b(value)e(of)h Fg(m)f Ft(can)i(be)e(any)h Fq(odd)f Ft(integer)g(less)h(than)g
(or)f(equal)0 2415 y(to)h Fg(n)p Ft(,)h(since)g(the)f(\256rst)g(thing)f(the)i
(program)f(does)h(is)f(to)g(recopy)h(the)f(response)h(function)e(into)g(the)0
2465 y(appropriate)i(wrap-around)f(order)i(in)e Fg(respns[1..n])n
Ft(.)16 b(The)11 b(answer)g(is)g(provided)e(in)h Fg(ans)o Ft(.)p
eop
%%Page: 543 6
bop 217 50 a Fs(13.1)10 b(Convolution)f(and)h(Deconvolution)f(Using)h(the)g
(FFT)258 b Ft(543)p 0 68 1395 2 v 0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore

@endspecial 37 x Ff(#include)15 b("nrutil.h")0 255 y(void)h(convlv\(floa)o
(t)f(data[],)g(unsigned)f(long)j(n,)g(float)e(respns[],)g(unsigned)g(long)h
(m,)66 293 y(int)h(isign,)e(float)h(ans[]\))0 330 y Fe(Convolves)7
b(o)o(r)h(deconvolves)f(a)h(real)g(data)g(set)f Fd(data[1..n])e
Fe(\(including)k(any)f(user-supplied)g(zero)g(padding\))0 367
y(with)h(a)g(resp)q(onse)e(function)i Fd(respns[1.)o(.n])l
Fe(.)18 b(The)8 b(resp)q(onse)g(function)g(must)h(b)q(e)f(sto)o(red)g(in)h
(wrap-a)o(round)0 405 y(o)o(rder)k(in)h(the)f(\014rst)g Fd(m)g
Fe(elements)f(of)h Fd(respns)n Fe(,)h(where)f Fd(m)g Fe(is)g(an)h(o)q(dd)f
(integer)26 b Fc(\024)13 b Fd(n)p Fe(.)k(W)o(rap-a)o(round)d(o)o(rder)0
442 y(means)c(that)f(the)h(\014rst)g(half)g(of)g(the)g(a)o(rra)o(y)g
Fd(respns)e Fe(contains)i(the)f(impulse)i(resp)q(onse)e(function)h(at)g(p)q
(ositive)0 479 y(times,)e(while)h(the)e(second)g(half)i(of)e(the)h(a)o(rra)o
(y)g(contains)g(the)f(impulse)i(resp)q(onse)d(function)i(at)g(negative)g
(times,)0 517 y(counting)k(do)o(wn)h(from)f(the)g(highest)g(element)g
Fd(respns[m])l Fe(.)18 b(On)12 b(input)i Fd(isign)c Fe(is)i
Fj(+1)h Fe(fo)o(r)f(convolution,)0 554 y Fc(\000)p Fj(1)17
b Fe(fo)o(r)f(deconvolution.)i(The)e(answ)o(er)h(is)g(returned)f(in)i(the)e
(\014rst)g Fd(n)h Fe(comp)q(onents)e(of)h Fd(ans)o Fe(.)i(Ho)o(w)o(ever,)0
591 y Fd(ans)11 b Fe(must)h(b)q(e)h(supplied)g(in)g(the)f(calling)i(p)o
(rogram)e(with)h(dimensions)f Fd([1..2*n])m Fe(,)g(fo)o(r)g(consistency)f
(with)0 629 y Fd(twofft)n Fe(.)17 b Fd(n)d Fe(MUST)h(b)q(e)f(an)h(integer)f
(p)q(o)o(w)o(er)g(of)g(t)o(w)o(o.)0 666 y Ff({)66 703 y(void)j(realft\(fl)o
(oat)d(data[],)h(unsigned)g(long)h(n,)h(int)g(isign\);)66 741
y(void)g(twofft\(fl)o(oat)d(data1[],)h(float)h(data2[],)e(float)i(fft1[],)f
(float)h(fft2[],)133 778 y(unsigned)f(long)h(n\);)66 816 y(unsigned)f(long)h
(i,no2;)66 853 y(float)g(dum,mag2,*f)o(ft;)66 928 y(fft=vector\()o(1,n)o(<<1)
o(\);)66 965 y(for)h(\(i=1;i<=\(m)o(-1\))o(/2;)o(i++)o(\))248
b Fe(Put)12 b Ff(respns)f Fe(in)i(a)o(rra)o(y)f(of)g(length)g
Ff(n)p Fe(.)133 1002 y Ff(respns[n+1)o(-i])o(=r)o(esp)o(ns[)o(m+1)o(-i])o(;)
66 1040 y(for)17 b(\(i=\(m+3\)/2)o(;i<)o(=n-)o(\(m-)o(1\))o(/2;)o(i++)o(\))
107 b Fe(P)o(ad)14 b(with)g(zeros.)133 1077 y Ff(respns[i]=)o(0.0)o(;)66
1114 y(twofft\(data)o(,re)o(spn)o(s,f)o(ft,)o(an)o(s,n)o(\);)142
b Fe(FFT)14 b(b)q(oth)f(at)g(once.)66 1152 y Ff(no2=n>>1;)66
1189 y(for)k(\(i=2;i<=n+)o(2;i)o(+=2)o(\))e({)133 1227 y(if)i(\(isign)e(==)i
(1\))g({)199 1264 y(ans[i-1]=\(f)o(ft[)o(i-1)o(]*)o(\(du)o(m=a)o(ns[)o(i-1)o
(]\))o(-ff)o(t[i)o(]*a)o(ns[)o(i])o(\)/n)o(o2;)83 b Fe(Multiply)10
b(FFTs)1221 1301 y(to)e(convolve.)-1197 b Ff(ans[i]=\(fft)o([i])o(*du)o(m+)o
(fft)o([i-)o(1]*)o(ans)o([i)o(]\)/)o(no2)o(;)133 1339 y(})17
b(else)f(if)h(\(isign)f(==)h(-1\))f({)199 1376 y(if)h(\(\(mag2=SQR\()o(ans)o
([i)o(-1])o(\)+S)o(QR\()o(ans)o([i)o(]\)\))d(==)j(0.0\))266
1413 y(nrerror\(")o(Dec)o(onv)o(olv)o(ing)d(at)j(response)e(zero)h(in)h
(convlv"\);)199 1451 y(ans[i-1]=\(f)o(ft[)o(i-1)o(]*)o(\(du)o(m=a)o(ns[)o
(i-1)o(]\))o(+ff)o(t[i)o(]*a)o(ns[)o(i])o(\)/m)o(ag2)o(/no)o(2;)n
Fe(Divide)7 b(FFTs)1224 1488 y(to)e(deconvolve.)-1231 b Ff(ans[i]=\(fft)o
([i])o(*du)o(m-)o(fft)o([i-)o(1]*)o(ans)o([i)o(]\)/)o(mag)o(2/n)o(o2;)133
1525 y(})17 b(else)f(nrerror\("No)e(meaning)h(for)i(isign)f(in)h(convlv"\);)
66 1563 y(})66 1600 y(ans[2]=ans[)o(n+1)o(];)389 b Fe(P)o(ack)12
b(last)f(element)h(with)g(\014rst)f(fo)o(r)h Ff(realft)n Fe(.)66
1637 y Ff(realft\(ans,)o(n,-)o(1\);)371 b Fe(Inverse)12 b(transfo)o(rm)f
(back)h(to)f(time)h(domain.)66 1675 y Ff(free_vector)o(\(ff)o(t,1)o(,n<)o
(<1\))o(;)0 1712 y(})0 1894 y Fh(Convolving)j(or)g(Deconvolving)f(V)n(ery)g
(Large)h(Data)d(Sets)83 1999 y Ft(If)k(your)f(data)h(set)h(is)e(so)h(long)f
(that)h(you)f(do)h(not)f(want)h(to)f(\256t)h(it)f(into)g(memory)h(all)g(at)0
2049 y(once,)d(then)e(you)g(must)h(break)g(it)f(up)g(into)g(sections)h(and)f
(convolve)g(each)i(section)f(separately)m(.)0 2099 y(Now)m(,)k(however)n(,)h
(the)d(treatment)h(of)f(end)h(ef)o(fects)h(is)e(a)i(bit)d(dif)o(ferent.)28
b(Y)l(ou)14 b(have)i(to)e(worry)0 2149 y(not)c(only)g(about)g(spurious)g
(wrap-around)g(ef)o(fects,)i(but)e(also)h(about)f(the)h(fact)g(that)f(the)h
(ends)g(of)0 2199 y(each)j(section)e(of)g(data)h Fq(should)f
Ft(have)h(been)g(in\257uenced)g(by)f(data)h(at)g(the)f(nearby)h(ends)g(of)f
(the)0 2248 y(immediately)i(preceding)g(and)g(following)e(sections)i(of)f
(data,)j(but)d(were)i(not)f(so)g(in\257uenced)0 2298 y(since)g(only)f(one)h
(section)g(of)f(data)h(is)g(in)f(the)h(machine)g(at)g(a)h(time.)83
2348 y(There)j(are)h(two,)g(related,)g(standard)e(solutions)f(to)h(this)f
(problem.)36 b(Both)17 b(are)h(fairly)0 2398 y(obvious,)9 b(so)h(with)f(a)i
(few)f(words)f(of)h(description)f(here,)i(you)e(ought)g(to)g(be)h(able)h(to)e
(implement)0 2448 y(them)17 b(for)f(yourself.)34 b(The)17 b(\256rst)g
(solution)d(is)j(called)g(the)f Fq(overlap-save)f(method)p
Ft(.)34 b(In)17 b(this)0 2497 y(technique)c(you)f(pad)h(only)f(the)h(very)g
(beginning)e(of)i(the)g(data)g(with)f(enough)g(zeros)i(to)f(avoid)0
2547 y(wrap-around)i(pollution.)29 b(After)15 b(this)g(initial)f(padding,)i
(you)f(for)o(get)h(about)f(zero)h(padding)p eop
%%Page: 544 7
bop 0 50 a Ft(544)286 b Fs(Chapter)10 b(13.)47 b(Fourier)11
b(and)f(Spectral)g(Applications)p 0 68 1395 2 v 0 143 a @beginspecial
@setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial 2 931 a @beginspecial -334 @llx -1
@lly 0 @urx 187 @ury 3340 @rwi @setspecial
%%BeginDocument: epsf/fig13x1x5.ps
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
/TX {pop} def
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def	% - cf flatness
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
[/_Symbol/Symbol 0 0 0 TZ
[/_Times-Italic/Times-Italic 0 0 1 TZ
[/_Times-Roman/Times-Roman 0 0 1 TZ
0 A
0 R
0 G
0 i 0 J 0 j 1 w 4 M []0 d
0 D
-330.7116 8.3324 m
-68.9042 8.3324 l
S
u
-330.8544 13.9007 m
-330.8544 2.6213 L
S
U
u
-255.3256 13.9007 m
-255.3256 2.6213 L
S
U
u
-210.913 13.9007 m
-210.913 2.6213 L
S
U
u
-180.5107 13.9007 m
-180.5107 2.6213 L
S
U
u
-141.8183 13.9007 m
-141.8183 2.6213 L
S
U
u
-68.8595 13.9007 m
-68.8595 2.6213 L
S
U
-180.3857 51.1654 m
-68.9042 51.1654 l
S
u
-180.5285 56.7336 m
-180.5285 45.4543 L
S
U
u
-68.8595 56.7336 m
-68.8595 45.4543 L
S
U
-162.9492 74.4379 m
-89.9904 74.4379 l
S
u
-162.967 80.0062 m
-162.967 68.7269 L
S
U
u
-95.1332 80.0062 m
-95.1332 68.7269 L
S
U
-255.1742 95.2833 m
-141.8005 95.2833 l
S
u
-255.317 100.8516 m
-255.317 89.5722 L
S
U
u
-141.8183 100.8516 m
-141.8183 89.5722 L
S
U
-231.4819 120.1264 m
-163.092 120.1264 l
S
u
-231.1872 125.6947 m
-231.1872 114.4153 L
S
U
u
-162.9492 125.6947 m
-162.9492 114.4153 L
S
U
-330.7563 138.1162 m
-210.9043 138.1162 l
S
u
-330.8991 143.6845 m
-330.8991 132.4052 L
S
U
u
-210.9221 143.6845 m
-210.9221 132.4052 L
S
U
-299.4435 157.2483 m
-231.0536 157.2483 l
S
u
-299.4613 162.8166 m
-299.4613 151.5372 L
S
U
u
-231.1964 162.8166 m
-231.1964 151.5372 L
S
U
0.5 w
-180.5027 74.4379 m
-68.9226 74.4379 l
S
-255.3176 120.1264 m
-141.8 120.1264 l
S
-330.7855 157.2483 m
-211.7788 157.2483 l
S
1 w
-299.3008 175.952 m
-95.1126 175.952 l
S
u
-299.4435 181.5203 m
-299.4435 170.2409 L
S
U
u
-95.1304 181.5203 m
-95.1304 170.2409 L
S
U
0.5 w [6 4 ]0 d
-269.746 125.7893 m
-269.746 13.2396 -269.746 13.8107 v
S
2 w []0 d
-269.746 156.4277 m
-269.746 142.9718 l
S
0.5 w [3 3 ]0 d
-269.746 174.3631 m
-269.746 168.7821 l
S
[6 4 ]0 d
-199.5 172.4881 m
-199.5 134.2085 l
S
2 w []0 d
-199.5 119.1809 m
-199.5 100.7088 l
S
0.5 w [6 4 ]0 d
-199.5 83.2511 m
-199.5 14.0435 -199.5 14.1862 v
S
-126.3359 39.1132 m
-126.3359 14.0435 -126.3359 14.1862 v
S
2 w []0 d
-126.3359 73.5824 m
-126.3359 56.5956 -126.3359 56.4309 v
S
0.5 w [6 4 ]0 d
-126.3359 172.8815 m
-126.3359 85.8423 -126.3359 85.985 v
S
u
1 w []0 d
-231.1964 181.5203 m
-231.1964 170.2409 L
S
U
u
-162.9492 181.5203 m
-162.9492 170.2409 L
S
U
0 To
1 0 0 1 -65.5 6 0 Tp
TP
0 Tr
0 O
0 g
/_Times-Roman 9 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
9 0 Tl
0 Tc
0 Tw
(convolution \(out\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 -293 11 0 Tp
TP
-2.7488 0 Td
0 Tr
/_Times-Italic 9 Tf
1 Ta
(A) Tx 
(\r) TX 
TO
0 To
1 0 0 1 -233.25 11 0 Tp
TP
-10.2173 0 Td
0 Tr
(A ) Tx 
/_Symbol 9 Tf
(+ ) Tx 
/_Times-Italic 9 Tf
(B) Tx 
(\r) TX 
TO
0 To
1 0 0 1 -192.25 11 0 Tp
TP
-2.7488 0 Td
0 Tr
(B) Tx 
(\r) TX 
TO
0 To
1 0 0 1 -160.75 11 0 Tp
TP
-10.47 0 Td
0 Tr
(B ) Tx 
/_Symbol 9 Tf
(+ ) Tx 
/_Times-Italic 9 Tf
(C) Tx 
(\r) TX 
TO
0 To
1 0 0 1 -105 11 0 Tp
TP
-3.0015 0 Td
0 Tr
(C) Tx 
(\r) TX 
TO
0 To
1 0 0 1 -126.375 42.625 0 Tp
TP
-3.0015 0 Td
0 Tr
(C) Tx 
(\r) TX 
TO
0 To
1 0 0 1 -126.25 76.5 0 Tp
TP
-1.9973 0 Td
0 Tr
(c) Tx 
(\r) TX 
TO
0 To
1 0 0 1 -126.25 178.0625 0 Tp
TP
-1.9973 0 Td
0 Tr
(c) Tx 
(\r) TX 
TO
0 To
1 0 0 1 -199.375 178.0625 0 Tp
TP
-2.25 0 Td
0 Tr
(b) Tx 
(\r) TX 
TO
0 To
1 0 0 1 -269.75 178.0625 0 Tp
TP
-2.25 0 Td
0 Tr
(a) Tx 
(\r) TX 
TO
0 To
1 0 0 1 -269.5625 129.875 0 Tp
TP
-2.7488 0 Td
0 Tr
(A) Tx 
(\r) TX 
TO
0 To
1 0 0 1 -199.4688 122.2187 0 Tp
TP
-2.25 0 Td
0 Tr
(b) Tx 
(\r) TX 
TO
0 To
1 0 0 1 -199.4688 87.3437 0 Tp
TP
-2.7488 0 Td
0 Tr
(B) Tx 
(\r) TX 
TO
0 To
1 0 0 1 -313 159.375 0 Tp
TP
-2.25 0 Td
0 Tr
/_Times-Roman 9 Tf
(0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 -221.5 159.375 0 Tp
TP
-2.25 0 Td
0 Tr
(0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 -269.75 159.375 0 Tp
TP
-2.25 0 Td
0 Tr
/_Times-Italic 9 Tf
(a) Tx 
(\r) TX 
TO
0 To
1 0 0 1 -152.9375 122.1875 0 Tp
TP
-2.25 0 Td
0 Tr
/_Times-Roman 9 Tf
(0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 -242.8125 122.1875 0 Tp
TP
-2.25 0 Td
0 Tr
(0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 -171.1875 76.5625 0 Tp
TP
-2.25 0 Td
0 Tr
(0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 -80.9375 76.5625 0 Tp
TP
-2.25 0 Td
0 Tr
(0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 -91.875 174.125 0 Tp
TP
0 Tr
0 Ta
(data \(in\)) Tx 
(\r) TX 
TO
u
-269.7445 13.9328 m
-272.25 15.4236 L
-269.7279 9.4329 L
-269.7279 9.4329 L
-267.2501 15.4421 L
-269.7445 13.9328 L
f
U
u
-269.7445 143.4328 m
-272.25 144.9236 L
-269.7279 138.9329 L
-269.7279 138.9329 L
-267.2501 144.9421 L
-269.7445 143.4328 L
f
U
u
-269.7445 169.0578 m
-272.25 170.5486 L
-269.7279 164.5579 L
-269.7279 164.5579 L
-267.2501 170.5671 L
-269.7445 169.0578 L
f
U
u
-199.4945 134.5578 m
-202 136.0486 L
-199.4779 130.0579 L
-199.4779 130.0579 L
-197.0001 136.0671 L
-199.4945 134.5578 L
f
U
u
-199.4945 101.0578 m
-202 102.5486 L
-199.4779 96.5579 L
-199.4779 96.5579 L
-197.0001 102.5671 L
-199.4945 101.0578 L
f
U
u
-199.4945 14.0578 m
-202 15.5486 L
-199.4779 9.5579 L
-199.4779 9.5579 L
-197.0001 15.5671 L
-199.4945 14.0578 L
f
U
u
-126.3695 13.9328 m
-128.875 15.4236 L
-126.3529 9.4329 L
-126.3529 9.4329 L
-123.8751 15.4421 L
-126.3695 13.9328 L
f
U
u
-126.3695 56.6828 m
-128.875 58.1736 L
-126.3529 52.1829 L
-126.3529 52.1829 L
-123.8751 58.1921 L
-126.3695 56.6828 L
f
U
u
-126.3695 86.4328 m
-128.875 87.9236 L
-126.3529 81.9329 L
-126.3529 81.9329 L
-123.8751 87.9421 L
-126.3695 86.4328 L
f
U
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 0 993 a Fl(Figure)k(13.1.5.)58 b(The)13 b(overlap-add)f(method)h
(for)h(convolving)d(a)j(response)e(with)i(a)g(very)f(long)g(signal.)29
b(The)0 1030 y(signal)10 b(data)f(is)i(broken)d(up)i(into)g(smaller)g
(pieces.)18 b(Each)9 b(is)i(zero)e(padded)g(at)h(both)f(ends)h(and)f
(convolved)f(\(denoted)0 1068 y(by)k(bold)g(arrows)g(in)h(the)g(\256gure\).)
25 b(Finally)14 b(the)e(pieces)g(are)g(added)g(back)f(together)o(,)i
(including)f(the)g(overlapping)0 1105 y(regions)h(formed)h(by)g(the)g(zero)g
(pads.)0 1211 y Ft(altogether)n(.)24 b(Bring)12 b(in)h(a)h(section)g(of)f
(data)h(and)f(convolve)g(or)h(deconvolve)f(it.)24 b(Then)14
b(throw)0 1261 y(out)c(the)g(points)f(at)h(each)i(end)e(that)g(are)h
(polluted)e(by)h(wrap-around)f(end)i(ef)o(fects.)16 b(Output)9
b(only)0 1311 y(the)i(remaining)g(good)f(points)f(in)i(the)g(middle.)17
b(Now)11 b(bring)f(in)g(the)h(next)g(section)g(of)g(data,)h(but)0
1361 y(not)g(all)h(new)h(data.)24 b(The)14 b(\256rst)f(points)f(in)g(each)j
(new)e(section)g(overlap)g(the)g(last)g(points)f(from)0 1411
y(the)g(preceding)h(section)f(of)g(data.)22 b(The)14 b(sections)e(must)g(be)h
(overlapped)f(suf)o(\256ciently)g(so)h(that)0 1460 y(the)d(polluted)f(output)
f(points)h(at)h(the)g(end)h(of)e(one)i(section)f(are)h(recomputed)f(as)h(the)
f(\256rst)g(of)g(the)0 1510 y(unpolluted)e(output)h(points)g(from)h(the)g
(subsequent)g(section.)15 b(W)n(ith)10 b(a)h(bit)e(of)h(thought)e(you)i(can)0
1560 y(easily)k(determine)h(how)f(many)g(points)f(to)h(overlap)g(and)g(save.)
83 1610 y(The)j(second)g(solution,)g(called)f(the)h Fq(overlap-add)c(method)p
Ft(,)18 b(is)f(illustrated)d(in)i(Figure)0 1660 y(13.1.5.)35
b(Here)18 b(you)e Fq(don')-5 b(t)16 b Ft(overlap)h(the)g(input)e(data.)36
b(Each)18 b(section)f(of)f(data)h(is)g(disjoint)0 1709 y(from)e(the)h(others)
f(and)h(is)f(used)h(exactly)f(once.)32 b(However)n(,)18 b(you)d(carefully)g
(zero-pad)h(it)f(at)0 1759 y(both)f(ends)g(so)h(that)f(there)h(is)f(no)g
(wrap-around)g(ambiguity)f(in)h(the)g(output)f(convolution)f(or)0
1809 y(deconvolution.)j(Now)c(you)f(overlap)h Fq(and)f(add)h
Ft(these)g(sections)g(of)g(output.)16 b(Thus,)11 b(an)h(output)0
1859 y(point)g(near)i(the)f(end)h(of)f(one)g(section)g(will)f(have)i(the)g
(response)f(due)h(to)f(the)g(input)f(points)g(at)0 1909 y(the)f(beginning)e
(of)h(the)h(next)g(section)f(of)h(data)g(properly)f(added)h(in)f(to)g(it,)h
(and)g(likewise)f(for)h(an)0 1959 y(output)g(point)h(near)i(the)f(beginning)e
(of)i(a)h(section,)g Fq(mutatis)d(mutandis)p Ft(.)83 2008 y(Even)c(when)g
(computer)g(memory)g(is)g(available,)f(there)h(is)g(some)g(slight)g(gain)g
(in)f(computi)o(ng)0 2058 y(speed)k(in)e(segmenting)h(a)g(long)f(data)h(set,)
h(since)g(the)e(FFT)m(s')i Fv(N)i Fu(log)960 2068 y Fp(2)986
2058 y Fv(N)i Ft(is)9 b(slightly)e(slower)h(than)0 2108 y(linear)i(in)g
Fv(N)5 b Ft(.)15 b(However)n(,)c(the)f(log)g(term)g(is)g(so)h(slowly)e
(varying)g(that)h(you)f(will)g(often)h(be)h(much)0 2158 y(happier)i(to)g
(avoid)g(the)h(bookkeeping)e(complexities)h(of)h(the)f(overlap-add)g(or)h
(overlap-save)0 2208 y(methods:)21 b(If)13 b(it)g(is)g(practical)h(to)f(do)g
(so,)h(just)f(cram)i(the)e(whole)g(data)h(set)g(into)e(memory)i(and)0
2257 y(FFT)d(away)m(.)18 b(Then)11 b(you)g(will)e(have)i(more)g(time)g(for)f
(the)h(\256ner)g(things)e(in)i(life,)f(some)i(of)e(which)0
2307 y(are)16 b(described)f(in)f(succeeding)h(sections)g(of)f(this)g(chapter)
n(.)0 2456 y Fb(CITED)f(REFERENCES)g(AND)f(FUR)o(THER)i(READING:)0
2506 y(Nussbaumer)n(,)8 b(H.J.)e(1982,)i Fa(Fast)e(Fourier)i(T)n(ransform)f
(and)g(Convolution)i(Algorithms)f Fb(\(New)f(Y)m(ork:)f(Springer-)80
2547 y(V)n(erlag\).)p eop
%%Page: 545 8
bop 217 50 a Fs(13.2)10 b(Correlation)h(and)f(Autocorrelation)g(Using)g(the)g
(FFT)258 b Ft(545)p 0 68 1395 2 v 0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore

@endspecial 46 x Fb(Elliott,)17 b(D.F)l(.,)e(and)h(Rao,)f(K.R.)g(1982,)i
Fa(Fast)d(T)n(ransforms:)h(Algorithms,)i(Analyses,)e(Applications)i
Fb(\(New)80 230 y(Y)m(ork:)d(Academic)h(Press\).)0 280 y(Brigham,)f(E.O.)e
(1974,)h Fa(The)g(Fast)f(Fourier)i(T)n(ransform)f Fb(\(Englewood)i(Clif)o
(fs,)e(NJ:)e(Prentice-Hall\),)k(Chap-)80 322 y(ter)g(13.)0
540 y Fr(13.2)h(Correlation)21 b(and)g(Autocorrelation)f(Using)138
615 y(the)k(FFT)83 740 y Ft(Correlation)16 b(is)h(the)g(close)h(mathematical)
g(cousin)f(of)g(convolution.)33 b(It)17 b(is)g(in)g(some)0
790 y(ways)12 b(simpler)n(,)h(however)n(,)g(because)g(the)f(two)f(functions)f
(that)h(go)h(into)e(a)i(correlation)f(are)i(not)0 839 y(as)j(conceptually)e
(distinct)f(as)j(were)g(the)f(data)g(and)g(response)h(functions)d(that)i
(entered)g(into)0 889 y(convolution.)22 b(Rather)n(,)15 b(in)e(correlation,)h
(the)f(functions)f(are)j(represented)f(by)f(dif)o(ferent,)h(but)0
939 y(generally)e(similar)n(,)h(data)g(sets.)22 b(W)m(e)13
b(investigate)e(their)h(\252correlation,\272)h(by)f(comparing)g(them)0
989 y(both)f(directly)h(superposed,)h(and)g(with)e(one)i(of)f(them)h(shifted)
e(left)h(or)h(right.)83 1039 y(W)m(e)18 b(have)g(already)g(de\256ned)g(in)e
(equation)h(\(12.0.10\))g(the)g(correlation)g(between)h(two)0
1088 y(continuous)11 b(functions)h Fv(g)q Fu(\()p Fv(t)p Fu(\))i
Ft(and)f Fv(h)p Fu(\()p Fv(t)p Fu(\))p Ft(,)i(which)e(is)f(denoted)h(Corr)o
Fu(\()p Fv(g)q(;)7 b(h)p Fu(\))p Ft(,)15 b(and)e(is)g(a)g(function)0
1138 y(of)e Fq(lag)f Fv(t)p Ft(.)18 b(W)m(e)11 b(will)f(occasionally)h(show)g
(this)f(time)h(dependence)h(explicitly)m(,)e(with)g(the)h(rather)0
1188 y(awkward)17 b(notation)e(Corr)o Fu(\()p Fv(g)q(;)7 b(h)p
Fu(\)\()p Fv(t)p Fu(\))p Ft(.)36 b(The)17 b(correlation)f(will)f(be)j(lar)o
(ge)f(at)g(some)g(value)g(of)0 1238 y Fv(t)f Ft(if)f(the)g(\256rst)g
(function)f(\()p Fv(g)q Ft(\))i(is)f(a)h(close)g(copy)f(of)h(the)f(second)h
(\()p Fv(h)p Ft(\))f(but)g(lags)g(it)g(in)g(time)g(by)0 1288
y Fv(t)p Ft(,)21 b(i.e.,)g(if)d(the)g(\256rst)g(function)f(is)h(shifted)g(to)
f(the)h(right)f(of)h(the)g(second.)40 b(Likewise,)21 b(the)0
1337 y(correlation)12 b(will)f(be)j(lar)o(ge)f(for)f(some)i(negative)f(value)
g(of)f Fv(t)h Ft(if)g(the)f(\256rst)h(function)e Fq(leads)i
Ft(the)0 1387 y(second,)j(i.e.,)h(is)d(shifted)g(to)g(the)g(left)g(of)g(the)g
(second.)29 b(The)15 b(relation)e(that)h(holds)g(when)g(the)0
1437 y(two)j(functions)f(are)i(interchanged)f(is)434 1535 y(Corr)o
Fu(\()p Fv(g)q(;)7 b(h)p Fu(\)\()p Fv(t)p Fu(\))12 b(=)g Ft(Corr)o
Fu(\()p Fv(h;)7 b(g)q Fu(\)\()p Fw(\000)p Fv(t)p Fu(\))299
b(\()p Ft(13.2.1)p Fu(\))83 1632 y Ft(The)17 b(discrete)f(correlation)g(of)g
(two)f(sampled)i(functions)e Fv(g)981 1638 y Fo(k)1017 1632
y Ft(and)i Fv(h)1118 1638 y Fo(k)1138 1632 y Ft(,)h(each)g(periodic)0
1682 y(with)f(period)g Fv(N)5 b Ft(,)20 b(is)e(de\256ned)g(by)473
1819 y(Corr)o Fu(\()p Fv(g)q(;)7 b(h)p Fu(\))645 1825 y Fo(j)674
1819 y Fw(\021)718 1767 y Fo(N)s Fn(\000)p Fp(1)724 1779 y
Fm(X)723 1869 y Fo(k)q Fp(=0)796 1819 y Fv(g)816 1825 y Fo(j)r
Fp(+)p Fo(k)878 1819 y Fv(h)902 1825 y Fo(k)1259 1819 y Fu(\()p
Ft(13.2.2)p Fu(\))0 1954 y Ft(The)21 b Fq(discr)n(ete)d(corr)n(elation)e
(theor)n(em)21 b Ft(says)g(that)f(this)g(discrete)g(correlation)g(of)g(two)g
(real)0 2003 y(functions)11 b Fv(g)i Ft(and)f Fv(h)g Ft(is)g(one)g(member)i
(of)d(the)h(discrete)h(Fourier)e(transform)h(pair)489 2101
y(Corr)o Fu(\()p Fv(g)q(;)7 b(h)p Fu(\))661 2107 y Fo(j)690
2101 y Fw(\()-7 b(\))10 b Fv(G)810 2107 y Fo(k)830 2101 y Fv(H)865
2107 y Fo(k)885 2101 y Fu(*)353 b(\()p Ft(13.2.3)p Fu(\))0
2199 y Ft(where)12 b Fv(G)146 2205 y Fo(k)178 2199 y Ft(and)f
Fv(H)284 2205 y Fo(k)316 2199 y Ft(are)h(the)f(discrete)h(Fourier)f
(transforms)g(of)g Fv(g)970 2205 y Fo(j)999 2199 y Ft(and)g
Fv(h)1094 2205 y Fo(j)1112 2199 y Ft(,)h(and)g(the)f(asterisk)0
2248 y(denotes)e(complex)h(conjugation.)j(This)c(theorem)h(makes)g(the)f
(same)i(presumptions)d(about)h(the)0 2298 y(functions)i(as)i(those)f
(encountered)h(for)f(the)g(discrete)h(convolution)c(theorem.)83
2348 y(W)m(e)j(can)f(compute)h(correlations)e(using)g(the)h(FFT)h(as)g
(follows:)i(FFT)e(the)f(two)g(data)g(sets,)0 2398 y(multiply)e(one)i
(resulting)e(transform)h(by)h(the)f(complex)h(conjugate)g(of)f(the)h(other)n
(,)g(and)g(inverse)0 2448 y(transform)16 b(the)g(product.)31
b(The)17 b(result)e(\(call)h(it)g Fv(r)752 2454 y Fo(k)772
2448 y Ft(\))g(will)f(formally)g(be)h(a)h(complex)f(vector)0
2497 y(of)f(length)f Fv(N)5 b Ft(.)29 b(However)n(,)17 b(it)e(will)e(turn)h
(out)h(to)f(have)i(all)e(its)h(imaginary)f(parts)h(zero)g(since)0
2547 y(the)f(original)e(data)j(sets)f(were)h(both)e(real.)27
b(The)14 b(components)g(of)g Fv(r)1011 2553 y Fo(k)1045 2547
y Ft(are)h(the)f(values)g(of)g(the)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
