%!PS-Adobe-2.0
%%Creator: dvips 5.47 Copyright 1986-91 Radical Eye Software
%%Pages: 8 1
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Roman Helvetica-Oblique Helvetica Helvetica-BoldOblique
%%+ Times-Italic
%%EndComments
%%BeginProcSet: tex.pro
/TeXDict 200 dict def TeXDict begin /N /def load def /B{bind def}N /S /exch
load def /X{S N}B /TR /translate load N /isls false N /vsize 10 N /@rigin{
isls{[0 1 -1 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
Resolution VResolution vsize neg mul TR matrix currentmatrix dup dup 4 get
round 4 exch put dup dup 5 get round 5 exch put setmatrix}N /@letter{/vsize 10
N}B /@landscape{/isls true N /vsize -1 N}B /@a4{/vsize 10.6929133858 N}B /@a3{
/vsize 15.5531 N}B /@ledger{/vsize 16 N}B /@legal{/vsize 13 N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0 0]N
/FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn begin
/FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X array
/BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo setfont}2
array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx FMat N df-tail}
B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{pop nn dup definefont
setfont}B /ch-width{ch-data dup length 5 sub get}B /ch-height{ch-data dup
length 4 sub get}B /ch-xoff{128 ch-data dup length 3 sub get sub}B /ch-yoff{
ch-data dup length 2 sub get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B
/ch-image{ch-data dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0
N /rw 0 N /rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S
dup /base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0
ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{ch-image}
imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn /base get cc ctr
put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1 sub dup 2 index S get sf
div put}if put /ctr ctr 1 add N}B /I{cc 1 add D}B /bop{userdict /bop-hook
known{bop-hook}if /SI save N @rigin 0 0 moveto}N /eop{clear SI restore
showpage userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if /VResolution X /Resolution X 1000 div /DVImag X /IE 256
array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for}N /p /show load N
/RMat[1 0 0 -1 0 0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X
/rulex X V}B /V statusdict begin /product where{pop product dup length 7 ge{0
7 getinterval(Display)eq}{pop false}ifelse}{false}ifelse end{{gsave TR -.1 -.1
TR 1 1 scale rulex ruley false RMat{BDot}imagemask grestore}}{{gsave TR -.1
-.1 TR rulex ruley scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /a{
moveto}B /delta 0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{
S p tail}B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B
/j{3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w
}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{clear SS restore}B end
%%EndProcSet
%%BeginProcSet: texps.pro
TeXDict begin /rf{655360 div mul Resolution mul 7227 div /PixPerEm X findfont
dup length 1 add dict /nn X{1 index /FID ne{nn 3 1 roll put}{pop pop}ifelse}
forall 256 dict begin nn /Encoding get 0 1 255{2 copy get 3 index 2 index get
1000 mul PixPerEm div def pop}for pop pop nn /Metrics currentdict put end
/fontname X /nn dup nn definefont[PixPerEm 0 0 PixPerEm neg 0 0]makefont N
fontname{/foo setfont}2 array copy cvx N fontname load 0 nn put}N
/ObliqueSlant{dup sin S cos div neg}B
/SlantFont{/foo X[1 0 foo 1 0 0] TransFont}N
/ExtendFont{/foo X 3 2 roll[S{foo div}forall]3 1 roll[foo 0 0 1 0 0]
TransFont}N
/ExpandFont{/foo X 3 2 roll[S{foo div}forall]3 1 roll[foo 0 0 foo 0 0]
TransFont}N
/TransFont{S findfont S makefont dup length dict /nn X{1 index
/FID ne{nn 3 1 roll put}{pop pop}ifelse}forall dup nn definefont pop}N end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N /vs
792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP false N /BBcalc false N
/p 3 def}B /@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{
@scaleunit div /vsc X}B /@hsize{/hs X /CLIP true N}B /@vsize{/vs X /CLIP true
N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{10 div /rwi X}
B /@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X /BBcalc true N}B
/magscale true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{md begin /letter{}N /note{}N /legal{}N /od{txpose 1 0 mtx
defaultmatrix dtransform S atan/pa X newpath clippath mark{transform{
itransform moveto}}{transform{itransform lineto}}{6 -2 roll transform 6 -2
roll transform 6 -2 roll transform{itransform 6 2 roll itransform 6 2 roll
itransform 6 2 roll curveto}}{{closepath}}pathforall newpath counttomark array
astore /gc xdf pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{
PaintBlack}if}N /txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR
pop 1 -1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0 TR}if
yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR pop pop 270
rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip not
and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg sub neg 0 TR}if yflip xflip
not and{TR pop pop 270 rotate ppr 2 get ppr 0 get neg sub neg 0 S TR}if}
ifelse scaleby96{ppr aload pop 4 -1 roll add 2 div 3 1 roll add 2 div 2 copy
TR .96 dup scale neg S neg S TR}if}N /cp{pop pop showpage pm restore}N end}if}
if}N /normalscale{Resolution 72 div VResolution 72 div neg scale magscale{
DVImag dup scale}if}N /psfts{S 65536 div N}N /startTexFig{/psf$SavedState save
N userdict maxlength dict begin /magscale false def normalscale currentpoint
TR /psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx psf$llx
sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy scale psf$cx
psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR /showpage{}N
/erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{psf$llx psf$lly
psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2 roll moveto 6 -1 roll
S lineto S lineto S lineto closepath clip newpath moveto}N /endTexFig{end
psf$SavedState restore}N /@beginspecial{SDict begin /SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults}N /@setspecial{CLIP{newpath 0 0
moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR
hsc vsc scale ang rotate BBcalc{rwi urx llx sub div dup scale llx neg lly neg
TR}if /showpage{}N /erasepage{}N /copypage{}N newpath}N /@endspecial{grestore
clear SpecialSave restore end}N /@defspecial{SDict begin}N /@fedspecial{end}B
/li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{/SaveX currentpoint /SaveY X N 1
setlinecap newpath}N /st{stroke SaveX SaveY moveto}N /fil{fill SaveX SaveY
moveto}N /ellipse{/endangle X /startangle X /yrad X /xrad X /savematrix matrix
currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc savematrix
setmatrix}N end
%%EndProcSet
TeXDict begin 1000 300 300 @start /Fa [ 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 14 17 24 28 28
44 36 14 17 17 19 29 14 17 14 14 28 28 28 28 28 28 28 28 28
28 17 17 29 29 29 30 49 36 36 36 36 33 30 39 36 14 28 36 30
41 36 39 33 39 36 33 30 36 33 47 33 33 30 17 14 17 29 28 14
28 30 28 30 28 17 30 30 14 14 28 14 44 30 30 30 30 19 28 17
30 28 39 28 28 25 19 14 19 29 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 28 28 8 28 28 28 28
12 25 28 17 17 30 30 0 28 28 28 14 0 28 17 14 25 25 28 50 50
0 30 0 17 17 17 17 17 17 17 17 0 17 17 0 17 17 17 50 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 50 0 18 0 0 0 0 30 39 50 18 0 0 0
0 0 44 0 0 0 14 0 0 14 30 47 30 0 0 0 0 ] /Helvetica-BoldOblique
1000 786432 rf /Fb 8 94 df<0102040C1818303070606060E0E0E0E0E0E0E0E0E0E0606060
70303018180C04020108227D980E>40 D<8040203018180C0C0E06060607070707070707070707
0606060E0C0C18183020408008227E980E>I<07C018303018701C600C600CE00EE00EE00EE00E
E00EE00EE00EE00EE00E600C600C701C30181C7007C00F157F9412>48 D<03000700FF00070007
000700070007000700070007000700070007000700070007000700070007007FF00C157E9412>
I<0F8030E040708030C038E0384038003800700070006000C00180030006000C08080810183FF0
7FF0FFF00D157E9412>I<FFFFFCFFFFFC000000000000000000000000000000000000FFFFFCFF
FFFC160A7E8C1B>61 D<FCFCC0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0
C0C0FCFC06217D980A>91 D<FCFC0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C
0C0C0C0CFCFC062180980A>93 D E /Fc [ 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 11 14 17 17 28 26
11 11 11 17 19 8 11 8 9 17 17 17 17 17 17 17 17 17 17 9 9 19
19 19 15 31 24 22 22 24 20 18 24 24 11 13 24 20 30 24 24 18
24 22 18 20 24 24 31 24 24 20 11 9 11 16 17 11 15 17 15 17
15 11 17 17 9 9 17 9 26 17 17 17 17 11 13 9 17 17 24 17 17
15 16 7 16 18 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 11 17 17 6 17 17 17 17 6 15 17 11 11
18 18 0 17 17 17 8 0 15 12 11 15 15 17 33 33 0 15 0 11 11 11
11 11 11 11 11 0 11 11 0 11 11 11 33 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 30 0 9 0 0 0 0 20 24 30 10 0 0 0 0 0 22 0 0 0 9 0
0 9 17 24 17 0 0 0 0 ] /Times-Roman 1000 524288 rf /Fd [ 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 10 14 17 21 21 35 32 14 14 14 21 28 10 14 10 12 21 21 21
21 21 21 21 21 21 21 14 14 28 28 28 21 38 25 25 28 30 25 25
30 30 14 18 28 23 35 28 30 25 30 25 21 23 30 25 35 25 23 23
16 12 16 18 21 14 21 21 18 21 18 12 21 21 12 12 18 12 30 21
21 21 21 16 16 12 21 18 28 18 18 16 17 11 17 22 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 16
21 21 7 21 21 21 21 9 23 21 14 14 21 21 0 21 21 21 10 0 22
15 14 23 23 21 37 42 0 21 0 14 14 14 14 14 14 14 14 0 14 14
0 14 14 14 37 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 37 0 11 0 0 0
0 23 30 39 13 0 0 0 0 0 28 0 0 0 12 0 0 12 21 28 21 0 0 0 0
] /Times-Italic 1000 655360 rf /Fe [ 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 21 30 35 35 55
45 17 21 21 24 36 17 21 17 17 35 35 35 35 35 35 35 35 35 35
21 21 36 36 36 38 61 45 45 45 45 42 38 48 45 17 35 45 38 52
45 48 42 48 45 42 38 45 42 59 42 42 38 21 17 21 36 35 17 35
38 35 38 35 21 38 38 17 17 35 17 55 38 38 38 38 24 35 21 38
35 48 35 35 31 24 17 24 36 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 21 35 35 10 35 35 35 35
15 31 35 21 21 38 38 0 35 35 35 17 0 35 22 17 31 31 35 62 62
0 38 0 21 21 21 21 21 21 21 21 0 21 21 0 21 21 21 62 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 62 0 23 0 0 0 0 38 48 62 23 0 0 0
0 0 55 0 0 0 17 0 0 17 38 59 38 0 0 0 0 ] /Helvetica-BoldOblique
1000 983040 rf /Ff [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 12 18 18 30 22 7 11 11 13 19
9 11 9 9 18 18 18 18 18 18 18 18 18 18 9 9 19 19 19 18 34 22
22 24 24 22 20 26 24 9 17 22 18 28 24 26 22 26 24 22 20 24
22 31 22 22 20 9 9 9 16 18 7 18 18 17 18 18 9 18 18 7 7 17
7 28 18 18 18 18 11 17 9 18 17 24 17 17 17 11 9 11 19 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 11 18 18 6 18 18 18 18 6 11 18 11 11 17 17 0 18 18 18 9 0
18 12 7 11 11 18 33 33 0 20 0 11 11 11 11 11 11 11 11 0 11
11 0 11 11 11 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 33 0 12 0
0 0 0 18 26 33 12 0 0 0 0 0 30 0 0 0 9 0 0 7 20 31 20 0 0 0
0 ] /Helvetica-Oblique 1000 524288 rf /Fg [ 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 12 18 18
30 22 7 11 11 13 19 9 11 9 9 18 18 18 18 18 18 18 18 18 18
9 9 19 19 19 18 34 22 22 24 24 22 20 26 24 9 17 22 18 28 24
26 22 26 24 22 20 24 22 31 22 22 20 9 9 9 16 18 7 18 18 17
18 18 9 18 18 7 7 17 7 28 18 18 18 18 11 17 9 18 17 24 17 17
17 11 9 11 19 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 11 18 18 6 18 18 18 18 6 11 18 11 11
17 17 0 18 18 18 9 0 18 12 7 11 11 18 33 33 0 20 0 11 11 11
11 11 11 11 11 0 11 11 0 11 11 11 33 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 33 0 12 0 0 0 0 18 26 33 12 0 0 0 0 0 30 0 0 0 9
0 0 7 20 31 20 0 0 0 0 ] /Helvetica 1000 524288 rf /Fh [ 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 10 10 13 21 21 33 25 8 12 12 15 22 10 12 10 10 21 21 21 21
21 21 21 21 21 21 10 10 22 22 22 21 38 25 25 27 27 25 23 29
27 10 19 25 21 31 27 29 25 29 27 25 23 27 25 35 25 25 23 10
10 10 18 21 8 21 21 19 21 21 10 21 21 8 8 19 8 31 21 21 21
21 12 19 10 21 19 27 19 19 19 12 10 12 22 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 12 21 21
6 21 21 21 21 7 12 21 12 12 19 19 0 21 21 21 10 0 20 13 8 12
12 21 37 37 0 23 0 12 12 12 12 12 12 12 12 0 12 12 0 12 12
12 37 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 37 0 14 0 0 0 0 21 29
37 14 0 0 0 0 0 33 0 0 0 10 0 0 8 23 35 23 0 0 0 0 ] /Helvetica-Oblique
1000 589824 rf /Fi [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 10 14 17 21 21 35 32 14 14 14 21
23 10 14 10 12 21 21 21 21 21 21 21 21 21 21 12 12 23 23 23
18 38 30 28 28 30 25 23 30 30 14 16 30 25 37 30 30 23 30 28
23 25 30 30 39 30 30 25 14 12 14 19 21 14 18 21 18 21 18 14
21 21 12 12 21 12 32 21 21 21 21 14 16 12 21 21 30 21 21 18
20 8 20 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 14 21 21 7 21 21 21 21 7 18 21 14 14 23
23 0 21 21 21 10 0 19 15 14 18 18 21 42 42 0 18 0 14 14 14
14 14 14 14 14 0 14 14 0 14 14 14 42 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 37 0 11 0 0 0 0 25 30 37 13 0 0 0 0 0 28 0 0 0 12
0 0 12 21 30 21 0 0 0 0 ] /Times-Roman 1000 655360 rf /Fj 2
7 df<FFFFF0FFFFF014027D881B>0 D<0030000030000030000030000030000030000030000030
00003000003000003000FFFFFCFFFFFC0030000030000030000030000030000030000030000030
00003000FFFFFCFFFFFC16187E961B>6 D E /Fk 2 107 df<06070600000000384C4C8C981818
30326262643808147F930C>105 D<0060007000600000000000000000038004C0046008C008C0
00C000C0018001800180018003000300030003006600E600CC0078000C1A81930E>I
E /Fl 1 52 df<1F00218060C060C000C0008001800F00008000400060C060C060804060801F00
0B107F8F0F>51 D E /Fm 4 123 df<60F0F070101020204040040A7D830A>59
D<0000300000F00003C0000700001E0000780001E0000780000E00003C0000F00000F000003C00
000E000007800001E000007800001E000007000003C00000F000003014167D921B>I<000E0013
003700360060006000600060006007FC00C000C000C000C000C001800180018001800180018003
000300030003006600E600CC007800101D7E9611>102 D<07840FCC1878101000200040018002
000400080810083C3043E081C00E0E7F8D10>122 D E /Fn 5 52 df<00600000600000600000
6000006000006000006000006000006000006000FFFFF0FFFFF000600000600000600000600000
600000600000600000600000600000600014167E9119>43 D<0F0030C0606060604020C030C030
C030C030C030C030C030C030C03040206060606030C00F000C137E9211>48
D<0C001C00EC000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C00FFC0
0A137D9211>I<1F0060C06060F070F030603000700070006000C001C001800200040008101010
20207FE0FFE00C137E9211>I<0FC030707038703870380038003000E00FC0007000380018001C
601CF01CF018E03860701FC00E137F9211>I E /Fo 2 49 df<0E003F8071C060C0E0E0C060C0
60C060C060E0E060C071C03F800E000B0E7E8D11>14 D<040E0E1C1C1C38383070706060C0C007
0F7F8F0A>48 D E /Fp 14 121 df<0300070007000F003F00F700470007000700070007000700
070007000700070007000700070007000700FFF0FFF00C177C9614>49 D<0FC03FF07838701CE0
1EE00EE00E400E000E001E001C003C007800F001E003C007800F001E003C0E700EFFFEFFFE0F17
7E9614>I<1FC0007FF000707800203C00001C00001C0007FC001FFC007C1C00F01C00E01C00E0
1C00E01C00707C003FFF800F8F8011107E8F14>97 D<03F80FFC3C1C78087000F000E000E000E0
00E000F0007000780E3C1E0FFC03F00F107E8F14>99 D<007E00007E00000E00000E00000E0000
0E00000E0007CE001FFE003C3E00781E00700E00F00E00E00E00E00E00E00E00E00E00F00E0070
1E00781E003C3E001FFFC007CFC012177F9614>I<07E01FF83C3C781C701EF00EE00EFFFEFFFE
E000F0007000780E3C1E0FFC03F00F107E8F14>I<007C01FE03CE0384038003800380FFFEFFFE
0380038003800380038003800380038003800380038003807FFC7FFC0F177F9614>I<FC7800FD
FE001F8F001E07001E07001C07001C07001C07001C07001C07001C07001C07001C07001C0700FF
9FE0FF9FE01310808F14>110 D<FF0F80FF3FC007F1C007C08007C00007800007000007000007
0000070000070000070000070000070000FFFC00FFFC001210808F14>114
D<0FD87FF8E078C038C038F0007F803FF007FC001EE00EE006F006F81CFFF8CFE00F107E8F14>
I<07000700070007000700FFFCFFFC07000700070007000700070007000700070E070E070E079E
03FC00F00F157F9414>I<FC3F00FC3F001C07001C07001C07001C07001C07001C07001C07001C
07001C07001C07001C0F001E1F000FFFE003E7E01310808F14>I<FF7F80FF7F80380E00380E00
380E00380E0039CE0039CE0019CC001B6C001B6C001A6C001A6C001E7C000E78000E780011107F
8F14>119 D<FE7F80FE7F801E38000E780007700007E00003E00001C00003C00003E000077000
0E78000E38001C1C00FF7F80FF7F8011107F8F14>I E /Fq 42 123 df<000703C70FC70C401C
001C001C001C001C00FFC7FFC71C071C071C071C071C071C071C071C071C071C071C071C071C07
1018809713>12 D<E1C0E1C0E1C060C040804080C1800A077F9612>34 D<E0E0E0604040C00307
7D820A>44 D<FF80FF80090280880C>I<E0E0E003037D820A>I<FFF000FFFC00E01E00E00700E0
0380E00380E00380E00380E00700E01E00FFFC00FFFC00E01F00E00780E00180E001C0E001C0E0
01C0E001C0E00380E00F00FFFE00FFF80012177D9618>66 D<00FF0003FFC00F83C01E00C01C00
00380000700000700000E00000E00000E00000E00000E00000E00000E000007000007000003800
001C00401E00C00F81C003FF8000FE0012177E9617>I<FFFEFFFEE000E000E000E000E000E000
E000E000FFFCFFFCE000E000E000E000E000E000E000E000E000FFFFFFFF10177D9615>69
D<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E003177D960A>73
D<E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000
E000E000FFFCFFFC0E177D9613>76 D<F8001FF8001FE80017EC0037EC0037EE0077E60067E600
67E700E7E300C7E381C7E381C7E18187E1C387E1C387E0C307E0E707E0E707E06607E06607E03C
07E03C07E03C0718177D961F>I<F801C0F801C0EC01C0EC01C0E601C0E601C0E701C0E301C0E3
81C0E181C0E1C1C0E0C1C0E0E1C0E061C0E071C0E031C0E039C0E019C0E019C0E00DC0E00DC0E0
07C0E007C012177D9619>I<01FC0007FF000F07801C01C03800E03800E0700070700070E00038
E00038E00038E00038E00038E00038E000387000707000703800E03800E01C01C00F078007FF00
01FC0015177E961A>I<FFF000FFFC00E01E00E00700E00380E00380E00380E00380E00700E01E
00FFFC00FFF000E07000E03000E03800E01C00E01C00E00E00E00E00E00700E00380E00380E001
C012177D9617>82 D<07E01FF8383C600CC00CC000C000E00070007E003FE00FF001F8001C000E
000600060006C006E00CF8387FF00FC00F177E9614>I<FFFFF8FFFFF800700000700000700000
700000700000700000700000700000700000700000700000700000700000700000700000700000
700000700000700000700000700015177F9618>I<E00380E00380E00380E00380E00380E00380
E00380E00380E00380E00380E00380E00380E00380E00380E00380E00380E00380E00380700700
780F003C1E001FFC0007F00011177D9618>I<60C040804080C180E1C0E1C0E1C00A077A9612>
92 D<1FC07FE0707040380038003801F81FF87E38F038E038E038F0787FF83FB80D0F7F8E11>
97 D<E000E000E000E000E000E000E000E000E7C0FFE0F870E038E038E01CE01CE01CE01CE01C
E038E038F0F0FFE0E7800E177E9612>I<07E01FF8381870007000E000E000E000E000E0007000
700838381FF807E00D0F7F8E10>I<001C001C001C001C001C001C001C001C079C1FFC3C3C701C
701CE01CE01CE01CE01CE01C701C703C387C1FFC0F9C0E177F9612>I<0F801FE0387070306038
E018FFF8FFF8E000E0006000700038181FF807E00D0F7F8E10>I<03E007E00C201C001C001C00
1C001C00FF80FF801C001C001C001C001C001C001C001C001C001C001C001C001C000B1780960B
>I<0F9F1FFF38F0707070707070707038E03FC06F80600070007FF03FF87FFC701EE00EE00EE0
0E783C3FF80FE010167F8E12>I<E000E000E000E000E000E000E000E000E7E0EFF0F878F038E0
38E038E038E038E038E038E038E038E038E038E0380D177E9612>I<E0E0E0000000000000E0E0
E0E0E0E0E0E0E0E0E0E0E0E0E003187E9708>I<E000E000E000E000E000E000E000E000E0F8E1
F0E3E0E3C0E780EF00FE00FF00FF80F380E1C0E1E0E0E0E0F0E0780D177E9611>107
D<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E003177E9608>I<E7E1F8EFF3FCF87E
1EF03C0EE0380EE0380EE0380EE0380EE0380EE0380EE0380EE0380EE0380EE0380EE0380E170F
7E8E1C>I<E7E0EFF0F878F038E038E038E038E038E038E038E038E038E038E038E0380D0F7E8E
12>I<07C01FF03838701C701CE00EE00EE00EE00EE00E701C701C3C781FF007C00F0F7F8E12>I<
E7C0FFE0F870E038E038E01CE01CE01CE01CE01CE038E038F0F0FFE0E780E000E000E000E000E0
00E0000E157E8E12>I<E380EF80FC00F800F000F000E000E000E000E000E000E000E000E000E0
00090F7E8E0C>114 D<1F007FC0E0C0E000E000F0007F003F800FC001E080E0C0E0E1C07FC01F
000B0F7F8E0E>I<3800380038003800FF80FF8038003800380038003800380038003800380038
0038401FC01F000A137F920D>I<E038E038E038E038E038E038E038E038E038E038E038E038E0
F87FF83F380D0F7E8E12>I<E038E038E03870707070707038E038E038E01CC01DC00D800D800F
8007000E0F7F8E10>I<E0F038E0F838E0D838E09838719C70719C70718C70310C603B0CE03B0E
E03B06E01A06C01A06C01E07C00E0380160F7F8E18>I<701C783838701C700EE007C003800380
07C00EE00C601C703838701CF01E0F0F808E10>I<E038E038703870707070386038E018E01CC0
1CC00DC00D800580070007000700060006008C00FC00F8000E157F8E10>I<FFE0FFE001C001C0
0380070007000E001C001C00380070007000FFF0FFF00C0F7F8E0F>I E
/Fr 58 126 df<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E060C00B097D9312>34
D<0E700E700E700E70FFFEFFFE7FFE0E700E700E701CE01CE07FFEFFFEFFFE1CE01CE01CE01CE0
1CE00F147F9312>I<0F001F8039C039C039C039C03BBE3BBE3F781E701C703EF07EE0EFE0E7C0
E7C4E3CEF7EE7FFC3C380F147F9312>38 D<018007800F001E003C00380078007000F000E000E0
00E000E000E000E000E000F0007000780038003C001E000F000780018009197B9612>40
D<C000F00078003C001E000E000F00070007800380038003800380038003800380078007000F00
0E001E003C007800F000C00009197D9612>I<070007000700E738FFF87FF01FC01FC07FF0FFF8
E7380700070007000D0E7E9012>I<038003800380038003800380FFFEFFFEFFFE038003800380
0380038003800F0F7F9112>I<307C7C3C0C1C38F0E006097A8312>I<FFF8FFF8FFF80D037E8B12
>I<60F0F0600404798312>I<0018003800380070007000E000E001C001C001C003800380070007
000E000E001C001C001C003800380070007000E000E000C0000D1A7E9612>I<07C00FE01C7038
38701C701CE00EE00EE00EE00EE00EE00EE00EE01E701C701C38381C700FE007C00F147F9312>
I<030007000F001F00FF00F7000700070007000700070007000700070007000700070007007FF0
7FF00C147E9312>I<0F803FE070F0F078E038E038403800380078007000F001E003C007800F00
1E0038387038FFF8FFF80D147E9312>I<7FF07FF07000700070007000700070007F807FE060F0
007800384038E038E038E07070F03FC01F000D147E9312>53 D<30787830000000000000307878
38183830F0C005137A8D12>59 D<0038007801F003E00F801F003C00F800F000F8003C001F000F
8003E001F0007800380D117E9212>I<FFFEFFFE7FFE0000000000007FFEFFFEFFFE0F097F8E12>
I<4000E000F0007C003E000F8007C001E000F8007800F801E007C00F803E007C00F000E0004000
0D137E9312>I<038007C007C006C006C00EE00EE00EE00EE00C601C701C701C701FF01FF03838
38383838FEFEFEFE0F147F9312>65 D<07981FF83CF8387870387038F038E000E000E000E1FEE1
FEE038F0387038707838783CF81FF807B80F147F9312>71 D<FFF8FFF807000700070007000700
07000700070007000700070007000700070007000700FFF8FFF80D147E9312>73
D<0FF80FF800E000E000E000E000E000E000E000E000E000E000E000E000E040E0E0E0F1E07FC0
3F000D147E9312>I<FE3F80FE3F803A2E003A2E003B6E003B6E003B6E003B6E003B6E003B6E00
3BEE0039CE0039CE00380E00380E00380E00380E00380E00FE3F80FE3F801114809312>77
D<FEFEFEFE3A383A383B383B383B383B383B383B3839B839B839B839B839B839B838B838B8FEF8
FEF80F147F9312>I<FF80FFE038F03878383838383838387838F03FE03FE038F0387038703870
387038773877FE3FFE1C10147F9312>82 D<1F303FF070F0E0F0E070E070F000F0007F003FE00F
F000F000780038E038E038F078F070FFE0CF800D147E9312>I<FFFEFFFEE38EE38EE38E038003
80038003800380038003800380038003800380038003801FF01FF00F147F9312>I<FCFCFCFC1C
701CE00EE00FE00FC007C007800380078007C00FC00EE01EE01C701C703838FEFEFEFE0F147F93
12>88 D<FFC0FFC0E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E0
00E000E000E000E000E000E000FFC0FFC00A1A7A9612>91 D<FFC0FFC001C001C001C001C001C0
01C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C0FFC0FFC00A
1A7F9612>93 D<FFF8FFF8FFF80D037E7F12>95 D<3F807FE070F0207000700FF03FF07870F070
E070E070F0F07FFE1F3E0F0E7E8D12>97 D<FC00FC001C001C001C001C001DF01FF81F1E1E0E1C
0F1C071C071C071C071C0F1E0E1F1C1FF81DE01014809312>I<07F01FF838387010F000E000E0
00E000E000F000703838781FF007E00D0E7E8D12>I<01F801F8003800380038003807B81FF838
787078F038E038E038E038E038F038707878F81FFF0FBF10147F9312>I<07801FE038F07078F0
38E038FFF8FFF8E000F000703838781FF007C00D0E7E8D12>I<007E01FF03C7038203800380FF
FEFFFE03800380038003800380038003800380038003807FFC7FFC1014809312>I<FC0000FC00
001C00001C00001C00001C00001CF0001FF8001F1C001E1C001C1C001C1C001C1C001C1C001C1C
001C1C001C1C001C1C00FF9F80FF9F801114809312>104 D<06000F000F000600000000000000
FF00FF000700070007000700070007000700070007000700FFF8FFF80D157D9412>I<00C001E0
01E000C00000000000003FE03FE000E000E000E000E000E000E000E000E000E000E000E000E000
E000E000E041E0E1C0FF807E000B1C7E9412>I<FC0000FC00001C00001C00001C00001C00001F
FF001FFF001C78001CF0001DE0001FC0001FE0001FE0001EF0001C78001C3C001C3C00FF3F80FF
3F801114809312>I<FF80FF800380038003800380038003800380038003800380038003800380
038003800380FFFEFFFE0F147F9312>I<FB8E00FFFF803EFB803CF38038E38038E38038E38038
E38038E38038E38038E38038E380FEFBE0FEFBE0130E818D12>I<FCF000FFF8001F1C001E1C00
1C1C001C1C001C1C001C1C001C1C001C1C001C1C001C1C00FF9F80FF9F80110E808D12>I<0F80
3FE038E07070E038E038E038E038E038F078707038E03FE00F800D0E7E8D12>I<FDF0FFF81F1E
1E0E1C0F1C071C071C071C071C0F1E0E1F1C1FF81DE01C001C001C001C001C00FF80FF80101580
8D12>I<FE7CFEFE0FCE0F840F000E000E000E000E000E000E000E00FFF0FFF00F0E7F8D12>114
D<1FF07FF0E070C070E000FF003FE00FF00078E018E018F038FFF0DFC00D0E7E8D12>I<0E000E
000E000E00FFF8FFF80E000E000E000E000E000E000E000E380E380E7807F003C00D127F9112>
I<FCFC00FCFC001C1C001C1C001C1C001C1C001C1C001C1C001C1C001C1C001C1C001C3C000FFF
8007DF80110E808D12>I<FEFEFEFE38383C781C701C701C700EE00EE00EE006C007C007C00380
0F0E7F8D12>I<FEFEFEFE701C701C301838383BB83FF83FF83AB838B81CF01CF01CF00F0E7F8D
12>I<FCFEFCFE1CF00EE00FC007C00380078007C00EE01EF01C70FEFEFEFE0F0E7F8D12>I<7FFC
7FFC7038707000E001C0038007000E001C1C381C701CFFFCFFFC0E0E7F8D12>122
D<00F803F80780070007000700070007000700070007000F00FE00FE000F000700070007000700
0700070007000700078003F800F80D1A7E9612>I<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0
E0E0E0E0E0E0E0E0031A799612>I<F800FE000F00070007000700070007000700070007000780
03F803F80780070007000700070007000700070007000F00FE00F8000D1A7E9612>I
E /Fs 14 121 df<00E001E007C007000F001E003C0038007800700070007000F000E000E000E0
00E000E000E000E000F000700070007000780038003C001E000F00070007C001E000E00B217A9C
16>40 D<E000F0007C001C001E000F000780038003C001C001C001C001E000E000E000E000E000
E000E000E001E001C001C001C003C0038007800F001E001C007C00F000E0000B217C9C16>I<38
7C7E7E3E0E1E3C7CF860070B798416>44 D<03F80FFE1FFE3C1E780C7000F000E000E000E000E0
00F000700778073E0F1FFE0FFC03F010127D9116>99 D<003F00007F00003F0000070000070000
070000070003C7000FF7003FFF003C1F00780F00F00700F00700E00700E00700E00700E00700F0
0700F00F00781F007C3F003FFFE01FF7F007C7E014197F9816>I<001F00007F8000FF8001E780
01C30001C00001C0007FFF00FFFF00FFFF0001C00001C00001C00001C00001C00001C00001C000
01C00001C00001C00001C00001C0003FFE007FFF003FFE0011197F9816>102
D<018003C003C0018000000000000000007FC07FC07FC001C001C001C001C001C001C001C001C0
01C001C001C001C07FFFFFFF7FFF101A7D9916>105 D<FFC000FFC000FFC00001C00001C00001
C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001
C00001C00001C00001C000FFFF80FFFF80FFFF8011197E9816>108 D<7E3C00FEFF007FFF800F
87800F03800F03800E03800E03800E03800E03800E03800E03800E03800E03800E03807FC7F0FF
E7F87FC7F01512809116>110 D<03E0000FF8001FFC003C1E00780F00700700E00380E00380E0
0380E00380E00380F00780700700780F003C1E001FFC000FF80003E00011127E9116>I<7E3E00
FEFF807FFFC00F83E00F01E00E00F00E00F00E00700E00700E00700E00700E00F00F00E00F01E0
0F83C00FFFC00EFF000E3C000E00000E00000E00000E00000E00000E00007FC000FFE0007FC000
141B809116>I<7E1F80FE3F807E1F800E03800E03800E03800E03800E03800E03800E03800E03
800E03800E03800E07800F0F800FFFF007FFF803E3F01512809116>117
D<7F1FC0FF1FE07F1FC01C07001E0F000E0E000E0E000E0E00071C00071C00071C00071C0003B8
0003B80003B80001F00001F00000E00013127F9116>I<7F1FC07F3FC07F1FC00F1C00073C0003
B80003F00001F00000E00001E00001F00003B800073C00071C000E0E007F1FC0FF3FE07F1FC013
127F9116>120 D E /Ft 6 121 df<FFFFFF80FFFFFF8019027D8A20>0
D<60F0F06004047C8B0C>I<000600000006000000060000000600000006000000060000000600
00000600000006000000060000000600000006000000060000FFFFFFE0FFFFFFE0000600000006
0000000600000006000000060000000600000006000000060000000600000006000000060000FF
FFFFE0FFFFFFE01B1C7E9A20>6 D<07C000201FE000203FF80020783C0060E01F00E0C00783C0
8003FF808000FF0080007C000000000007C000201FE000203FF80020783C0060E01F00E0C00783
C08003FF808000FF0080007C001B137E9320>25 D<00000000C000000001C00000000180000000
03800000000300000000070000000006000000000E000000000C000000001C0000000018000000
003800000000300000000070000000006000000000E000000000C000000001C000000001800000
0003800000000300000C000700003C000600004E000E00008E000C000007001C00000700180000
03803800000380300000038070000001C060000001C0E0000000E0C0000000E1C0000000718000
000073800000003B000000003F000000001E000000001E000000000C000000000C000000222A7E
8123>112 D<1F00308070406060E0E0E0E0E040E00060007000300018001C003300718061C0E0
C0E0E0E0E0E0E060E070C031C0198007000300018001C000C000E040E0E0E0E0E0C0C041C02180
1F000B257D9C12>120 D E /Fu 13 121 df<004000800100020006000C000C00180018003000
30007000600060006000E000E000E000E000E000E000E000E000E000E000E000E0006000600060
00700030003000180018000C000C00060002000100008000400A2A7D9E10>40
D<800040002000100018000C000C000600060003000300038001800180018001C001C001C001C0
01C001C001C001C001C001C001C001C0018001800180038003000300060006000C000C00180010
002000400080000A2A7E9E10>I<00060000000600000006000000060000000600000006000000
060000000600000006000000060000000600000006000000060000FFFFFFE0FFFFFFE000060000
000600000006000000060000000600000006000000060000000600000006000000060000000600
0000060000000600001B1C7E9720>43 D<03C00C301818300C300C700E60066006E007E007E007
E007E007E007E007E007E007E007E007E007E00760066006700E300C300C18180C3007E0101D7E
9B15>48 D<030007003F00C7000700070007000700070007000700070007000700070007000700
0700070007000700070007000700070007000F80FFF80D1C7C9B15>I<07C01830201C400C400E
F00FF80FF807F8077007000F000E000E001C001C00380070006000C00180030006010C01180110
023FFE7FFEFFFE101C7E9B15>I<07E01830201C201C781E780E781E381E001C001C0018003000
6007E00030001C001C000E000F000F700FF80FF80FF80FF00E401C201C183007E0101D7E9B15>
I<7FFFFFC0FFFFFFE0000000000000000000000000000000000000000000000000000000000000
0000FFFFFFE07FFFFFC01B0C7E8F20>61 D<FEFEC0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0
C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0FEFE07297C9E0C>91 D<FEFE060606060606060606
06060606060606060606060606060606060606060606060606060606FEFE0729809E0C>93
D<03E00C301818300C700E6006E006FFFEE000E000E000E00060007002300218040C1803E00F12
7F9112>101 D<FC7C001D86001E03001C01801C01C01C00C01C00E01C00E01C00E01C00E01C00
E01C00E01C01C01C01C01C01801E03001D06001CF8001C00001C00001C00001C00001C00001C00
001C0000FF8000131A7F9117>112 D<7F8FF00F03800F030007020003840001C80001D80000F0
0000700000780000F800009C00010E00020E000607000403801E07C0FF0FF81512809116>120
D E /Fv 17 123 df<007C00C2010203000600060006000700078003C001E001F003780E381C1C
381C300C700C700CE008E008E018E010E010E0306020604030801F000F1D7E9C12>14
D<01F807000C0018003800300070007FC0E000E000E000E000E00060006000300018600F800D12
7E9111>I<0FFFF81FFFF83FFFF0608400408400808C00010C00010C00030C00030C00020C0006
1C00061C000E1C000C1C001C0E001C0E00180C0015127E9118>25 D<60F0F06004047C830C>58
D<60F0F0701010101020204080040C7C830C>I<00030003000700060006000E000C001C001800
1800380030003000700060006000E000C000C001C001800380030003000700060006000E000C00
0C001C001800180038003000700060006000E000C000C00010297E9E15>61
D<01FFFF00003C03C0003800E0003800F00038007000380070007000F0007000F0007000F00070
00E000E001E000E003C000E0078000E01E0001FFF00001C0000001C0000001C000000380000003
8000000380000003800000070000000700000007000000070000000F000000FFE000001C1C7E9B
1B>80 D<0003F800000E0E000038038000E001C001C001C0038000E0070000E00F0000F01E0000
F01C0000F03C0000F03C0000F0780000F0780000F0780000F0F00001E0F00001E0F00001E0F000
03C0F00003C0F0000380F0000780F0000F00703C0E0070421C0038823800388270001C83C00007
87810001FF0100000303000003020000038E000003FC000003F8000001F8000001E0001C257E9C
21>I<01E3000717000C0F00180F00380E00300E00700E00700E00E01C00E01C00E01C00E01C00
E03880E03880E038806078803199001E0E0011127E9116>97 D<3F00070007000E000E000E000E
001C001C001C001C0039E03A303C1838187018701C701C701CE038E038E038E030E070E060E0C0
61C023001E000E1D7E9C12>I<0007E00000E00000E00001C00001C00001C00001C00003800003
8000038000038001E7000717000C0F00180F00380E00300E00700E00700E00E01C00E01C00E01C
00E01C00E03880E03880E038806078803199001E0E00131D7E9C16>100
D<0001E0000630000E78000CF0001C60001C00001C00001C00003C0000380000380003FFC00038
0000380000700000700000700000700000700000E00000E00000E00000E00000E00001C00001C0
0001C00001C00001C000018000038000038000630000F30000F60000E4000078000015257E9C14
>102 D<01C003C003C001800000000000000000000000001C00270047004700870087000E000E
001C001C001C003800388038807080710032001C000A1C7E9B0E>105 D<381F004E61804681C0
4701C08F01C08E01C00E01C00E01C01C03801C03801C03801C0700380710380710380E10380E20
70064030038014127E9119>110 D<383C4E424687470F8E1E8E0C0E000E001C001C001C001C00
38003800380038007000300010127E9113>114 D<07878008C84010F0C020F1E020E3C040E180
00E00000E00001C00001C00001C00001C000638080F38080F38100E5810084C60078780013127E
9118>120 D<038107C10FE6081C10080010002000400080010002000400080410042C1877F843
F081C010127E9113>122 D E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300
TeXDict begin 
%%EndSetup
%%Page: 362 1
bop 0 50 a Fi(362)194 b Fh(Chapter)10 b(9.)52 b(Root)11 b(Finding)f(and)f
(Nonlinear)i(Sets)f(of)g(Equations)p 0 68 1395 2 v 0 143 a
@beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial 133 180 a Fr(})133
218 y(a=b;)536 b Fq(Move)13 b(last)f(b)q(est)g(guess)f(to)h
Fr(a)p Fq(.)133 255 y Fr(fa=fb;)133 293 y(if)17 b(\(fabs\(d\))e(>)i(tol1\))
271 b Fq(Evaluate)14 b(new)f(trial)g(ro)q(ot.)199 330 y Fr(b)18
b(+=)e(d;)133 367 y(else)199 405 y(b)i(+=)e(SIGN\(tol1,xm)o(\);)133
442 y(fb=\(*func\))o(\(b\))o(;)66 479 y(})66 517 y(nrerror\("Ma)o(xim)o(um)e
(number)i(of)h(iterations)d(exceeded)h(in)i(zbrent"\);)66 554
y(return)f(0.0;)479 b Fq(Never)13 b(get)g(here.)0 591 y Fr(})0
776 y Fg(CITED)g(REFERENCES)g(AND)f(FUR)o(THER)i(READING:)0
826 y(Brent,)8 b(R.P)l(.)f(1973,)i Ff(Algorithms)f(for)g(Minimization)h
(without)g(Derivatives)e Fg(\(Englewood)j(Clif)o(fs,)e(NJ:)f(Prentice-)80
867 y(Hall\),)15 b(Chapters)g(3,)g(4.)f([1])0 917 y(Forsythe,)j(G.E.,)f
(Malcolm,)g(M.A.,)f(and)i(Moler)n(,)g(C.B.)e(1977,)j Ff(Computer)f(Methods)f
(for)g(Mathematical)80 958 y(Computations)e Fg(\(Englewood)h(Clif)o(fs,)e
(NJ:)e(Prentice-Hall\),)k Ft(x)p Fg(7.2.)0 1168 y Fe(9.4)i(Newton-Raphson)f
(Method)h(Using)h(Derivative)83 1293 y Fi(Perhaps)8 b(the)g(most)f
(celebrated)i(of)e(all)g(one-dimensional)g(root-\256nding)e(routines)i(is)g
Fd(New-)0 1342 y(ton')-5 b(s)8 b(method)p Fi(,)i(also)f(called)h(the)f
Fd(Newton-Raphson)f(method)p Fi(.)14 b(This)c(method)f(is)g(distinguished)0
1392 y(from)16 b(the)g(methods)h(of)f(previous)f(sections)h(by)g(the)g(fact)h
(that)f(it)f(requires)i(the)f(evaluation)0 1442 y(of)h(both)g(the)g(function)
f Fv(f)t Fu(\()p Fv(x)p Fu(\))p Fi(,)k Fd(and)d Fi(the)h(derivative)e
Fv(f)834 1427 y Fo(0)847 1442 y Fu(\()p Fv(x)p Fu(\))p Fi(,)j(at)f(arbitrary)
e(points)h Fv(x)p Fi(.)36 b(The)0 1492 y(Newton-Raphson)12
b(formula)g(consists)h(geometrically)f(of)h(extending)f(the)h(tangent)f(line)
g(at)h(a)0 1542 y(current)d(point)f Fv(x)248 1548 y Fk(i)272
1542 y Fi(until)g(it)g(crosses)j(zero,)f(then)f(setting)f(the)i(next)f(guess)
h Fv(x)1089 1548 y Fk(i)p Fn(+1)1155 1542 y Fi(to)e(the)i(abscissa)0
1592 y(of)g(that)g(zero-crossing)g(\(see)h(Figure)e(9.4.1\).)19
b(Algebraically)m(,)11 b(the)g(method)g(derives)g(from)g(the)0
1641 y(familiar)g(T)m(aylor)g(series)h(expansion)e(of)h(a)h(function)e(in)g
(the)h(neighborhood)e(of)i(a)h(point,)312 1759 y Fv(f)t Fu(\()p
Fv(x)e Fu(+)g Fv(\016)r Fu(\))i Ft(\031)f Fv(f)t Fu(\()p Fv(x)p
Fu(\))f(+)g Fv(f)675 1741 y Fo(0)687 1759 y Fu(\()p Fv(x)p
Fu(\))p Fv(\016)i Fu(+)819 1730 y Fv(f)843 1715 y Fo(00)865
1730 y Fu(\()p Fv(x)p Fu(\))p 819 1749 103 2 v 860 1787 a(2)926
1759 y Fv(\016)946 1741 y Fn(2)974 1759 y Fu(+)d Fv(:)e(:)g(:)f(:)196
b Fu(\()p Fi(9.4.1)q Fu(\))0 1865 y Fi(For)15 b(small)h(enough)f(values)h(of)
f Fv(\016)r Fi(,)j(and)e(for)f(well-behaved)g(functions,)h(the)g(terms)g
(beyond)0 1914 y(linear)e(are)i(unimportant,)e(hence)i Fv(f)t
Fu(\()p Fv(x)11 b Fu(+)h Fv(\016)r Fu(\))j(=)h(0)f Fi(implies)587
2033 y Fv(\016)e Fu(=)f Ft(\000)705 2005 y Fv(f)t Fu(\()p Fv(x)p
Fu(\))p 699 2023 93 2 v 699 2061 a Fv(f)723 2049 y Fo(0)736
2061 y Fu(\()p Fv(x)p Fu(\))797 2033 y Fv(:)470 b Fu(\()p Fi(9.4.2)q
Fu(\))83 2149 y Fi(Newton-Raphson)19 b(is)h(not)f(restricted)h(to)f(one)h
(dimension.)44 b(The)21 b(method)e(readily)0 2199 y(generalizes)12
b(to)f(multiple)f(dimensions,)h(as)i(we)f(shall)e(see)j(in)e
Ft(x)p Fi(9.6)h(and)f Ft(x)q Fi(9.7,)h(below)m(.)83 2248 y(Far)i(from)f(a)h
(root,)f(where)h(the)f(higher)o(-order)f(terms)h(in)g(the)g(series)h
Fd(ar)n(e)g Fi(important,)f(the)0 2298 y(Newton-Raphson)c(formula)g(can)i
(give)e(grossly)g(inaccurate,)i(meaningless)f(corrections.)15
b(For)0 2348 y(instance,)h(the)f(initial)d(guess)j(for)g(the)f(root)g(might)f
(be)i(so)g(far)g(from)f(the)h(true)f(root)g(as)h(to)f(let)0
2398 y(the)d(search)i(interval)e(include)g(a)h(local)f(maximum)h(or)g
(minimum)f(of)g(the)h(function.)18 b(This)11 b(can)0 2448 y(be)j(death)g(to)f
(the)g(method)g(\(see)i(Figure)e(9.4.2\).)26 b(If)13 b(an)h(iteration)e
(places)j(a)f(trial)e(guess)i(near)0 2497 y(such)h(a)h(local)f(extremum,)j
(so)d(that)f(the)h(\256rst)g(derivative)g(nearly)g(vanishes,)i(then)e
(Newton-)0 2547 y(Raphson)e(sends)i(its)e(solution)f(of)o(f)i(to)g(limbo,)g
(with)f(vanishingly)f(small)i(hope)g(of)g(recovery)m(.)p eop
%%Page: 363 2
bop 256 50 a Fh(9.4)11 b(Newton-Raphson)d(Method)i(Using)g(Derivative)298
b Fi(363)p 0 68 1395 2 v 0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore

@endspecial 185 1210 a @beginspecial 208 @llx 303 @lly 454
@urx 558 @ury 2460 @rwi @setspecial
%%BeginDocument: epsf/fig9x4x1.ps
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
/TX {pop} def
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def	% - cf flatness
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
[/_Times-Italic/Times-Italic 0 0 1 TZ
[/_Times-Roman/Times-Roman 0 0 1 TZ
0 A
u
0 R
0 G
0 i 0 J 0 j 0.5 w 4 M []0 d
0 D
444.1115 421.4918 m
210.499 421.4918 L
S
U
u
327.5441 539.0146 m
327.5441 305.4022 L
S
U
1.5 w
259.228 364.6413 m
329.4551 368.9409 419.2693 439.168 449.8444 553.8245 c
S
0.85 w
389.7958 432.9992 m
389.7958 421.361 l
S
1 w [2.5 2 ]0 d
372.5634 423.6716 m
387.245 438.8551 l
S
391.7718 423.0106 m
433.7938 504.6237 l
S
0 To
1.3891 0 0 1.3891 436.0826 499.5461 0 Tp
TP
0 Tr
0 O
0 g
[]0 d
/_Times-Roman 6.4788 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
6.4788 0 Tl
0 Tc
0 Tw
(1) Tx 
(\r) TX 
TO
0 To
1.3891 0 0 1.3891 381.5717 440.7433 0 Tp
TP
0 Tr
(2) Tx 
(\r) TX 
TO
0 To
1.3891 0 0 1.3891 366.3464 424.4207 0 Tp
TP
0 Tr
(3) Tx 
(\r) TX 
TO
0 To
1.3891 0 0 1.3891 434.2489 410.4349 0 Tp
TP
0 Tr
/_Times-Italic 6.4788 Tf
(x) Tx 
(\r) TX 
TO
0 To
1.3891 0 0 1.3891 323.7957 526.3431 0 Tp
TP
-9.6352 0 Td
0 Tr
2 Ta
(f) Tx 0 -100 Tk 
/_Times-Roman 6.4788 Tf
(\() Tx 
/_Times-Italic 6.4788 Tf
(x) Tx 
/_Times-Roman 6.4788 Tf
(\)) Tx 
(\r) TX 
TO
u
u
1 g
0 R
0 G
0.5 w
373.2168 418.93 m
374.5974 418.93 375.7167 420.0494 375.7167 421.43 c
375.7167 422.8107 374.5974 423.93 373.2168 423.93 c
371.8361 423.93 370.7168 422.8107 370.7168 421.43 c
370.7168 420.0494 371.8361 418.93 373.2168 418.93 c
b
373.2168 421.43 m
B
U
370.7615 421.4478 m
375.5115 421.4478 375.6365 421.4478 v
S
U
u
u
0 O
1 g
389.9043 418.93 m
391.2849 418.93 392.4042 420.0494 392.4042 421.43 c
392.4042 422.8107 391.2849 423.93 389.9043 423.93 c
388.5236 423.93 387.4043 422.8107 387.4043 421.43 c
387.4043 420.0494 388.5236 418.93 389.9043 418.93 c
b
389.9043 421.43 m
B
U
387.449 421.4478 m
392.199 421.4478 392.324 421.4478 v
S
U
u
0 O
0 g
1 w
389.7793 436.43 m
391.1599 436.43 392.2792 437.5494 392.2792 438.93 c
392.2792 440.3107 391.1599 441.43 389.7793 441.43 c
388.3986 441.43 387.2793 440.3107 387.2793 438.93 c
387.2793 437.5494 388.3986 436.43 389.7793 436.43 c
f
389.7793 438.93 m
F
U
u
432.2793 502.68 m
433.6599 502.68 434.7792 503.7994 434.7792 505.18 c
434.7792 506.5607 433.6599 507.68 432.2793 507.68 c
430.8986 507.68 429.7793 506.5607 429.7793 505.18 c
429.7793 503.7994 430.8986 502.68 432.2793 502.68 c
f
432.2793 505.18 m
F
U
u
389.7444 431.5048 m
392.2499 430.0139 L
389.7278 436.0046 L
389.7278 436.0046 L
387.25 429.9954 L
389.7444 431.5048 L
f
U
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 0 1272 a Fc(Figure)9 b(9.4.1.)26 b(Newton')n(s)9
b(method)e(extrapolates)g(the)i(local)f(derivative)g(to)g(\256nd)h(the)f
(next)g(estimate)h(of)f(the)h(root.)k(In)0 1309 y(this)g(example)e(it)i
(works)f(well)g(and)g(conver)o(ges)f(quadratically)n(.)154
2412 y @beginspecial 121 @llx 314 @lly 382 @urx 552 @ury 2610
@rwi @setspecial
%%BeginDocument: epsf/fig9x4x2.ps
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
/TX {pop} def
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def	% - cf flatness
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
[/_Times-Italic/Times-Italic 0 0 1 TZ
[/_Times-Roman/Times-Roman 0 0 1 TZ
0 A
u
1 R
0 G
0 i 0 J 0 j 0.5 w 4 M []0 d
0 D
368.3024 416.6203 m
128.2874 416.6203 L
S
U
u
249.1671 549.1659 m
249.1671 316.5986 L
S
U
0 R
282.2614 416.6452 m
284.1855 416.6452 l
S
0 O
0 g
1 w
279.2817 490.9084 m
F
u
279.1812 488.6283 m
280.2857 488.6283 281.1812 489.5237 281.1812 490.6283 c
281.1812 491.7328 280.2857 492.6283 279.1812 492.6283 c
278.0766 492.6283 277.1812 491.7328 277.1812 490.6283 c
277.1812 489.5237 278.0766 488.6283 279.1812 488.6283 c
f
0 R
0 G
0.5 w
279.1812 414.6283 m
280.2857 414.6283 281.1812 415.5237 281.1812 416.6283 c
281.1812 417.7328 280.2857 418.6283 279.1812 418.6283 c
278.0766 418.6283 277.1812 417.7328 277.1812 416.6283 c
277.1812 415.5237 278.0766 414.6283 279.1812 414.6283 c
s
u
1 w
279.1982 484.124 m
279.1982 419.4297 l
S
u
0 O
0 g
279.2614 483.9848 m
281.7669 482.4939 L
279.2448 488.4846 L
279.2448 488.4846 L
276.767 482.4754 L
279.2614 483.9848 L
f
U
U
U
0 R
0 G
[2.5 2 ]0 d
166.6432 490.9438 m
279.5876 490.9438 l
S
u
0 O
0 g
[]0 d
166.7824 491.007 m
168.2733 493.5125 L
162.2826 490.9904 L
162.2826 490.9904 L
168.2918 488.5126 L
166.7824 491.007 L
f
U
0 To
1 0 0 1 244.892 539.6051 0 Tp
TP
-13.3848 0 Td
0 Tr
/_Times-Italic 9 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
2 Ta
0 Tq
0 0 Tl
0 Tc
0 Tw
(f) Tx 0 -100 Tk 
/_Times-Roman 9 Tf
(\() Tx 
/_Times-Italic 9 Tf
(x) Tx 
/_Times-Roman 9 Tf
(\)) Tx 
(\r) TX 
TO
1 R
0 G
2 w
126.8797 367.6272 m
139.4487 400.5459 148.744 449.8508 192.3676 423.142 C
209.0102 413.1281 218.8594 421.1269 225.8727 429.7229 C
232.886 437.8222 240.0855 450.049 247.0368 465.9375 C
256.0982 479.84 273.8487 509.5069 305.0051 474.999 C
312.7011 469.0408 326.5886 466.0239 338.8924 480.3365 c
351.0571 494.4873 372.0326 522.7941 376.3794 537.436 c
S
0 R
1 w [2.5 2 ]0 d
281.481 417.6865 m
336.4098 477.3574 l
S
0 O
0 g
[]0 d
336.6812 475.6283 m
337.7857 475.6283 338.6812 476.5237 338.6812 477.6283 c
338.6812 478.7328 337.7857 479.6283 336.6812 479.6283 c
335.5766 479.6283 334.6812 478.7328 334.6812 477.6283 c
334.6812 476.5237 335.5766 475.6283 336.6812 475.6283 c
f
0 To
1 0 0 1 362.892 408.1051 0 Tp
TP
-3.9946 0 Td
0 Tr
/_Times-Italic 9 Tf
(x) Tx 
(\r) TX 
TO
0 To
1 0 0 1 343.5109 472.2565 0 Tp
TP
-2.25 0 Td
0 Tr
/_Times-Roman 9 Tf
1 Ta
(1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 285.0109 492.7565 0 Tp
TP
-2.25 0 Td
0 Tr
(2) Tx 
(\r) TX 
TO
0 To
1 0 0 1 156.0109 487.2565 0 Tp
TP
-2.25 0 Td
0 Tr
(3) Tx 
(\r) TX 
TO
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 0 2474 a(Figure)e(9.4.2.)31 b(Unfortunate)7 b(case)i(where)f
(Newton')n(s)h(method)f(encounters)g(a)h(local)g(extremum)f(and)g(shoots)g
(of)o(f)i(to)0 2512 y(outer)g(space.)19 b(Here)11 b(bracketing)e(bounds,)h
(as)h(in)g Fr(rtsafe)m Fc(,)h(would)e(save)h(the)f(day)n(.)p
eop
%%Page: 364 3
bop 0 50 a Fi(364)194 b Fh(Chapter)10 b(9.)52 b(Root)11 b(Finding)f(and)f
(Nonlinear)i(Sets)f(of)g(Equations)p 0 68 1395 2 v 0 143 a
@beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial 181 1160 a @beginspecial
225 @llx 344 @lly 473 @urx 587 @ury 2480 @rwi @setspecial
%%BeginDocument: epsf/fig9x4x3.ps
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
/TX {pop} def
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def	% - cf flatness
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
[/_Times-Italic/Times-Italic 0 0 1 TZ
[/_Times-Roman/Times-Roman 0 0 1 TZ
0 A
u
0 R
0 G
0 i 0 J 0 j 0.5 w 4 M []0 d
0 D
466.3854 465.7483 m
227.9878 465.7483 L
S
U
u
346.4431 584.6992 m
346.4431 346.3016 L
S
U
1 w [2.5 2 ]0 d
302.58 465.5005 m
415.0878 540.0926 l
S
2 w []0 d
452.5078 564.874 m
430.2045 550.0052 425.7438 549.5095 409.8837 534.6407 C
398.9799 523.2413 383.6153 505.3986 374.694 486.5646 C
370.2334 476.652 359.3295 451.3751 349.4169 438.4887 C
340.9912 428.0805 323.142 406.7619 300.5975 389.6517 C
290.1893 382.2173 243.3523 351.2405 y
S
1 w
302.8278 463.7142 m
302.8278 398.4577 l
S
414.84 533.5673 m
414.84 465.7483 l
S
0.5 w
301.2213 465.7983 m
305.0963 465.7983 l
S
413.0963 465.7983 m
416.9713 465.7983 l
S
u
0 O
0 g
1 w
302.948 391.4465 m
F
U
0 To
1 0 0 1 459.2213 454.9233 0 Tp
TP
0 Tr
/_Times-Italic 9 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
0 0 Tl
0 Tc
0 Tw
(x) Tx 
(\r) TX 
TO
0 To
1 0 0 1 342.9088 575.4233 0 Tp
TP
-13.3848 0 Td
0 Tr
2 Ta
(f) Tx 0 -100 Tk 
/_Times-Roman 9 Tf
(\() Tx 
/_Times-Italic 9 Tf
(x) Tx 
/_Times-Roman 9 Tf
(\)) Tx 
(\r) TX 
TO
u
302.9998 389.0823 m
304.2424 389.0823 305.2498 390.0897 305.2498 391.3323 c
305.2498 392.5749 304.2424 393.5823 302.9998 393.5823 c
301.7572 393.5823 300.7498 392.5749 300.7498 391.3323 c
300.7498 390.0897 301.7572 389.0823 302.9998 389.0823 c
f
302.9998 391.3323 m
F
U
u
414.8123 537.6448 m
416.0549 537.6448 417.0623 538.6522 417.0623 539.8948 c
417.0623 541.1374 416.0549 542.1448 414.8123 542.1448 c
413.5697 542.1448 412.5623 541.1374 412.5623 539.8948 c
412.5623 538.6522 413.5697 537.6448 414.8123 537.6448 c
f
414.8123 539.8948 m
F
U
u
u
1 g
0 R
0 G
0.5 w
303.1248 463.4573 m
304.3674 463.4573 305.3748 464.4647 305.3748 465.7073 c
305.3748 466.9499 304.3674 467.9573 303.1248 467.9573 c
301.8822 467.9573 300.8748 466.9499 300.8748 465.7073 c
300.8748 464.4647 301.8822 463.4573 303.1248 463.4573 c
b
303.1248 465.7073 m
B
U
300.9088 465.7983 m
300.9088 465.8608 305.3463 465.7983 y
S
U
u
u
0 O
1 g
414.8748 463.4573 m
416.1174 463.4573 417.1248 464.4647 417.1248 465.7073 c
417.1248 466.9499 416.1174 467.9573 414.8748 467.9573 c
413.6322 467.9573 412.6248 466.9499 412.6248 465.7073 c
412.6248 464.4647 413.6322 463.4573 414.8748 463.4573 c
b
414.8748 465.7073 m
B
U
412.6588 465.7983 m
412.6588 465.8608 417.0963 465.7983 y
S
U
0 To
1 0 0 1 309.2838 384.5483 0 Tp
TP
-2.25 0 Td
0 Tr
0 O
0 g
1 w
1 Ta
(2) Tx 
(\r) TX 
TO
0 To
1 0 0 1 408.9088 542.5483 0 Tp
TP
-2.25 0 Td
0 Tr
(1) Tx 
(\r) TX 
TO
u
302.8408 399.6969 m
305.3462 401.1878 L
302.8242 395.1971 L
302.8242 395.1971 L
300.3464 401.2063 L
302.8408 399.6969 L
f
U
0 R
0 G
[2.5 2 ]0 d
302.58 390.156 m
413.3878 464.6061 l
S
u
0 O
0 g
[]0 d
414.8408 532.1156 m
417.3462 530.6247 L
414.8242 536.6154 L
414.8242 536.6154 L
412.3464 530.6062 L
414.8408 532.1156 L
f
U
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 0 1222 a Fc(Figure)g(9.4.3.)38 b(Unfortunate)9
b(case)h(where)g(Newton')n(s)g(method)f(enters)h(a)g(nonconver)o(gent)e
(cycle.)18 b(This)11 b(behavior)0 1259 y(is)g(often)f(encountered)e(when)i
(the)g(function)f Fm(f)15 b Fc(is)10 b(obtained,)g(in)h(whole)f(or)g(in)h
(part,)g(by)f(table)g(interpolation.)19 b(W)o(ith)0 1297 y(a)12
b(better)g(initial)h(guess,)g(the)f(method)f(would)h(have)f(succeeded.)0
1389 y Fi(Like)f(most)f(powerful)g(tools,)g(Newton-Raphson)f(can)j(be)f
(destructive)f(used)g(in)g(inappropriate)0 1439 y(circumstances.)22
b(Figure)12 b(9.4.3)h(demonstrates)f(another)g(possible)f(pathology)m(.)83
1488 y(Why)16 b(do)g(we)h(call)f(Newton-Raphson)f(powerful?)33
b(The)17 b(answer)g(lies)f(in)g(its)g(rate)g(of)0 1538 y(conver)o(gence:)29
b(W)n(ithin)16 b(a)i(small)f(distance)g Fv(\017)h Fi(of)e Fv(x)h
Fi(the)g(function)f(and)h(its)g(derivative)f(are)0 1588 y(approximately:)323
1701 y Fv(f)t Fu(\()p Fv(x)10 b Fu(+)f Fv(\017)p Fu(\))j(=)g
Fv(f)t Fu(\()p Fv(x)p Fu(\))e(+)f Fv(\017f)699 1683 y Fo(0)712
1701 y Fu(\()p Fv(x)p Fu(\))g(+)g Fv(\017)835 1683 y Fn(2)859
1673 y Fv(f)883 1657 y Fo(00)905 1673 y Fu(\()p Fv(x)p Fu(\))p
859 1691 103 2 v 899 1729 a(2)975 1701 y(+)h Ft(\001)d(\001)g(\001)e
Fv(;)311 1780 y(f)335 1763 y Fo(0)348 1780 y Fu(\()p Fv(x)k
Fu(+)g Fv(\017)p Fu(\))j(=)g Fv(f)551 1763 y Fo(0)563 1780
y Fu(\()p Fv(x)p Fu(\))d(+)h Fv(\017f)711 1763 y Fo(00)733
1780 y Fu(\()p Fv(x)p Fu(\))f(+)h Ft(\001)d(\001)g(\001)1279
1736 y Fu(\()p Fi(9.4.3)q Fu(\))0 1882 y Fi(By)17 b(the)g(Newton-Raphson)g
(formula,)522 1995 y Fv(x)546 2001 y Fk(i)p Fn(+1)613 1995
y Fu(=)12 b Fv(x)681 2001 y Fk(i)704 1995 y Ft(\000)756 1967
y Fv(f)t Fu(\()p Fv(x)820 1973 y Fk(i)834 1967 y Fu(\))p 750
1985 107 2 v 750 2023 a Fv(f)774 2011 y Fo(0)787 2023 y Fu(\()p
Fv(x)827 2029 y Fk(i)840 2023 y Fu(\))861 1995 y Fv(;)406 b
Fu(\()p Fi(9.4.4)q Fu(\))0 2106 y Fi(so)22 b(that)529 2210
y Fv(\017)546 2216 y Fk(i)p Fn(+1)613 2210 y Fu(=)12 b Fv(\017)674
2216 y Fk(i)697 2210 y Ft(\000)749 2182 y Fv(f)t Fu(\()p Fv(x)813
2188 y Fk(i)828 2182 y Fu(\))p 743 2200 V 743 2238 a Fv(f)767
2226 y Fo(0)780 2238 y Fu(\()p Fv(x)820 2244 y Fk(i)833 2238
y Fu(\))854 2210 y Fv(:)413 b Fu(\()p Fi(9.4.5)q Fu(\))0 2321
y Fi(When)9 b(a)h(trial)e(solution)f Fv(x)379 2327 y Fk(i)402
2321 y Fi(dif)o(fers)i(from)g(the)g(true)f(root)h(by)f Fv(\017)886
2327 y Fk(i)900 2321 y Fi(,)i(we)f(can)h(use)g(\(9.4.3\))f(to)f(express)0
2371 y Fv(f)t Fu(\()p Fv(x)64 2377 y Fk(i)78 2371 y Fu(\))p
Fv(;)f(f)137 2356 y Fo(0)150 2371 y Fu(\()p Fv(x)190 2377 y
Fk(i)203 2371 y Fu(\))12 b Fi(in)e(\(9.4.4\))h(in)g(terms)g(of)g
Fv(\017)606 2377 y Fk(i)631 2371 y Fi(and)g(derivatives)f(at)i(the)f(root)f
(itself.)17 b(The)12 b(result)e(is)0 2421 y(a)k(recurrence)h(relation)e(for)g
(the)g(deviations)g(of)g(the)h(trial)e(solutions)532 2525 y
Fv(\017)549 2531 y Fk(i)p Fn(+1)616 2525 y Fu(=)g Ft(\000)p
Fv(\017)709 2508 y Fn(2)709 2535 y Fk(i)739 2497 y Fv(f)763
2482 y Fo(00)785 2497 y Fu(\()p Fv(x)p Fu(\))p 733 2515 114
2 v 733 2553 a(2)p Fv(f)778 2541 y Fo(0)790 2553 y Fu(\()p
Fv(x)p Fu(\))851 2525 y Fv(:)416 b Fu(\()p Fi(9.4.6)q Fu(\))p
eop
%%Page: 365 4
bop 256 50 a Fh(9.4)10 b(Newton-Raphson)f(Method)h(Using)g(Derivative)291
b Fi(365)p 0 68 1395 2 v 0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore

@endspecial 83 189 a(Equation)10 b(\(9.4.6\))g(says)i(that)e(Newton-Raphson)
f(conver)o(ges)j Fd(quadratically)c Fi(\(cf.)k(equa-)0 239
y(tion)j(9.2.3\).)34 b(Near)17 b(a)g(root,)g(the)g(number)f(of)g
(signi\256cant)f(digits)g(approximately)h Fd(doubles)0 288
y Fi(with)10 b(each)i(step.)18 b(This)12 b(very)f(strong)f(conver)o(gence)i
(property)e(makes)i(Newton-Raphson)e(the)0 338 y(method)f(of)h(choice)g(for)f
(any)h(function)e(whose)i(derivative)e(can)j(be)f(evaluated)g(ef)o
(\256ciently)m(,)g(and)0 388 y(whose)i(derivative)e(is)i(continuous)e(and)h
(nonzero)h(in)f(the)g(neighborhood)e(of)j(a)g(root.)83 438
y(Even)j(where)g(Newton-Raphson)f(is)g(rejected)h(for)g(the)f(early)h(stages)
g(of)g(conver)o(gence)0 488 y(\(because)h(of)e(its)f(poor)h(global)f(conver)o
(gence)j(properties\),)e(it)g(is)g(very)g(common)h(to)f(\252polish)0
537 y(up\272)g(a)g(root)f(with)g(one)h(or)g(two)f(steps)h(of)f
(Newton-Raphson,)h(which)g(can)g(multiply)e(by)i(two)0 587
y(or)i(four)g(its)g(number)g(of)g(signi\256cant)g(\256gures!)83
637 y(For)10 b(an)h(ef)o(\256cient)g(realization)f(of)h(Newton-Raphson)e(the)
h(user)h(provides)f(a)h(routine)f(that)0 687 y(evaluates)e(both)f
Fv(f)t Fu(\()p Fv(x)p Fu(\))i Fi(and)e(its)g(\256rst)h(derivative)f
Fv(f)718 672 y Fo(0)730 687 y Fu(\()p Fv(x)p Fu(\))h Fi(at)g(the)f(point)g
Fv(x)p Fi(.)14 b(The)8 b(Newton-Raphson)0 737 y(formula)14
b(can)i(also)f(be)g(applied)g(using)f(a)h(numerical)g(dif)o(ference)h(to)e
(approximate)g(the)h(true)0 786 y(local)20 b(derivative,)459
905 y Fv(f)483 888 y Fo(0)495 905 y Fu(\()p Fv(x)p Fu(\))12
b Ft(\031)611 877 y Fv(f)t Fu(\()p Fv(x)e Fu(+)g Fv(dx)p Fu(\))e
Ft(\000)i Fv(f)t Fu(\()p Fv(x)p Fu(\))p 611 896 309 2 v 743
934 a Fv(dx)925 905 y(:)342 b Fu(\()p Fi(9.4.7)q Fu(\))0 1016
y Fi(This)12 b(is)g(not,)g(however)n(,)i(a)f(recommended)g(procedure)f(for)g
(the)g(following)e(reasons:)19 b(\(i\))11 b(Y)l(ou)0 1065 y(are)19
b(doing)e(two)g(function)g(evaluations)g(per)h(step,)j(so)d
Fd(at)d(best)j Fi(the)g(superlinear)f(order)h(of)0 1115 y(conver)o(gence)g
(will)e(be)h(only)456 1081 y Ft(p)p 490 1081 21 2 v 490 1115
a Fu(2)p Fi(.)36 b(\(ii\))16 b(If)h(you)f(take)i Fv(dx)e Fi(too)g(small)i
(you)e(will)g(be)h(wiped)0 1165 y(out)d(by)h(roundof)o(f,)g(while)f(if)g(you)
h(take)g(it)f(too)g(lar)o(ge)h(your)g(order)f(of)h(conver)o(gence)h(will)e
(be)0 1215 y(only)i(linear)n(,)k(no)d(better)g(than)g(using)f(the)i
Fd(initial)c Fi(evaluation)j Fv(f)981 1200 y Fo(0)993 1215
y Fu(\()p Fv(x)1033 1221 y Fn(0)1052 1215 y Fu(\))g Fi(for)g(all)g
(subsequent)0 1265 y(steps.)e(Therefore,)c(Newton-Raphson)e(with)f(numerical)
i(derivatives)f(is)h(\(in)f(one)h(dimension\))0 1314 y(always)j(dominated)f
(by)g(the)g(secant)i(method)e(of)g Ft(x)p Fi(9.2.)22 b(\(In)12
b(multidimensions,)g(where)h(there)0 1364 y(is)c(a)i(paucity)e(of)g
(available)h(methods,)f(Newton-Raphson)g(with)f(numerical)i(derivatives)f
(must)0 1414 y(be)17 b(taken)f(more)h(seriously)m(.)32 b(See)18
b Ft(xx)q Fi(9.6\2619.7.\))75 1464 y(The)12 b(following)d(function)i(calls)g
(a)i(user)f(supplied)e(function)g Fs(funcd\(x,fn,df\))f Fi(which)0
1514 y(supplies)18 b(the)g(function)f(value)h(as)h Fs(fn)f
Fi(and)g(the)h(derivative)e(as)i Fs(df)p Fi(.)39 b(W)m(e)19
b(have)g(included)0 1564 y(input)8 b(bounds)h(on)h(the)f(root)g(simply)g(to)g
(be)i(consistent)e(with)f(previous)h(root-\256nding)e(routines:)0
1613 y(Newton)14 b(does)g(not)f(adjust)g(bounds,)i(and)f(works)g(only)f(on)g
(local)h(information)e(at)j(the)e(point)0 1663 y Fs(x)p Fi(.)26
b(The)14 b(bounds)f(are)i(used)f(only)f(to)g(pick)h(the)f(midpoint)f(as)j
(the)e(\256rst)h(guess,)h(and)f(to)g(reject)0 1713 y(the)h(solution)e(if)i
(it)g(wanders)g(outside)g(of)g(the)g(bounds.)0 1800 y Fr(#include)g(<math.h>)
0 1837 y(#define)g(JMAX)h(20)536 b Fq(Set)11 b(to)g(maximum)i(numb)q(er)f(of)
f(iterations.)0 1912 y Fr(float)16 b(rtnewt\(voi)o(d)f(\(*funcd\)\()o(flo)o
(at,)f(float)i(*,)h(float)e(*\),)i(float)f(x1,)g(float)g(x2,)66
1949 y(float)g(xacc\))0 1987 y Fq(Using)f(the)g(Newton-Raphson)e(metho)q(d,)j
(\014nd)f(the)g(ro)q(ot)f(of)g(a)h(function)g(kno)o(wn)h(to)e(lie)i(in)f(the)
g(interval)0 2024 y Fb([)p Fp(x1)o Fm(;)6 b Fp(x2)o Fb(])p
Fq(.)17 b(The)d(ro)q(ot)f Fp(rtnewt)f Fq(will)j(b)q(e)f(re\014ned)g(until)h
(its)e(accuracy)h(is)g(kno)o(wn)g(within)h Fj(\006)p Fp(xacc)o
Fq(.)j Fp(funcd)0 2062 y Fq(is)c(a)h(user-supplied)f(routine)h(that)f
(returns)g(b)q(oth)g(the)g(function)h(value)g(and)f(the)g(\014rst)g
(derivative)h(of)f(the)0 2099 y(function)i(at)g(the)g(p)q(oint)g
Fp(x)o Fq(.)0 2136 y Fr({)66 2174 y(void)h(nrerror\(c)o(har)d(error_text)o
([]\))o(;)66 2211 y(int)j(j;)66 2248 y(float)f(df,dx,f,rtn)o(;)66
2323 y(rtn=0.5*\(x1)o(+x2)o(\);)449 b Fq(Initial)15 b(guess.)66
2360 y Fr(for)i(\(j=1;j<=JM)o(AX;)o(j++)o(\))e({)133 2398 y(\(*funcd\)\(r)o
(tn,)o(&f)o(,&d)o(f\);)133 2435 y(dx=f/df;)133 2473 y(rtn)h(-=)h(dx;)133
2510 y(if)g(\(\(x1-rtn\)*)o(\(r)o(tn-)o(x2\))d(<)j(0.0\))199
2547 y(nrerror\("Ju)o(mpe)o(d)e(out)h(of)h(brackets)e(in)i(rtnewt"\);)p
eop
%%Page: 366 5
bop 0 50 a Fi(366)189 b Fh(Chapter)11 b(9.)55 b(Root)10 b(Finding)g(and)g
(Nonlinear)g(Sets)g(of)h(Equations)p 0 68 1395 2 v 0 143 a
@beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial 133 180 a Fr(if)17
b(\(fabs\(dx\))d(<)j(xacc\))f(return)g(rtn;)102 b Fq(Convergence.)66
218 y Fr(})66 255 y(nrerror\("Ma)o(xim)o(um)14 b(number)i(of)h(iterations)d
(exceeded)h(in)i(rtnewt"\);)66 293 y(return)f(0.0;)539 b Fq(Never)13
b(get)f(here.)0 330 y Fr(})83 451 y Fi(While)j(Newton-Raphson')n(s)e(global)h
(conver)o(gence)i(properties)e(are)i(poor)n(,)g(it)e(is)h(fairly)0
501 y(easy)9 b(to)f(design)g(a)h(fail-safe)f(routine)f(that)h(utilizes)g(a)h
(combination)e(of)h(bisection)f(and)i(Newton-)0 551 y(Raphson.)24
b(The)14 b(hybrid)e(algorithm)g(takes)i(a)g(bisection)e(step)h(whenever)h
(Newton-Raphson)0 601 y(would)8 b(take)h(the)f(solution)f(out)h(of)g(bounds,)
h(or)f(whenever)i(Newton-Raphson)d(is)i(not)f(reducing)0 651
y(the)16 b(size)i(of)e(the)g(brackets)h(rapidly)f(enough.)0
754 y Fr(#include)f(<math.h>)0 791 y(#define)g(MAXIT)h(100)500
b Fq(Maximum)12 b(allo)o(w)o(ed)g(numb)q(er)g(of)e(iterations.)0
866 y Fr(float)16 b(rtsafe\(voi)o(d)f(\(*funcd\)\()o(flo)o(at,)f(float)i(*,)h
(float)e(*\),)i(float)f(x1,)g(float)g(x2,)66 903 y(float)g(xacc\))0
941 y Fq(Using)e(a)f(combination)h(of)f(Newton-Raphson)f(and)i(bisection,)f
(\014nd)h(the)f(ro)q(ot)f(of)h(a)h(function)f(b)o(rack)o(eted)0
978 y(b)q(et)o(w)o(een)i Fp(x1)f Fq(and)i Fp(x2)o Fq(.)h(The)f(ro)q(ot,)f
(returned)g(as)g(the)f(function)i(value)f Fp(rtsafe)n Fq(,)h(will)h(b)q(e)e
(re\014ned)g(until)0 1015 y(its)f(accuracy)g(is)g(kno)o(wn)g(within)i
Fj(\006)p Fp(xacc)o Fq(.)h Fp(funcd)12 b Fq(is)j(a)f(user-supplied)g(routine)
g(that)g(returns)g(b)q(oth)g(the)0 1053 y(function)g(value)h(and)f(the)g
(\014rst)g(derivative)h(of)e(the)h(function.)0 1090 y Fr({)66
1128 y(void)j(nrerror\(c)o(har)d(error_text)o([]\))o(;)66 1165
y(int)j(j;)66 1202 y(float)f(df,dx,dxold)o(,f,)o(fh,)o(fl)o(;)66
1240 y(float)g(temp,xh,xl,)o(rts)o(;)66 1314 y(\(*funcd\)\(x1)o(,&f)o(l,&)o
(df\))o(;)66 1352 y(\(*funcd\)\(x2)o(,&f)o(h,&)o(df\))o(;)66
1389 y(if)h(\(\(fl)g(>)g(0.0)f(&&)h(fh)g(>)h(0.0\))e(||)h(\(fl)f(<)i(0.0)e
(&&)h(fh)g(<)g(0.0\)\))133 1426 y(nrerror\("R)o(oot)d(must)i(be)h(bracketed)d
(in)j(rtsafe"\);)66 1464 y(if)g(\(fl)g(==)g(0.0\))f(return)g(x1;)66
1501 y(if)h(\(fh)g(==)g(0.0\))f(return)g(x2;)66 1539 y(if)h(\(fl)g(<)g(0.0\))
f({)470 b Fq(Orient)13 b(the)e(sea)o(rch)g(so)g(that)h Fm(f)t
Fb(\()p Fr(xl)n Fb(\))e Fm(<)g Fb(0)p Fq(.)133 1576 y Fr(xl=x1;)133
1613 y(xh=x2;)66 1651 y(})18 b(else)e({)133 1688 y(xh=x1;)133
1725 y(xl=x2;)66 1763 y(})66 1800 y(rts=0.5*\(x1)o(+x2)o(\);)449
b Fq(Initialize)14 b(the)e(guess)f(fo)o(r)h(ro)q(ot,)66 1837
y Fr(dxold=fabs\()o(x2-)o(x1\))o(;)414 b Fq(the)13 b(\\stepsize)e(b)q(efo)o
(re)h(last,")66 1875 y Fr(dx=dxold;)573 b Fq(and)14 b(the)f(last)f(step.)66
1912 y Fr(\(*funcd\)\(rt)o(s,&)o(f,&)o(df\))o(;)66 1949 y(for)17
b(\(j=1;j<=MA)o(XIT)o(;j+)o(+\))d({)311 b Fq(Lo)q(op)13 b(over)e(allo)o(w)o
(ed)i(iterations.)133 1987 y Fr(if)k(\(\(\(\(rts-xh)o(\)*)o(df-)o(f\)*)o
(\(\(r)o(ts-)o(xl)o(\)*d)o(f-f)o(\))e(>)i(0.0\))88 b Fq(Bisect)7
b(if)h(Newton)f(out)g(of)h(range,)199 2024 y Fr(||)17 b(\(fabs\(2.0*f)o(\))e
(>)i(fabs\(dxold)o(*df)o(\)\))o(\))e({)146 b Fq(o)o(r)8 b(not)f(decreasing)g
(fast)g(enough.)199 2062 y Fr(dxold=dx;)199 2099 y(dx=0.5*\(xh-)o(xl\))o(;)
199 2136 y(rts=xl+dx;)199 2174 y(if)17 b(\(xl)g(==)g(rts\))f(return)f(rts;)
142 b Fq(Change)12 b(in)h(ro)q(ot)f(is)g(negligible.)133 2211
y Fr(})17 b(else)f({)527 b Fq(Newton)12 b(step)f(acceptable.)17
b(T)m(ak)o(e)12 b(it.)199 2248 y Fr(dxold=dx;)199 2286 y(dx=f/df;)199
2323 y(temp=rts;)199 2360 y(rts)17 b(-=)g(dx;)199 2398 y(if)g(\(temp)f(==)h
(rts\))f(return)g(rts;)133 2435 y(})133 2473 y(if)h(\(fabs\(dx\))d(<)j
(xacc\))f(return)g(rts;)102 b Fq(Convergence)12 b(criterion.)133
2510 y Fr(\(*funcd\)\(r)o(ts,)o(&f)o(,&d)o(f\);)133 2547 y
Fq(The)i(one)f(new)i(function)f(evaluation)g(p)q(er)g(iteration.)p
eop
%%Page: 367 6
bop 256 50 a Fh(9.4)11 b(Newton-Raphson)d(Method)i(Using)g(Derivative)298
b Fi(367)p 0 68 1395 2 v 0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore

@endspecial 133 180 a Fr(if)17 b(\(f)g(<)g(0.0\))455 b Fq(Maintain)13
b(the)f(b)o(rack)o(et)g(on)f(the)h(ro)q(ot.)199 218 y Fr(xl=rts;)133
255 y(else)199 293 y(xh=rts;)66 330 y(})66 367 y(nrerror\("Ma)o(xim)o(um)i
(number)i(of)h(iterations)d(exceeded)h(in)i(rtsafe"\);)66 405
y(return)f(0.0;)539 b Fq(Never)13 b(get)f(here.)0 442 y Fr(})83
558 y Fi(For)g(many)h(functions)e(the)h(derivative)g Fv(f)691
543 y Fo(0)703 558 y Fu(\()p Fv(x)p Fu(\))h Fi(often)e(conver)o(ges)i(to)f
(machine)h(accuracy)0 608 y(before)c(the)g(function)e Fv(f)t
Fu(\()p Fv(x)p Fu(\))i Fi(itself)f(does.)15 b(When)9 b(that)f(is)h(the)g
(case)h(one)f(need)g(not)f(subsequently)0 658 y(update)j Fv(f)146
643 y Fo(0)158 658 y Fu(\()p Fv(x)p Fu(\))p Fi(.)17 b(This)11
b(shortcut)f(is)h(recommended)h(only)e(when)h(you)f(con\256dently)g
(understand)0 708 y(the)e(generic)h(behavior)e(of)h(your)f(function,)h(but)f
(it)h(speeds)h(computations)e(when)h(the)g(derivative)0 757
y(calculation)h(is)g(laborious.)14 b(\(Formally)9 b(this)f(makes)j(the)f
(conver)o(gence)g(only)f(linear)n(,)h(but)f(if)g(the)0 807
y(derivative)k(isn')o(t)h(changing)f(anyway)m(,)j(you)d(can)i(do)f(no)g
(better)n(.\))0 906 y Fa(Newton-Raphson)g(and)h(Fractals)83
1004 y Fi(An)k(interesting)e(sidelight)g(to)h(our)h(repeated)g(warnings)f
(about)h(Newton-Raphson')n(s)0 1054 y(unpredictable)e(global)f(conver)o
(gence)j(properties)e(\320)g(its)g(very)h(rapid)f(local)h(conver)o(gence)0
1104 y(notwithstanding)7 b(\320)k(is)f(to)h(investigate,)f(for)g(some)i
(particular)e(equation,)g(the)h(set)g(of)f(starting)0 1154
y(values)j(from)f(which)h(the)f(method)g(does,)i(or)f(doesn')o(t)f(conver)o
(ge)h(to)f(a)h(root.)83 1204 y(Consider)j(the)i(simple)f(equation)604
1300 y Fv(z)625 1283 y Fn(3)653 1300 y Ft(\000)9 b Fu(1)i(=)h(0)488
b(\()p Fi(9.4.8)q Fu(\))0 1397 y Fi(whose)13 b(single)e(real)i(root)f(is)g
Fv(z)k Fu(=)e(1)p Fi(,)f(but)f(which)g(also)g(has)h(complex)g(roots)f(at)g
(the)h(other)f(two)0 1447 y(cube)g(roots)g(of)f(unity)m(,)h
Fu(exp\()p Ft(\006)p Fu(2)p Fv(\031)q(i=)p Fu(3\))p Fi(.)21
b(Newton')n(s)11 b(method)h(gives)f(the)h(iteration)526 1575
y Fv(z)545 1581 y Fk(j)r Fn(+1)616 1575 y Fu(=)g Fv(z)679 1581
y Fk(j)706 1575 y Ft(\000)753 1543 y Fv(z)774 1528 y Fn(3)772
1554 y Fk(j)802 1543 y Ft(\000)d Fu(1)p 753 1566 112 2 v 778
1604 a(3)p Fv(z)820 1590 y Fn(2)818 1615 y Fk(j)1279 1575 y
Fu(\()p Fi(9.4.9)q Fu(\))83 1700 y Fi(Up)17 b(to)f(now)m(,)j(we)e(have)h
(applied)e(an)h(iteration)e(like)i(equation)f(\(9.4.9\))g(only)g(for)h(real)0
1750 y(starting)c(values)h Fv(z)278 1756 y Fn(0)297 1750 y
Fi(,)i(but)d(in)h(fact)g(all)g(of)g(the)g(equations)g(in)f(this)h(section)g
(also)g(apply)f(in)h(the)0 1800 y(complex)8 b(plane.)15 b(W)m(e)8
b(can)h(therefore)f(map)h(out)e(the)h(complex)g(plane)g(into)f(regions)g
(from)h(which)0 1850 y(a)14 b(starting)e(value)i Fv(z)293 1856
y Fn(0)312 1850 y Fi(,)g(iterated)f(in)g(equation)g(\(9.4.9\),)h(will,)f(or)h
(won')o(t,)f(conver)o(ge)h(to)f Fv(z)k Fu(=)e(1)p Fi(.)0 1900
y(Naively)m(,)g(we)g(might)e(expect)i(to)f(\256nd)g(a)h(\252basin)f(of)g
(conver)o(gence\272)i(somehow)e(surrounding)0 1949 y(the)e(root)f
Fv(z)16 b Fu(=)e(1)p Fi(.)21 b(W)m(e)12 b(surely)g(do)g(not)g(expect)g(the)h
(basin)f(of)g(conver)o(gence)h(to)f(\256ll)f(the)h(whole)0
1999 y(plane,)g(because)h(the)e(plane)g(must)h(also)f(contain)g(regions)f
(that)h(conver)o(ge)h(to)f(each)h(of)f(the)h(two)0 2049 y(complex)g(roots.)20
b(In)12 b(fact,)i(by)d(symmetry)m(,)j(the)e(three)g(regions)g(must)g(have)g
(identical)g(shapes.)0 2099 y(Perhaps)f(they)f(will)f(be)i(three)f(symmetric)
h Fu(120)691 2084 y Fo(\016)720 2099 y Fi(wedges,)g(with)e(one)i(root)e
(centered)i(in)f(each?)83 2149 y(Now)20 b(take)h(a)g(look)f(at)g(Figure)g
(9.4.4,)k(which)c(shows)g(the)h(result)f(of)g(a)h(numerical)0
2199 y(exploration.)40 b(The)20 b(basin)f(of)f(conver)o(gence)j(does)e
(indeed)g(cover)g Fu(1)p Fv(=)p Fu(3)g Fi(the)g(area)h(of)f(the)0
2248 y(complex)11 b(plane,)h(but)e(its)g(boundary)g(is)g(highly)g(irregular)g
(\320)g(in)h(fact,)g Fd(fractal)p Fi(.)16 b(\(A)11 b(fractal,)h(so)0
2298 y(called,)j(has)g(self-similar)e(structure)g(that)g(repeats)h(on)g(all)f
(scales)i(of)f(magni\256cation.\))25 b(How)0 2348 y(does)17
b(this)f(fractal)h(emer)o(ge)h(from)f(something)f(as)h(simple)g(as)g(Newton')
n(s)f(method,)j(and)e(an)0 2398 y(equation)10 b(as)h(simple)g(as)g
(\(9.4.8\)?)16 b(The)c(answer)f(is)g(already)g(implicit)e(in)h(Figure)g
(9.4.2,)h(which)0 2448 y(showed)j(how)m(,)g(on)f(the)h(real)g(line,)g(a)g
(local)g(extremum)g(causes)h(Newton')n(s)e(method)g(to)g(shoot)0
2497 y(of)o(f)e(to)g(in\256nity)m(.)18 b(Suppose)11 b(one)h(is)f
Fd(slightly)f Fi(removed)i(from)g(such)f(a)i(point.)k(Then)12
b(one)g(might)0 2547 y(be)k(shot)f(of)o(f)g(not)g(to)g(in\256nity)m(,)g(but)g
(\320)g(by)g(luck)g(\320)h(right)e(into)g(the)h(basin)h(of)f(conver)o(gence)p
eop
%%Page: 368 7
bop 0 50 a Fi(368)194 b Fh(Chapter)10 b(9.)52 b(Root)11 b(Finding)f(and)f
(Nonlinear)i(Sets)f(of)g(Equations)p 0 68 1395 2 v 0 143 a
@beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial 1137 x Fc(Figure)h(9.4.4.)45
b(The)11 b(complex)f Fm(z)k Fc(plane)d(with)g(real)h(and)f(imaginary)f
(components)f(in)j(the)f(range)g Fb(\()p Fj(\000)p Fb(2)p Fm(;)5
b Fb(2\))p Fc(.)22 b(The)0 1318 y(black)7 b(region)f(is)i(the)f(set)h(of)f
(points)g(from)g(which)g(Newton')n(s)g(method)f(conver)o(ges)g(to)h(the)h
(root)f Fm(z)k Fb(=)g(1)c Fc(of)g(the)g(equation)0 1355 y Fm(z)17
1343 y Fl(3)45 1355 y Fj(\000)k Fb(1)16 b(=)g(0)p Fc(.)31 b(Its)15
b(shape)e(is)i(fractal.)0 1459 y Fi(of)d(the)g(desired)h(root.)20
b(But)11 b(that)h(means)i(that)d(in)h(the)g(neighborhood)e(of)i(an)h
(extremum)g(there)0 1509 y(must)i(be)h(a)g(tiny)m(,)g(perhaps)f(distorted,)g
(copy)h(of)f(the)g(basin)g(of)g(conver)o(gence)h(\320)f(a)h(kind)e(of)0
1559 y(\252one-bounce)k(away\272)i(copy)m(.)39 b(Similar)18
b(logic)f(shows)h(that)g(there)g(can)h(be)g(\252two-bounce\272)0
1609 y(copies,)14 b(\252three-bounce\272)f(copies,)h(and)f(so)g(on.)22
b(A)13 b(fractal)g(thus)f(emer)o(ges.)83 1659 y(Notice)f(that,)f(for)h
(equation)f(\(9.4.8\),)h(almost)g(the)f(whole)h(real)g(axis)g(is)g(in)f(the)h
(domain)f(of)0 1708 y(conver)o(gence)k(for)f(the)g(root)f Fv(z)17
b Fu(=)d(1)p Fi(.)24 b(W)m(e)14 b(say)f(\252almost\272)h(because)h(of)e(the)g
(peculiar)g(discrete)0 1758 y(points)h(on)h(the)h(negative)f(real)h(axis)g
(whose)f(conver)o(gence)i(is)e(indeterminate)g(\(see)i(\256gure\).)0
1808 y(What)11 b(happens)g(if)f(you)h(start)f(Newton')n(s)h(method)f(from)h
(one)g(of)g(these)g(points?)16 b(\(T)o(ry)10 b(it.\))0 1950
y Fg(CITED)j(REFERENCES)g(AND)f(FUR)o(THER)i(READING:)0 1999
y(Acton,)d(F)l(.S.)h(1970,)g Ff(Numerical)g(Methods)g(That)f(Work)p
Fg(;)g(1990,)i(corrected)f(edition)h(\(W)o(ashington:)g(Mathe-)80
2041 y(matical)g(Association)h(of)g(America\),)f(Chapter)h(2.)0
2091 y(Ralston,)d(A.,)f(and)h(Rabinowitz,)h(P)l(.)d(1978,)j
Ff(A)d(First)h(Course)g(in)g(Numerical)h(Analysis)p Fg(,)f(2nd)h(ed.)g(\(New)
e(Y)m(ork:)80 2132 y(McGraw-Hill\),)15 b Ft(x)p Fg(8.4.)0 2182
y(Ortega,)d(J.,)e(and)h(Rheinbold)q(t,)i(W)n(.)e(1970,)h Ff(Iterative)h
(Solution)g(of)d(Nonlinear)k(Equations)e(in)f(Several)22 b(V)o(ari-)80
2224 y(ables)14 b Fg(\(New)f(Y)m(ork:)h(Academic)g(Press\).)0
2273 y(Mandelbrot,)f(B.B.)d(1983,)i Ff(The)f(Fractal)g(Geometry)g(of)f
(Nature)h Fg(\(San)g(Francisco:)g(W)n(.H.)f(Freeman\).)0 2323
y(Peitgen,)h(H.-O.,)f(and)g(Saupe,)h(D.)d(\(eds.\))i(1988,)h
Ff(The)e(Science)h(of)f(Fractal)i(Images)e Fg(\(New)g(Y)m(ork:)g(Springer-)80
2365 y(V)n(erlag\).)p eop
%%Page: 369 8
bop 434 50 a Fh(9.5)10 b(Roots)g(of)h(Polynomials)474 b Fi(369)p
0 68 1395 2 v 0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial
49 x Fe(9.5)17 b(Roots)k(of)h(Polynomials)83 317 y Fi(Here)15
b(we)f(present)g(a)g(few)g(methods)g(for)f(\256nding)g(roots)f(of)i
(polynomials.)24 b(These)15 b(will)0 367 y(serve)c(for)f(most)g(practical)h
(problems)f(involving)d(polynomials)i(of)h(low-to-moderate)f(degree)0
417 y(or)i(for)g(well-conditioned)e(polynomials)h(of)h(higher)g(degree.)19
b(Not)11 b(as)i(well)e(appreciated)h(as)g(it)0 466 y(ought)f(to)h(be)h(is)g
(the)f(fact)h(that)f(some)i(polynomials)d(are)i(exceedingly)f
(ill-conditioned.)19 b(The)0 516 y(tiniest)12 b(changes)i(in)f(a)h
(polynomial')n(s)e(coef)o(\256cients)i(can,)h(in)e(the)g(worst)g(case,)j
(send)e(its)f(roots)0 566 y(sprawling)f(all)h(over)g(the)g(complex)g(plane.)
25 b(\(An)13 b(infamous)f(example)i(due)g(to)e(W)n(ilkinson)g(is)0
616 y(detailed)19 b(by)g(Acton)322 612 y Fg([1)r(])361 616
y Fi(.\))83 666 y(Recall)13 b(that)f(a)h(polynomial)d(of)i(degree)i
Fv(n)e Fi(will)f(have)i Fv(n)g Fi(roots.)21 b(The)13 b(roots)f(can)h(be)g
(real)0 716 y(or)e(complex,)g(and)g(they)f(might)g(not)g(be)h(distinct.)16
b(If)10 b(the)h(coef)o(\256cients)h(of)e(the)h(polynomial)e(are)0
765 y(real,)15 b(then)d(complex)h(roots)g(will)e(occur)j(in)e(pairs)h(that)g
(are)h(conjugate,)f(i.e.,)i(if)e Fv(x)1209 771 y Fn(1)1241
765 y Fu(=)i Fv(a)10 b Fu(+)h Fv(bi)0 815 y Fi(is)i(a)g(root)f(then)g
Fv(x)260 821 y Fn(2)292 815 y Fu(=)i Fv(a)d Ft(\000)f Fv(bi)j
Fi(will)f(also)g(be)h(a)h(root.)22 b(When)13 b(the)f(coef)o(\256cients)i(are)
f(complex,)0 865 y(the)k(complex)f(roots)g(need)h(not)f(be)h(related.)83
915 y(Multiple)6 b(roots,)h(or)h(closely)f(spaced)i(roots,)e(produce)h(the)f
(most)g(dif)o(\256culty)g(for)g(numerical)0 965 y(algorithms)i(\(see)i
(Figure)f(9.5.1\).)15 b(For)10 b(example,)i Fv(P)6 b Fu(\()p
Fv(x)p Fu(\))11 b(=)h(\()p Fv(x)d Ft(\000)g Fv(a)p Fu(\))1008
950 y Fn(2)1037 965 y Fi(has)i(a)g(double)e(real)i(root)0 1014
y(at)f Fv(x)h Fu(=)h Fv(a)p Fi(.)j(However)n(,)c(we)g(cannot)e(bracket)i(the)
e(root)g(by)h(the)g(usual)f(technique)h(of)g(identifying)0
1064 y(neighborhoods)h(where)j(the)f(function)f(changes)i(sign,)f(nor)g(will)
f(slope-following)e(methods)0 1114 y(such)15 b(as)h(Newton-Raphson)d(work)i
(well,)h(because)g(both)e(the)h(function)e(and)i(its)g(derivative)0
1164 y(vanish)j(at)g(a)h(multiple)e(root.)39 b(Newton-Raphson)17
b Fd(may)h Fi(work,)i(but)e(slowly)m(,)i(since)f(lar)o(ge)0
1214 y(roundof)o(f)13 b(errors)h(can)g(occur)n(.)27 b(When)14
b(a)g(root)f(is)h(known)f(in)h(advance)h(to)e(be)h(multiple,)g(then)0
1263 y(special)e(methods)f(of)g(attack)h(are)g(readily)f(devised.)19
b(Problems)12 b(arise)f(when)h(\(as)g(is)f(generally)0 1313
y(the)h(case\))h(we)f(do)g(not)f(know)g(in)g(advance)i(what)f(pathology)e(a)i
(root)f(will)f(display)m(.)14 1412 y Fa(De\257ation)k(of)g(Polynomials)83
1509 y Fi(When)19 b(seeking)f(several)h(or)f(all)h(roots)e(of)h(a)h
(polynomial,)h(the)e(total)f(ef)o(fort)h(can)i(be)0 1559 y(signi\256cantly)8
b(reduced)h(by)g(the)g(use)h(of)f Fd(de\257ation)p Fi(.)k(As)d(each)g(root)e
Fv(r)j Fi(is)e(found,)g(the)g(polynomial)0 1609 y(is)15 b(factored)h(into)e
(a)h(product)g(involving)d(the)j(root)g(and)g(a)h(reduced)g(polynomial)d(of)i
(degree)0 1659 y(one)i(less)f(than)h(the)f(original,)h(i.e.,)i
Fv(P)6 b Fu(\()p Fv(x)p Fu(\))17 b(=)g(\()p Fv(x)12 b Ft(\000)g
Fv(r)q Fu(\))p Fv(Q)p Fu(\()p Fv(x)p Fu(\))p Fi(.)34 b(Since)16
b(the)h(roots)e(of)i Fv(Q)f Fi(are)0 1708 y(exactly)f(the)g(remaining)f
(roots)g(of)h Fv(P)6 b Fi(,)16 b(the)f(ef)o(fort)g(of)f(\256nding)g
(additional)f(roots)h(decreases,)0 1758 y(because)e(we)e(work)g(with)f
(polynomials)g(of)g(lower)h(and)g(lower)g(degree)h(as)g(we)g(\256nd)f
(successive)0 1808 y(roots.)19 b(Even)12 b(more)g(important,)f(with)f
(de\257ation)h(we)i(can)f(avoid)f(the)h(blunder)e(of)i(having)e(our)0
1858 y(iterative)f(method)g(conver)o(ge)i(twice)e(to)h(the)f(same)j
(\(nonmultiple\))7 b(root)i(instead)g(of)g(separately)0 1908
y(to)19 b(two)f(dif)o(ferent)h(roots.)83 1957 y(De\257ation,)13
b(which)f(amounts)g(to)g(synthetic)f(division,)g(is)h(a)h(simple)f(operation)
g(that)f(acts)0 2007 y(on)e(the)h(array)g(of)g(polynomial)e(coef)o
(\256cients.)15 b(The)c(concise)f(code)g(for)g(synthetic)e(division)g(by)h(a)
0 2057 y(monomial)i(factor)h(was)h(given)e(in)g Ft(x)p Fi(5.3)h(above.)20
b(Y)l(ou)12 b(can)g(de\257ate)h(complex)f(roots)f(either)g(by)0
2107 y(converting)c(that)h(code)h(to)f(complex)h(data)g(type,)g(or)f(else)h
(\320)f(in)g(the)h(case)h(of)e(a)h(polynomial)e(with)0 2157
y(real)k(coef)o(\256cients)g(but)f(possibly)f(complex)i(roots)f(\320)g(by)h
(de\257ating)f(by)g(a)h(quadratic)g(factor)n(,)247 2252 y Fu([)p
Fv(x)d Ft(\000)i Fu(\()p Fv(a)f Fu(+)g Fv(ib)p Fu(\)])e([)p
Fv(x)i Ft(\000)g Fu(\()p Fv(a)g Ft(\000)h Fv(ib)p Fu(\)])h(=)h
Fv(x)802 2235 y Fn(2)830 2252 y Ft(\000)d Fu(2)p Fv(ax)g Fu(+)g(\()p
Fv(a)1026 2235 y Fn(2)1054 2252 y Fu(+)h Fv(b)1114 2235 y Fn(2)1132
2252 y Fu(\))131 b(\()p Fi(9.5.1)q Fu(\))0 2348 y Fi(The)12
b(routine)d Fs(poldiv)h Fi(in)g Ft(x)q Fi(5.3)h(can)g(be)g(used)g(to)g
(divide)f(the)g(polynomial)f(by)i(this)f(factor)n(.)83 2398
y(De\257ation)e(must,)h(however)n(,)g(be)f(utilized)f(with)g(care.)16
b(Because)10 b(each)f(new)g(root)e(is)h(known)0 2448 y(with)k(only)h
(\256nite)g(accuracy)m(,)j(errors)e(creep)g(into)e(the)h(determination)g(of)g
(the)g(coef)o(\256cients)h(of)0 2497 y(the)c(successively)g(de\257ated)g
(polynomial.)k(Consequently)m(,)9 b(the)g(roots)g(can)i(become)g(more)f(and)0
2547 y(more)15 b(inaccurate.)28 b(It)13 b(matters)i(a)g(lot)e(whether)h(the)g
(inaccuracy)h(creeps)h(in)d(stably)h(\(plus)f(or)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
