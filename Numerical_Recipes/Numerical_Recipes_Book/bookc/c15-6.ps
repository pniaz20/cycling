%!PS-Adobe-2.0
%%Creator: dvips 5.47 Copyright 1986-91 Radical Eye Software
%%Pages: 11 1
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Helvetica-Oblique Times-Roman Helvetica-BoldOblique
%%+ Times-Bold Times-Italic Helvetica
%%EndComments
%%BeginProcSet: tex.pro
/TeXDict 200 dict def TeXDict begin /N /def load def /B{bind def}N /S /exch
load def /X{S N}B /TR /translate load N /isls false N /vsize 10 N /@rigin{
isls{[0 1 -1 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
Resolution VResolution vsize neg mul TR matrix currentmatrix dup dup 4 get
round 4 exch put dup dup 5 get round 5 exch put setmatrix}N /@letter{/vsize 10
N}B /@landscape{/isls true N /vsize -1 N}B /@a4{/vsize 10.6929133858 N}B /@a3{
/vsize 15.5531 N}B /@ledger{/vsize 16 N}B /@legal{/vsize 13 N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0 0]N
/FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn begin
/FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X array
/BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo setfont}2
array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx FMat N df-tail}
B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{pop nn dup definefont
setfont}B /ch-width{ch-data dup length 5 sub get}B /ch-height{ch-data dup
length 4 sub get}B /ch-xoff{128 ch-data dup length 3 sub get sub}B /ch-yoff{
ch-data dup length 2 sub get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B
/ch-image{ch-data dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0
N /rw 0 N /rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S
dup /base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0
ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{ch-image}
imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn /base get cc ctr
put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1 sub dup 2 index S get sf
div put}if put /ctr ctr 1 add N}B /I{cc 1 add D}B /bop{userdict /bop-hook
known{bop-hook}if /SI save N @rigin 0 0 moveto}N /eop{clear SI restore
showpage userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if /VResolution X /Resolution X 1000 div /DVImag X /IE 256
array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for}N /p /show load N
/RMat[1 0 0 -1 0 0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X
/rulex X V}B /V statusdict begin /product where{pop product dup length 7 ge{0
7 getinterval(Display)eq}{pop false}ifelse}{false}ifelse end{{gsave TR -.1 -.1
TR 1 1 scale rulex ruley false RMat{BDot}imagemask grestore}}{{gsave TR -.1
-.1 TR rulex ruley scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /a{
moveto}B /delta 0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{
S p tail}B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B
/j{3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w
}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{clear SS restore}B end
%%EndProcSet
%%BeginProcSet: texps.pro
TeXDict begin /rf{655360 div mul Resolution mul 7227 div /PixPerEm X findfont
dup length 1 add dict /nn X{1 index /FID ne{nn 3 1 roll put}{pop pop}ifelse}
forall 256 dict begin nn /Encoding get 0 1 255{2 copy get 3 index 2 index get
1000 mul PixPerEm div def pop}for pop pop nn /Metrics currentdict put end
/fontname X /nn dup nn definefont[PixPerEm 0 0 PixPerEm neg 0 0]makefont N
fontname{/foo setfont}2 array copy cvx N fontname load 0 nn put}N
/ObliqueSlant{dup sin S cos div neg}B
/SlantFont{/foo X[1 0 foo 1 0 0] TransFont}N
/ExtendFont{/foo X 3 2 roll[S{foo div}forall]3 1 roll[foo 0 0 1 0 0]
TransFont}N
/ExpandFont{/foo X 3 2 roll[S{foo div}forall]3 1 roll[foo 0 0 foo 0 0]
TransFont}N
/TransFont{S findfont S makefont dup length dict /nn X{1 index
/FID ne{nn 3 1 roll put}{pop pop}ifelse}forall dup nn definefont pop}N end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N /vs
792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP false N /BBcalc false N
/p 3 def}B /@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{
@scaleunit div /vsc X}B /@hsize{/hs X /CLIP true N}B /@vsize{/vs X /CLIP true
N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{10 div /rwi X}
B /@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X /BBcalc true N}B
/magscale true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{md begin /letter{}N /note{}N /legal{}N /od{txpose 1 0 mtx
defaultmatrix dtransform S atan/pa X newpath clippath mark{transform{
itransform moveto}}{transform{itransform lineto}}{6 -2 roll transform 6 -2
roll transform 6 -2 roll transform{itransform 6 2 roll itransform 6 2 roll
itransform 6 2 roll curveto}}{{closepath}}pathforall newpath counttomark array
astore /gc xdf pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{
PaintBlack}if}N /txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR
pop 1 -1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0 TR}if
yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR pop pop 270
rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip not
and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg sub neg 0 TR}if yflip xflip
not and{TR pop pop 270 rotate ppr 2 get ppr 0 get neg sub neg 0 S TR}if}
ifelse scaleby96{ppr aload pop 4 -1 roll add 2 div 3 1 roll add 2 div 2 copy
TR .96 dup scale neg S neg S TR}if}N /cp{pop pop showpage pm restore}N end}if}
if}N /normalscale{Resolution 72 div VResolution 72 div neg scale magscale{
DVImag dup scale}if}N /psfts{S 65536 div N}N /startTexFig{/psf$SavedState save
N userdict maxlength dict begin /magscale false def normalscale currentpoint
TR /psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx psf$llx
sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy scale psf$cx
psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR /showpage{}N
/erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{psf$llx psf$lly
psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2 roll moveto 6 -1 roll
S lineto S lineto S lineto closepath clip newpath moveto}N /endTexFig{end
psf$SavedState restore}N /@beginspecial{SDict begin /SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults}N /@setspecial{CLIP{newpath 0 0
moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR
hsc vsc scale ang rotate BBcalc{rwi urx llx sub div dup scale llx neg lly neg
TR}if /showpage{}N /erasepage{}N /copypage{}N newpath}N /@endspecial{grestore
clear SpecialSave restore end}N /@defspecial{SDict begin}N /@fedspecial{end}B
/li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{/SaveX currentpoint /SaveY X N 1
setlinecap newpath}N /st{stroke SaveX SaveY moveto}N /fil{fill SaveX SaveY
moveto}N /ellipse{/endangle X /startangle X /yrad X /xrad X /savematrix matrix
currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc savematrix
setmatrix}N end
%%EndProcSet
TeXDict begin 1000 300 300 @start /Fa [ 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 12 18 18 30
22 7 11 11 13 19 9 11 9 9 18 18 18 18 18 18 18 18 18 18 9 9
19 19 19 18 34 22 22 24 24 22 20 26 24 9 17 22 18 28 24 26
22 26 24 22 20 24 22 31 22 22 20 9 9 9 16 18 7 18 18 17 18
18 9 18 18 7 7 17 7 28 18 18 18 18 11 17 9 18 17 24 17 17 17
11 9 11 19 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 11 18 18 6 18 18 18 18 6 11 18 11 11 17
17 0 18 18 18 9 0 18 12 7 11 11 18 33 33 0 20 0 11 11 11 11
11 11 11 11 0 11 11 0 11 11 11 33 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 33 0 12 0 0 0 0 18 26 33 12 0 0 0 0 0 30 0 0 0 9 0 0
7 20 31 20 0 0 0 0 ] /Helvetica-Oblique 1000 524288 rf /Fb
1 49 df<081C1C3838383070706060C0C0060D7E8D09>48 D E /Fc [ 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 9 9 12 18 18 30 22 7 11 11 13 19 9 11 9 9 18 18 18 18 18
18 18 18 18 18 9 9 19 19 19 18 34 22 22 24 24 22 20 26 24 9
17 22 18 28 24 26 22 26 24 22 20 24 22 31 22 22 20 9 9 9 16
18 7 18 18 17 18 18 9 18 18 7 7 17 7 28 18 18 18 18 11 17 9
18 17 24 17 17 17 11 9 11 19 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 11 18 18 6 18 18 18 18
6 11 18 11 11 17 17 0 18 18 18 9 0 18 12 7 11 11 18 33 33 0
20 0 11 11 11 11 11 11 11 11 0 11 11 0 11 11 11 33 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 33 0 12 0 0 0 0 18 26 33 12 0 0 0 0
0 30 0 0 0 9 0 0 7 20 31 20 0 0 0 0 ] /Helvetica 1000 524288
rf /Fd [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 8 11 18 17 17 33 28 11 11 11 17 19 8 11 8 9 17
17 17 17 17 17 17 17 17 17 11 11 19 19 19 17 31 24 22 24 24
22 20 26 26 13 17 26 22 31 24 26 20 26 24 18 22 24 24 33 24
24 22 11 9 11 19 17 11 17 18 15 18 15 11 17 18 9 11 18 9 28
18 17 18 18 15 13 11 18 17 24 17 17 15 13 7 13 17 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 11
17 17 6 17 17 17 17 9 17 17 11 11 18 18 0 17 17 17 8 0 18 12
11 17 17 17 33 33 0 17 0 11 11 11 11 11 11 11 11 0 11 11 0
11 11 11 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 33 0 10 0 0 0 0
22 26 33 11 0 0 0 0 0 24 0 0 0 9 0 0 9 17 24 18 0 0 0 0 ] /Times-Bold
1000 524288 rf /Fe [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 8 11 14 17 17 28 26 11 11 11 17 19
8 11 8 9 17 17 17 17 17 17 17 17 17 17 9 9 19 19 19 15 31 24
22 22 24 20 18 24 24 11 13 24 20 30 24 24 18 24 22 18 20 24
24 31 24 24 20 11 9 11 16 17 11 15 17 15 17 15 11 17 17 9 9
17 9 26 17 17 17 17 11 13 9 17 17 24 17 17 15 16 7 16 18 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 11 17 17 6 17 17 17 17 6 15 17 11 11 18 18 0 17 17 17
8 0 15 12 11 15 15 17 33 33 0 15 0 11 11 11 11 11 11 11 11
0 11 11 0 11 11 11 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 30 0
9 0 0 0 0 20 24 30 10 0 0 0 0 0 22 0 0 0 9 0 0 9 17 24 17 0
0 0 0 ] /Times-Roman 1000 524288 rf /Ff [ 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 14 17 24 28 28
44 36 14 17 17 19 29 14 17 14 14 28 28 28 28 28 28 28 28 28
28 17 17 29 29 29 30 49 36 36 36 36 33 30 39 36 14 28 36 30
41 36 39 33 39 36 33 30 36 33 47 33 33 30 17 14 17 29 28 14
28 30 28 30 28 17 30 30 14 14 28 14 44 30 30 30 30 19 28 17
30 28 39 28 28 25 19 14 19 29 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 28 28 8 28 28 28 28
12 25 28 17 17 30 30 0 28 28 28 14 0 28 17 14 25 25 28 50 50
0 30 0 17 17 17 17 17 17 17 17 0 17 17 0 17 17 17 50 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 50 0 18 0 0 0 0 30 39 50 18 0 0 0
0 0 44 0 0 0 14 0 0 14 30 47 30 0 0 0 0 ] /Helvetica-BoldOblique
1000 786432 rf /Fg [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 10 14 17 21 21 35 32 14 14 14 21
28 10 14 10 12 21 21 21 21 21 21 21 21 21 21 14 14 28 28 28
21 38 25 25 28 30 25 25 30 30 14 18 28 23 35 28 30 25 30 25
21 23 30 25 35 25 23 23 16 12 16 18 21 14 21 21 18 21 18 12
21 21 12 12 18 12 30 21 21 21 21 16 16 12 21 18 28 18 18 16
17 11 17 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 16 21 21 7 21 21 21 21 9 23 21 14 14 21
21 0 21 21 21 10 0 22 15 14 23 23 21 37 42 0 21 0 14 14 14
14 14 14 14 14 0 14 14 0 14 14 14 37 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 37 0 11 0 0 0 0 23 30 39 13 0 0 0 0 0 28 0 0 0 12
0 0 12 21 28 21 0 0 0 0 ] /Times-Italic 1000 655360 rf /Fh
[ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 10 14 23 21 21 42 35 14 14 14 21 24 10 14 10 12 21 21
21 21 21 21 21 21 21 21 14 14 24 24 24 21 39 30 28 30 30 28
25 32 32 16 21 32 28 39 30 32 25 32 30 23 28 30 30 42 30 30
28 14 12 14 24 21 14 21 23 18 23 18 14 21 23 12 14 23 12 35
23 21 23 23 18 16 14 23 21 30 21 21 18 16 9 16 22 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 14
21 21 7 21 21 21 21 12 21 21 14 14 23 23 0 21 21 21 10 0 22
15 14 21 21 21 42 42 0 21 0 14 14 14 14 14 14 14 14 0 14 14
0 14 14 14 42 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 42 0 12 0 0 0
0 28 32 42 14 0 0 0 0 0 30 0 0 0 12 0 0 12 21 30 23 0 0 0 0
] /Times-Bold 1000 655360 rf /Fi [ 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 21 30 35 35 55 45
17 21 21 24 36 17 21 17 17 35 35 35 35 35 35 35 35 35 35 21
21 36 36 36 38 61 45 45 45 45 42 38 48 45 17 35 45 38 52 45
48 42 48 45 42 38 45 42 59 42 42 38 21 17 21 36 35 17 35 38
35 38 35 21 38 38 17 17 35 17 55 38 38 38 38 24 35 21 38 35
48 35 35 31 24 17 24 36 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 21 35 35 10 35 35 35 35 15
31 35 21 21 38 38 0 35 35 35 17 0 35 22 17 31 31 35 62 62 0
38 0 21 21 21 21 21 21 21 21 0 21 21 0 21 21 21 62 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 62 0 23 0 0 0 0 38 48 62 23 0 0 0 0
0 55 0 0 0 17 0 0 17 38 59 38 0 0 0 0 ] /Helvetica-BoldOblique
1000 983040 rf /Fj [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 10 14 17 21 21 35 32 14 14 14 21
23 10 14 10 12 21 21 21 21 21 21 21 21 21 21 12 12 23 23 23
18 38 30 28 28 30 25 23 30 30 14 16 30 25 37 30 30 23 30 28
23 25 30 30 39 30 30 25 14 12 14 19 21 14 18 21 18 21 18 14
21 21 12 12 21 12 32 21 21 21 21 14 16 12 21 21 30 21 21 18
20 8 20 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 14 21 21 7 21 21 21 21 7 18 21 14 14 23
23 0 21 21 21 10 0 19 15 14 18 18 21 42 42 0 18 0 14 14 14
14 14 14 14 14 0 14 14 0 14 14 14 42 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 37 0 11 0 0 0 0 25 30 37 13 0 0 0 0 0 28 0 0 0 12
0 0 12 21 30 21 0 0 0 0 ] /Times-Roman 1000 655360 rf /Fk [
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 10 10 13 21 21 33 25 8 12 12 15 22 10 12 10 10 21 21 21
21 21 21 21 21 21 21 10 10 22 22 22 21 38 25 25 27 27 25 23
29 27 10 19 25 21 31 27 29 25 29 27 25 23 27 25 35 25 25 23
10 10 10 18 21 8 21 21 19 21 21 10 21 21 8 8 19 8 31 21 21
21 21 12 19 10 21 19 27 19 19 19 12 10 12 22 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 12 21
21 6 21 21 21 21 7 12 21 12 12 19 19 0 21 21 21 10 0 20 13
8 12 12 21 37 37 0 23 0 12 12 12 12 12 12 12 12 0 12 12 0 12
12 12 37 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 37 0 14 0 0 0 0 21
29 37 14 0 0 0 0 0 33 0 0 0 10 0 0 8 23 35 23 0 0 0 0 ] /Helvetica-Oblique
1000 589824 rf /Fl 1 106 df<040C0000000000705898983030606464683006127E910B>
105 D E /Fm 8 118 df<020408103020604040C0C0C0C0C0C0C0C0404060203010080402071A
7F920C>40 D<8040201018080C0404060606060606060604040C081810204080071A7E920C>I<
1F00318060C04040C060C060C060C060C060C060C060C060404060C031801F000B107F8F0F>48
D<1F00618040C08060C0600060006000C00180030006000C00102020207FC0FFC00B107F8F0F>
50 D<1F00318060C0C0C0FFC0C000C000C000604030801F000A0B7F8A0E>101
D<F700398030003000300030003000300030003000FC00090B7F8A0C>114
D<10103030FE3030303030323232321C070F7F8E0C>116 D<F1E0306030603060306030603060
3060306030E00F780D0B7F8A11>I E /Fn 8 62 df<001800001800003C00003C00004E00004E
000087000087000103800303C00201C00601E00400E00C00F008007010007810003820003C2000
1C40001E7FFFFEFFFFFFFFFFFF18177E961D>1 D<07C018303018701C600C600CE00EE00EE00E
E00EE00EE00EE00EE00EE00E600C600C701C30181C7007C00F157F9412>48
D<03000700FF000700070007000700070007000700070007000700070007000700070007000700
07007FF00C157E9412>I<0F8030E040708030C038E0384038003800700070006000C001800300
06000C08080810183FF07FF0FFF00D157E9412>I<0FE030306018701C701C001C001800380060
07E000300018000C000E000EE00EE00EC00C401830300FE00F157F9412>I<01F00608080C181C
301C70006000E000E3E0EC30F018F00CE00EE00EE00E600E600E300C3018183007C00F157F9412
>54 D<40007FFE7FFC7FF8C008801080200040008000800100010003000200060006000E000E00
0E000E000E0004000F167E9512>I<FFFFFCFFFFFC000000000000000000000000000000000000
FFFFFCFFFFFC160A7E8C1B>61 D E /Fo 8 120 df<07C0000C3040101040201880601880C00C
80C00D00C00E00800E00800C00C01C00C02C0060C4803F0300120E7E8D17>11
D<3800204C004046008007010003020003840001880001D00000E00000C00000600000E0000170
00023000043800081800101C00200C4040064080038013147F8D16>31 D<60F0F06004047D830A
>58 D<60F0F070101020204040040A7D830A>I<0000C00000C00001C00001C00003C00005C000
05E00008E00008E00010E00020E00020E00040E000C0E00080E001FFF001007002007004007004
0070080070180070FE03FE17177F961A>65 D<07FFF800E00E00E00700E00300E00301C00301C0
0701C00701C00E03803C03FFF003FFF003803C07001C07000E07000E07000E0E001C0E001C0E00
380E00701C01E0FFFF0018177F961B>I<001F8200E04403802C07001C0C001C1C000838000830
0008700008600000E00000E00000E00000C00000C00020C00020C00040E0004060008060010030
02001C1C0007E00017177E9619>I<1C020426060E460606460606860C040C0C040C0C040C0C04
1818081818081818100818100C2C2003C7C0170E7F8D19>119 D E /Fp
2 49 df<FFFFC0FFFFC012027D871A>0 D<040E0E1C1C1C38383070706060C0C0070F7F8F0A>
48 D E /Fq 8 117 df<1FE0007FF8007FFC00783C00301E00000E00000E0003FE001FFE007E0E
00F00E00E00E00E00E00F01E00F83E007FFFE03FE7E00F83E013127E9116>97
D<001F00007F8000FF8001E78001C30001C00001C0007FFF00FFFF00FFFF0001C00001C00001C0
0001C00001C00001C00001C00001C00001C00001C00001C00001C0003FFE007FFF003FFE001119
7F9816>102 D<03E3C00FFFE01FFFE01E3CC03C1E00380E00380E00380E003C1E001E3C001FFC
001FF8003BE0003800003800001FFC001FFF003FFFC07803C0F001E0E000E0E000E0E000E0F001
E07C07C03FFF800FFE0003F800131C7F9116>I<018003C003C0018000000000000000007FC07F
C07FC001C001C001C001C001C001C001C001C001C001C001C001C07FFFFFFF7FFF101A7D9916>
105 D<F9C380FFEFC0FFFFE03E7CE03C78E03870E03870E03870E03870E03870E03870E03870E0
3870E03870E03870E0FE7CF8FE7CF8FE3C781512809116>109 D<07C7001FF7003FFF007C3F00
781F00F00F00F00700E00700E00700E00700E00700F00700F00F00781F007C3F003FFF001FF700
07C700000700000700000700000700000700000700003FE0007FF0003FE0141B7E9116>113
D<FF0FC0FF3FE0FF7FE007F04007E00007C0000780000780000700000700000700000700000700
00070000070000FFFC00FFFC00FFFC0013127F9116>I<0300000700000700000700000700007F
FF00FFFF00FFFF0007000007000007000007000007000007000007000007010007038007038007
078007878003FF0003FE0000F80011177F9616>116 D E /Fr 10 113 df<0000300000600000
C0000180000300000700000E00000C0000180000380000300000700000E00000C00001C0000180
000380000380000300000700000600000E00000E00000C00001C00001C00001C00001800003800
00380000380000380000700000700000700000700000700000700000700000E00000E00000E000
00E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E000
00E00000E00000E00000E00000E000007000007000007000007000007000007000007000003800
003800003800003800001800001C00001C00001C00000C00000E00000E00000600000700000300
0003800003800001800001C00000C00000E000007000003000003800001800000C00000E000007
000003000001800000C0000060000030146377811F>18 D<C000006000003000001800000C0000
0E000007000003000001800001C00000C00000E000007000003000003800001800001C00001C00
000C00000E000006000007000007000003000003800003800003800001800001C00001C00001C0
0001C00000E00000E00000E00000E00000E00000E00000E0000070000070000070000070000070
000070000070000070000070000070000070000070000070000070000070000070000070000070
0000700000700000700000E00000E00000E00000E00000E00000E00000E00001C00001C00001C0
0001C0000180000380000380000380000300000700000700000600000E00000C00001C00001C00
00180000380000300000700000E00000C00001C0000180000300000700000E00000C0000180000
300000600000C0000014637F811F>I<00000C0000180000380000300000600000E00000C00001
C0000380000380000700000700000E00000E00001C00001C0000380000380000780000700000F0
0000F00000E00001E00001E00003C00003C00003C00003C0000780000780000780000F80000F00
000F00000F00001F00001F00001E00001E00001E00003E00003E00003E00003E00003C00003C00
003C00007C00007C00007C00007C00007C00007C00007C00007C0000780000780000F80000F800
00F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F800
00F80000F80000164B748024>48 D<C000006000007000003000001800001C00000C00000E0000
07000007000003800003800001C00001C00000E00000E000007000007000007800003800003C00
003C00001C00001E00001E00000F00000F00000F00000F000007800007800007800007C00003C0
0003C00003C00003E00003E00001E00001E00001E00001F00001F00001F00001F00000F00000F0
0000F00000F80000F80000F80000F80000F80000F80000F80000F800007800007800007C00007C
00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C
00007C00007C164B7F8024>I<F80000F80000F80000F80000F80000F80000F80000F80000F800
00F80000F80000F80000F80000F80000F80000F80000F800007800007800007C00007C00007C00
007C00007C00007C00007C00007C00003C00003C00003C00003E00003E00003E00003E00001E00
001E00001E00001F00001F00000F00000F00000F00000F800007800007800007800003C00003C0
0003C00003C00001E00001E00000E00000F00000F000007000007800003800003800001C00001C
00000E00000E000007000007000003800003800001C00000C00000E00000600000300000380000
1800000C164B748224>64 D<00007C00007C00007C00007C00007C00007C00007C00007C00007C
00007C00007C00007C00007C00007C00007C00007C00007C0000780000780000F80000F80000F8
0000F80000F80000F80000F80000F80000F00000F00000F00001F00001F00001F00001F00001E0
0001E00001E00003E00003E00003C00003C00003C00007C0000780000780000780000F00000F00
000F00000F00001E00001E00001C00003C00003C0000380000780000700000700000E00000E000
01C00001C0000380000380000700000700000E00000C00001C0000180000300000700000600000
C00000164B7F8224>I<F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8051B
748024>I<F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8051B6E8024>I<FF
FFFFFFFFFFC0FFFFFFFFFFFFE07F00000001FFE07F000000001FE03F8000000003F01FC0000000
00F00FC000000000380FE0000000001807F0000000000C03F8000000000403F8000000000401FC
000000000200FE0000000000007F0000000000007F0000000000003F8000000000001FC0000000
00000FC000000000000FE0000000000007F0000000000003F8000000000003F8000000000001FC
000000000000FE0000000000007E0000000000007F0000000000003F8000000000001FC0000000
00001FC000000000000FC000000000000780000000000003800000000000070000000000000E00
00000000001C000000000000380000000000007000000000000070000000000000E00000000000
01C0000000000003800000000000070000000000000E0000000000000E0000000000001C000000
0002003800000000040070000000000400E0000000000C01E0000000001801C000000000380380
00000000F8070000000001F00E000000000FF01C00000001FFF03FFFFFFFFFFFE03FFFFFFFFFFF
E07FFFFFFFFFFFE0FFFFFFFFFFFFC0373A7E7F3C>88 D<00000000060000000006000000000E00
0000000C000000001C0000000018000000003800000000300000000070000000006000000000E0
00000000C000000001C0000000018000000003800000000300000000070000000006000000000E
000000000C000000001C00000000180000000038000000003000000000700008000060001C0000
E0003C0000C000CE0001C0000E000180000E000380000700030000070007000003800600000380
0E000001C00C000001C01C000001E018000000E038000000E03000000070700000007060000000
38E000000038C00000001DC00000001D800000001F800000000F000000000F0000000006000000
27327C812A>112 D E /Fs 16 118 df<01020408103020606040C0C0C0C0C0C0C0C0C0C04060
6020301008040201081E7E950D>40 D<80402010080C0406060203030303030303030303020606
040C0810204080081E7E950D>I<0F0030C0606060604020C030C030C030C030C030C030C030C0
30C03040206060606030C00F000C137E9211>48 D<0C001C00EC000C000C000C000C000C000C00
0C000C000C000C000C000C000C000C000C00FFC00A137D9211>I<1F0060C06060F070F0306030
00700070006000C001C00180020004000810101020207FE0FFE00C137E9211>I<7FFFE0FFFFF0
000000000000000000000000000000000000FFFFF07FFFE0140A7E8B19>61
D<0F80104020206030C010FFF0C000C000C0006000201018200FC00C0D7F8C0F>101
D<2070200000000000F03030303030303030303030FC06157F9409>105
D<02070200000000000F030303030303030303030303030343E2E67C081B82940A>I<F3E1F034
3218381C0C30180C30180C30180C30180C30180C30180C30180C30180C30180CFC7E3F180D7F8C
1B>109 D<F3E034303818301830183018301830183018301830183018FC7E0F0D7F8C12>I<0FC0
186020106018C00CC00CC00CC00CC00C6018601838700FC00E0D7F8C11>I<F3E034303808300C
30063006300630063006300C3808343033E030003000300030003000FC000F137F8C12>I<F3C0
34E038E0304030003000300030003000300030003000FE000B0D7F8C0D>114
D<10001000100030007000FF80300030003000300030003000300030803080308011000E000912
7F910D>116 D<F078301830183018301830183018301830183018303818580F9E0F0D7F8C12>I
E /Ft 6 108 df<781818181818303030303060304060C0618063006600D800E0000D0D7E8C11>
23 D<07F000FE00F000F0017001E0017002E0017002E0017004E0027009C0023809C0023811C0
023821C0043823800438438004388380041C8380081D0700081E0700081E0700081C070018180E
00FE187FC01F147F9320>77 D<00F8800305800603000401000C01000C01000C00000E00000FE0
0007F80001FC00001C00000E00000E00400C00400C00400800601800D020008FC00011147E9314
>83 D<06070600000000384C4C8C98181830326262643808147F930C>105
D<0060007000600000000000000000038004C0046008C008C000C000C001800180018001800300
0300030003006600E600CC0078000C1A81930E>I<3E0006000C000C000C000C001800187018B8
19383230340038003E006300631063106310C320C1C00D147E9312>I E
/Fu 21 121 df<00030000000300000007800000078000000FC000000BC0000013E0000011E000
0021F0000020F0000040F8000040780000807C0000803C0001003E0001001E0002001F0002000F
0004000F8004000780080007C0080003C0100003E0100001E0200000F0200000F07FFFFFF8FFFF
FFFCFFFFFFFC1E1D7E9C23>1 D<0F0000C0188001C030600380703807806027FF00E0100600E0
100E00E0101C00E0101800E0103800E0103000E01070006020E0007020C0003041C00018838000
0F0303C000070620000E0C10000C1C08001C18080038380400303804007038040060380400E038
0401C03804018038040380180807001C0806000C100E0006200C0003C01E217E9E23>37
D<004000800100020006000C000C0018001800300030007000600060006000E000E000E000E000
E000E000E000E000E000E000E000E000600060006000700030003000180018000C000C00060002
000100008000400A2A7D9E10>40 D<800040002000100018000C000C0006000600030003000380
01800180018001C001C001C001C001C001C001C001C001C001C001C001C0018001800180038003
000300060006000C000C00180010002000400080000A2A7E9E10>I<0006000000060000000600
000006000000060000000600000006000000060000000600000006000000060000000600000006
0000FFFFFFE0FFFFFFE00006000000060000000600000006000000060000000600000006000000
06000000060000000600000006000000060000000600001B1C7E9720>43
D<03C00C301818300C300C700E60066006E007E007E007E007E007E007E007E007E007E007E007
E007E00760066006700E300C300C18180C3007E0101D7E9B15>48 D<030007003F00C700070007
000700070007000700070007000700070007000700070007000700070007000700070007000700
07000F80FFF80D1C7C9B15>I<07C01830201C400C400EF00FF80FF807F8077007000F000E000E
001C001C00380070006000C00180030006010C01180110023FFE7FFEFFFE101C7E9B15>I<07E0
1830201C201C781E780E781E381E001C001C00180030006007E00030001C001C000E000F000F70
0FF80FF80FF80FF00E401C201C183007E0101D7E9B15>I<000C00000C00001C00003C00003C00
005C0000DC00009C00011C00031C00021C00041C000C1C00081C00101C00301C00201C00401C00
C01C00FFFFC0001C00001C00001C00001C00001C00001C00001C0001FFC0121C7F9B15>I<300C
3FF83FF03FC020002000200020002000200023E024302818301C200E000E000F000F000F600FF0
0FF00FF00F800E401E401C2038187007C0101D7E9B15>I<00F0030C06040C0E181E301E300C70
0070006000E3E0E430E818F00CF00EE006E007E007E007E007E007600760077006300E300C1818
0C3003E0101D7E9B15>I<4000007FFF807FFF007FFF0040020080040080040080080000100000
100000200000600000400000C00000C00001C00001800001800003800003800003800003800007
8000078000078000078000078000078000030000111D7E9B15>I<03E00C301008200C20066006
600660067006780C3E083FB01FE007F007F818FC307E601E600FC007C003C003C003C003600260
04300C1C1007E0101D7E9B15>I<03C00C301818300C700C600EE006E006E007E007E007E007E0
076007700F300F18170C2707C700060006000E300C780C78187010203030C00F80101D7E9B15>
I<7FFFFFC0FFFFFFE0000000000000000000000000000000000000000000000000000000000000
0000FFFFFFE07FFFFFC01B0C7E8F20>61 D<FEFEC0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0
C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0FEFE07297C9E0C>91 D<FEFE060606060606060606
06060606060606060606060606060606060606060606060606060606FEFE0729809E0C>93
D<03E00C301818300C700E6006E006FFFEE000E000E000E00060007002300218040C1803E00F12
7F9112>101 D<FC7C001D86001E03001C01801C01C01C00C01C00E01C00E01C00E01C00E01C00
E01C00E01C01C01C01C01C01801E03001D06001CF8001C00001C00001C00001C00001C00001C00
001C0000FF8000131A7F9117>112 D<7F8FF00F03800F030007020003840001C80001D80000F0
0000700000780000F800009C00010E00020E000607000403801E07C0FF0FF81512809116>120
D E /Fv 26 120 df<00F000030C000E06041C0704380708300708700790700790E003A0E003A0
E003C0E00380E00380E00380600780601B883061900F80E016127E911B>11
D<0001F000061800080C00100C00200E00400E00800E00801C01001C010018010038020FF00210
C0020FE00200300400300400300400380400380800700800700800700800E01800E01800C01401
80140300230E0020F80020000020000040000040000040000040000080000080000017257F9C17
>I<007C00C2010203000600060006000700078003C001E001F003780E381C1C381C300C700C70
0CE008E008E018E010E010E0306020604030801F000F1D7E9C12>14 D<7E00600E00E00E00E00E
00E01C01C01C01C01C03801C0300380700380E00380C0038180070300070600071C000730000FC
0000F0000013127E9115>23 D<01FFF803FFF80FFFF01E1E00180E00380600700600700600E00E
00E00E00E00E00E00C00E01C00E01800E0300060600030C0001F000015127E9118>27
D<1E000423800823C00801C01001C02001E04000E08000E10000F1000072000074000078000038
00003800007800007C00009C00011C00021C00041E00080E00080E00100F002007084003908001
E0161A7F911A>31 D<60F0F06004047C830C>58 D<60F0F0701010101020204080040C7C830C>
I<0000038000000F0000003C000000F0000003C000000F0000003C000000F0000003C000000F00
00003C000000F0000000F00000003C0000000F00000003C0000000F00000003C0000000F000000
03C0000000F00000003C0000000F000000038019187D9520>I<00030003000700060006000E00
0C001C0018001800380030003000700060006000E000C000C001C0018003800300030007000600
06000E000C000C001C001800180038003000700060006000E000C000C00010297E9E15>I<E000
0000780000001E0000000780000001E0000000780000001E0000000780000001E0000000780000
001E00000007800000078000001E00000078000001E00000078000001E00000078000001E00000
078000001E00000078000000E000000019187D9520>I<00000C0000000C0000001C0000001C00
00003C0000007C0000005C0000009C0000008E0000010E0000010E0000020E0000040E0000040E
0000080E0000080E0000100E0000200E00003FFE00004007000040070000800700010007000100
07000200070002000700060007001E000700FF807FF01C1D7F9C1F>65 D<01FFFF00003C01C000
3800E0003800F0003800700038007000700070007000F0007000F0007001E000E003C000E00780
00E01F0000FFFC0001C00F0001C0078001C003C001C003C0038003C0038003C0038003C0038003
C0070007800700070007000E0007001C000E007800FFFFC0001C1C7E9B1F>I<0001F808000E06
1800380138006000F001C0007003800070070000300F0000200E0000201C0000203C0000203C00
0000780000007800000078000000F0000000F0000000F0000000F0000000F0000100F0000100F0
000100700002007000020030000400380008001C0010000E0060000701800000FE00001D1E7E9C
1E>I<01FE0000FF003E0000F0002E0001E0002E0002E0002E0002E0002E0004E0004E0009C000
4E0009C000470011C000470011C000870023800087004380008700438000870083800107010700
0107010700010382070001038207000203840E000203880E000203880E000203900E000403A01C
000403A01C000401C01C000C01C01C001C01803C00FF8103FF80281C7E9B28>77
D<01FC00FF80001C001C00002E001800002E001000002E00100000270010000047002000004300
2000004380200000438020000081C040000081C040000081C040000080E040000100E080000100
7080000100708000010070800002003900000200390000020039000002001D000004001E000004
000E000004000E00000C000E00001C00040000FF80040000211C7E9B21>I<01FFFF00003C03C0
003800E0003800F00038007000380070007000F0007000F0007000F0007000E000E001E000E003
C000E0078000E01E0001FFF00001C0000001C0000001C000000380000003800000038000000380
0000070000000700000007000000070000000F000000FFE000001C1C7E9B1B>80
D<FFC00FF01E0003801C0003001C0002001C0004001E0004000E0008000E0008000E0010000E00
20000E0020000E0040000E0080000E0080000F0100000701000007020000070400000704000007
080000071800000710000007A0000003A0000003C0000003800000038000000300000003000000
1C1D7D9B18>86 D<00FFFFE000F001C001C003800180070001000E0001001E0002001C00020038
00020070000000E0000001C0000003800000070000000F0000001E0000001C0000003800000070
020000E0040001C0040003800400070008000F0008000E0018001C003000380070007001E000FF
FFE0001B1C7E9B1C>90 D<01E3000717000C0F00180F00380E00300E00700E00700E00E01C00E0
1C00E01C00E01C00E03880E03880E038806078803199001E0E0011127E9116>97
D<3F00070007000E000E000E000E001C001C001C001C0039E03A303C1838187018701C701C701C
E038E038E038E030E070E060E0C061C023001E000E1D7E9C12>I<01F0030C0E0C1C1E383C3018
70007000E000E000E000E000E000E0046008601030601F800F127E9112>I<0007E00000E00000
E00001C00001C00001C00001C000038000038000038000038001E7000717000C0F00180F00380E
00300E00700E00700E00E01C00E01C00E01C00E01C00E03880E03880E038806078803199001E0E
00131D7E9C16>I<01F007080C0818043808300870307FC0E000E000E000E000E000E004600860
1030600F800E127E9113>I<07078009C86008D03008E03011C03011C03801C03801C038038070
0380700380700380600700E00700C00701800783000E86000E78000E00000E00001C00001C0000
1C00001C00003C0000FF8000151A819115>112 D<1C00C0802701C1C04701C1C04701C0C08703
8040870380400E0380400E0380401C0700801C0700801C0700801C07010018060100180602001C
0E02001C0F04000E13080003E1F0001A127E911E>119 D E /Fw 13 121
df<FFFFFF80FFFFFF8019027D8A20>0 D<60F0F06004047C8B0C>I<C00060E000E07001C03803
801C07000E0E00071C0003B80001F00000E00000E00001F00003B800071C000E0E001C07003803
807001C0E000E0C0006013147A9320>I<00060000000600000006000000060000000600000006
000000060000000600000006000000060000000600000006000000060000FFFFFFE0FFFFFFE000
060000000600000006000000060000000600000006000000060000000600000006000000060000
00060000FFFFFFE0FFFFFFE01B1C7E9A20>6 D<003F800000C060000300180004000400080002
0014000500220008802100108040802040404040408020802080110020800A0020800400208004
0020800A0020801100208020802040404040408020402100108022000880140005000800020004
0004000300180000C06000003F80001B1C7E9720>10 D<07E01FF83FFC7FFE7FFEFFFFFFFFFFFF
FFFFFFFFFFFF7FFE7FFE3FFC1FF807E010107E9115>15 D<FFFFFFE0FFFFFFE000000000000000
000000000000000000000000000000000000000000FFFFFFE0FFFFFFE000000000000000000000
000000000000000000000000000000000000FFFFFFE0FFFFFFE01B147E9320>17
D<000001800000078000001E00000078000001E00000078000001E00000078000001E000000780
00001E00000078000000E0000000780000001E0000000780000001E0000000780000001E000000
0780000001E0000000780000001E00000007800000018000000000000000000000000000000000
000000000000000000000000FFFFFF80FFFFFF8019227D9920>20 D<07C000201FE000203FF800
20783C0060E01F00E0C00783C08003FF808000FF0080007C001B097E8E20>24
D<07C000201FE000203FF80020783C0060E01F00E0C00783C08003FF808000FF0080007C000000
000007C000201FE000203FF80020783C0060E01F00E0C00783C08003FF808000FF0080007C001B
137E9320>I<003FFE0001FFFFC0071E1FE0081C03F0381C01F8703C00F8603C007CC03C007C00
3C003C0038003C0038003C0078003C0078003C00780038007000380070007800F0007000E00060
00E000E001E001C001C0018001C0020003C004000380180003806000070380000FFE00001FF000
001E1C809B20>68 D<00000000C000000001C00000000180000000038000000003000000000700
00000006000000000E000000000C000000001C0000000018000000003800000000300000000070
000000006000000000E000000000C000000001C0000000018000000003800000000300000C0007
00003C000600004E000E00008E000C000007001C00000700180000038038000003803000000380
70000001C060000001C0E0000000E0C0000000E1C0000000718000000073800000003B00000000
3F000000001E000000001E000000000C000000000C000000222A7E8123>112
D<1F00308070406060E0E0E0E0E040E00060007000300018001C003300718061C0E0C0E0E0E0E0
E0E060E070C031C0198007000300018001C000C000E040E0E0E0E0E0C0C041C021801F000B257D
9C12>120 D E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300
TeXDict begin 
%%EndSetup
%%Page: 689 1
bop 178 50 a Fk(15.6)10 b(Con\256dence)f(Limits)i(on)f(Estimated)g(Model)g
(Parameters)220 b Fj(689)p 0 68 1395 2 v 0 143 a @beginspecial
@setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial 71 x Fi(15.6)16 b(Con\256dence)k(Limits)g(on)h
(Estimated)e(Model)138 288 y(Parameters)83 413 y Fj(Several)8
b(times)f(already)g(in)f(this)g(chapter)i(we)f(have)h(made)g(statements)f
(about)f(the)h(standard)0 463 y(errors,)12 b(or)f(uncertainties,)h(in)e(a)i
(set)g(of)f Fv(M)17 b Fj(estimated)11 b(parameters)i Fh(a)p
Fj(.)19 b(W)m(e)11 b(have)h(given)f(some)0 513 y(formulas)j(for)h(computing)e
(standard)i(deviations)e(or)h(variances)i(of)e(individual)f(parameters)0
563 y(\(equations)19 b(15.2.9,)j(15.4.15,)g(15.4.19\),)f(as)g(well)e(as)h
(some)g(formulas)g(for)f(covariances)0 612 y(between)12 b(pairs)g(of)f
(parameters)i(\(equation)e(15.2.10;)h(remark)g(following)e(equation)h
(15.4.15;)0 662 y(equation)16 b(15.4.20;)k(equation)c(15.5.15\).)83
712 y(In)h(this)f(section,)j(we)f(want)f(to)f(be)h(more)h(explicit)e
(regarding)g(the)h(precise)h(meaning)0 762 y(of)j(these)h(quantitative)e
(uncertainties,)k(and)e(to)f(give)g(further)g(information)e(about)i(how)0
812 y(quantitative)13 b(con\256dence)j(limits)e(on)h(\256tted)g(parameters)h
(can)g(be)f(estimated.)30 b(The)16 b(subject)0 861 y(can)d(get)f(somewhat)g
(technical,)h(and)f(even)h(somewhat)f(confusing,)g(so)g(we)g(will)f(try)g(to)
h(make)0 911 y(precise)h(statements,)h(even)g(when)e(they)h(must)f(be)h(of)o
(fered)g(without)e(proof.)83 961 y(Figure)h(15.6.1)h(shows)f(the)g
(conceptual)h(scheme)h(of)e(an)h(experiment)g(that)e(\252measures\272)0
1011 y(a)i(set)g(of)g(parameters.)23 b(There)14 b(is)f(some)g(underlying)e
(true)h(set)h(of)f(parameters)i Fh(a)1195 1017 y Fs(true)1269
1011 y Fj(that)e(are)0 1061 y(known)f(to)h(Mother)f(Nature)i(but)e(hidden)g
(from)h(the)g(experimenter)n(.)21 b(These)14 b(true)e(parameters)0
1111 y(are)f(statistically)d(realized,)j(along)e(with)g(random)h(measurement)
h(errors,)f(as)h(a)g(measured)g(data)0 1160 y(set,)e(which)e(we)h(will)f
(symbolize)g(as)i Fw(D)556 1167 y Fs(\(0\))600 1160 y Fj(.)15
b(The)8 b(data)g(set)g Fw(D)860 1167 y Fs(\(0\))913 1160 y
Fg(is)f Fj(known)g(to)g(the)h(experimenter)n(.)0 1210 y(He)k(or)f(she)h
(\256ts)f(the)g(data)h(to)f(a)h(model)f(by)g Fv(\037)646 1195
y Fs(2)676 1210 y Fj(minimization)f(or)h(some)h(other)f(technique,)h(and)0
1260 y(obtains)d(measured,)j(i.e.,)g(\256tted,)e(values)h(for)f(the)g
(parameters,)i(which)e(we)h(here)g(denote)f Fh(a)1323 1267
y Fs(\(0\))1368 1260 y Fj(.)83 1310 y(Because)15 b(measurement)f(errors)g
(have)f(a)h(random)f(component,)h Fw(D)1084 1317 y Fs(\(0\))1142
1310 y Fj(is)g(not)e(a)i(unique)0 1360 y(realization)j(of)g(the)g(true)h
(parameters)g Fh(a)616 1366 y Fs(true)677 1360 y Fj(.)37 b(Rather)n(,)20
b(there)e(are)g(in\256nitely)e(many)h(other)0 1409 y(realizations)c(of)f(the)
h(true)g(parameters)i(as)e(\252hypothetical)f(data)i(sets\272)g(each)g(of)f
(which)g Fg(could)0 1459 y Fj(have)19 b(been)g(the)f(one)g(measured,)k(but)c
(happened)g(not)g(to)f(be.)40 b(Let)19 b(us)f(symbolize)g(these)0
1509 y(by)e Fw(D)90 1516 y Fs(\(1\))135 1509 y Fv(;)7 b Fw(D)186
1516 y Fs(\(2\))230 1509 y Fv(;)g(:)g(:)g(:)e Fj(.)35 b(Each)18
b(one,)g(had)f(it)f(been)i(realized,)h(would)c(have)j(given)e(a)h(slightly)0
1559 y(dif)o(ferent)12 b(set)h(of)f(\256tted)g(parameters,)j
Fh(a)586 1566 y Fs(\(1\))630 1559 y Fv(;)7 b Fh(a)670 1566
y Fs(\(2\))714 1559 y Fv(;)g(:)g(:)g(:)e Fj(,)14 b(respectively)m(.)22
b(These)14 b(parameter)g(sets)0 1609 y Fh(a)21 1616 y Fs(\()p
Ft(i)p Fs(\))73 1609 y Fj(therefore)d(occur)i(with)d(some)j(probability)c
(distribution)g(in)i(the)h Fv(M)5 b Fj(-dimensional)11 b(space)0
1659 y(of)g(all)f(possible)h(parameter)h(sets)f Fh(a)p Fj(.)17
b(The)12 b(actual)f(measured)h(set)g Fh(a)978 1666 y Fs(\(0\))1034
1659 y Fj(is)f(one)g(member)h(drawn)0 1708 y(from)19 b(this)g(distributi)o
(on.)83 1758 y(Even)e(more)g(interesting)d(than)i(the)g(probability)e
(distribution)f(of)j Fh(a)1112 1765 y Fs(\()p Ft(i)p Fs(\))1168
1758 y Fj(would)f(be)i(the)0 1808 y(distribution)9 b(of)i(the)h(dif)o
(ference)g Fh(a)513 1815 y Fs(\()p Ft(i)p Fs(\))563 1808 y
Fw(\000)e Fh(a)626 1814 y Fs(true)687 1808 y Fj(.)20 b(This)12
b(distribution)d(dif)o(fers)i(from)h(the)g(former)0 1858 y(one)c(by)g(a)g
(translation)e(that)i(puts)f(Mother)g(Nature')n(s)h(true)f(value)h(at)g(the)g
(origin.)13 b(If)7 b(we)i(knew)f Fg(this)0 1908 y Fj(distribution)o(,)h(we)j
(would)e(know)g(everything)g(that)g(there)i(is)e(to)h(know)f(about)h(the)g
(quantitative)0 1957 y(uncertainties)j(in)g(our)g(experimental)h(measurement)
h Fh(a)833 1964 y Fs(\(0\))878 1957 y Fj(.)83 2007 y(So)d(the)g(name)h(of)f
(the)g(game)i(is)e(to)f(\256nd)h(some)h(way)g(of)e(estimating)h(or)g
(approximating)0 2057 y(the)c(probability)e(distributio)o(n)f(of)j
Fh(a)517 2064 y Fs(\()p Ft(i)p Fs(\))564 2057 y Fw(\000)e Fh(a)624
2063 y Fs(true)694 2057 y Fj(without)g(knowing)h Fh(a)1006
2063 y Fs(true)1076 2057 y Fj(and)i(without)d(having)0 2107
y(available)14 b(to)f(us)g(an)h(in\256nite)e(universe)i(of)f(hypothetical)f
(data)i(sets.)0 2203 y Ff(Monte)g(Carlo)h(Simulation)f(of)g(Synthetic)f(Data)
g(Sets)83 2298 y Fj(Although)f(the)h(measured)j(parameter)e(set)h
Fh(a)752 2305 y Fs(\(0\))811 2298 y Fj(is)e(not)g(the)h(true)g(one,)h(let)e
(us)h(consider)0 2348 y(a)h(\256ctitious)e(world)g(in)h(which)f(it)h
Fg(was)g Fj(the)g(true)g(one.)28 b(Since)14 b(we)h(hope)f(that)g(our)g
(measured)0 2398 y(parameters)f(are)g(not)e Fg(too)g Fj(wrong,)g(we)i(hope)e
(that)h(that)f(\256ctitious)f(world)h(is)h(not)f(too)g(dif)o(ferent)0
2448 y(from)h(the)f(actual)h(world)f(with)f(parameters)j Fh(a)675
2454 y Fs(true)736 2448 y Fj(.)20 b(In)11 b(particular)n(,)h(let)g(us)g(hope)
f(\320)g(no,)i(let)e(us)0 2497 y Fg(assume)i Fj(\320)g(that)f(the)h(shape)h
(of)f(the)f(probability)f(distribution)e Fh(a)969 2504 y Fs(\()p
Ft(i)p Fs(\))1019 2497 y Fw(\000)i Fh(a)1082 2504 y Fs(\(0\))1140
2497 y Fj(in)i(the)f(\256ctitious)0 2547 y(world)7 b(is)h(the)g(same,)j(or)d
(very)g(nearly)g(the)g(same,)j(as)e(the)f(shape)h(of)f(the)g(probability)d
(distribution)p eop
%%Page: 690 2
bop 0 50 a Fj(690)422 b Fk(Chapter)10 b(15.)52 b(Modeling)10
b(of)g(Data)p 0 68 1395 2 v 0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore

@endspecial 47 1135 a @beginspecial 138 @llx 378 @lly 450
@urx 615 @ury 3120 @rwi @setspecial
%%BeginDocument: epsf/fig15x6x1.ps
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
/TX {pop} def
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def	% - cf flatness
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
[/_Symbol/Symbol 0 0 0 TZ
[/_Times-Bold/Times-Bold 0 0 1 TZ
[/_Times-Roman/Times-Roman 0 0 1 TZ
0 A
1 R
0.5 G
0 i 0 J 0 j 1 w 4 M []0 d
0 D
210.2194 485.0809 m
210.2194 527.8493 L
141.1948 527.8493 L
141.1948 485.0809 L
210.2194 485.0809 L
s
u
352.2725 457.3607 m
352.2725 500.1291 L
289.748 500.1291 L
289.748 457.3607 L
352.2725 457.3607 L
s
318.2603 478.7449 m
S
U
u
446.3052 457.3607 m
446.3052 500.1291 L
383.7807 500.1291 L
383.7807 457.3607 L
446.3052 457.3607 L
s
412.293 478.7449 m
S
U
u
352.2725 401.9202 m
352.2725 444.6886 L
289.748 444.6886 L
289.748 401.9202 L
352.2725 401.9202 L
s
318.2603 423.3044 m
S
U
u
446.3052 401.9202 m
446.3052 444.6886 L
383.7807 444.6886 L
383.7807 401.9202 L
446.3052 401.9202 L
s
412.293 423.3044 m
S
U
u
352.2725 512.8012 m
352.2725 555.5696 L
289.748 555.5696 L
289.748 512.8012 L
352.2725 512.8012 L
s
318.2603 534.1854 m
S
U
u
446.3052 512.8012 m
446.3052 555.5696 L
383.7807 555.5696 L
383.7807 512.8012 L
446.3052 512.8012 L
s
412.293 534.1854 m
S
U
u
0 G
352.2725 569.0337 m
352.2725 611.8021 L
289.748 611.8021 L
289.748 569.0337 L
352.2725 569.0337 L
s
318.2603 590.4179 m
S
U
u
446.3052 569.0337 m
446.3052 611.8021 L
383.7807 611.8021 L
383.7807 569.0337 L
446.3052 569.0337 L
s
U
210.4384 506.8717 m
282.6199 533.3934 l
S
210.4904 506.5381 m
283.1199 479.5369 l
S
210.3759 506.3086 m
284.2039 426.0764 l
S
0 R
352.6389 590.23 m
378.1452 590.23 l
S
u
0 O
0 g
378.0876 590.2033 m
376.5968 587.6979 L
382.5875 590.22 L
382.5875 590.22 L
376.5783 592.6978 L
378.0876 590.2033 L
f
U
0 R
0.5 G
352.6389 534.3935 m
378.1452 534.3935 l
S
u
0 O
0.5 g
378.0876 534.4533 m
376.5968 531.9479 L
382.5875 534.47 L
382.5875 534.47 L
376.5783 536.9478 L
378.0876 534.4533 L
f
U
0 R
0.5 G
352.6389 478.953 m
378.1452 478.953 l
S
u
0 O
0.5 g
378.0876 478.9533 m
376.5968 476.4479 L
382.5875 478.97 L
382.5875 478.97 L
376.5783 481.4478 L
378.0876 478.9533 L
f
U
0 R
0.5 G
352.6389 423.5125 m
378.1452 423.5125 l
S
u
0 O
0.5 g
378.3376 423.4533 m
376.8468 420.9479 L
382.8375 423.47 L
382.8375 423.47 L
376.8283 425.9478 L
378.3376 423.4533 L
f
U
u
0 g
285.0858 590.0832 m
285.9988 587.3142 L
288.0255 593.4905 L
288.0255 593.4905 L
282.2129 590.5805 L
285.0858 590.0832 L
f
U
u
282.6178 533.4628 m
282.3256 530.5618 L
286.6894 535.3798 L
286.6894 535.3798 L
280.1955 535.0857 L
282.6178 533.4628 L
f
U
u
282.6131 479.5983 m
280.0689 478.1739 L
286.5188 477.3623 L
286.5188 477.3623 L
282.5533 482.5135 L
282.6131 479.5983 L
f
U
u
283.9679 426.1872 m
281.0694 425.8704 L
286.6891 422.6027 L
286.6891 422.6027 L
285.0521 428.894 L
283.9679 426.1872 L
f
U
0 To
1 0 0 1 321 587 0 Tp
TP
-25.485 0 Td
0 Tr
/_Times-Roman 9 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 Tq
0 0 Tl
0 Tc
0 Tw
(actual data set\r) Tx 
25.485 -11 Td
(\r) Tx 
TO
0 To
1 0 0 1 297.5 536.5 0 Tp
TP
0 Tr
0 Ta
9 0 Tl
(hypothetical\r) Tx 
T*
(data set) Tx 
(\r) TX 
TO
0 To
1 0 0 1 297.5 480.25 0 Tp
TP
0 Tr
(hypothetical\r) Tx 
T*
(data set) Tx 
(\r) TX 
TO
0 To
1 0 0 1 297.5 424.5 0 Tp
TP
0 Tr
(hypothetical\r) Tx 
T*
(data set) Tx 
(\r) TX 
TO
0 To
1 0 0 1 410 422.25 0 Tp
TP
0 Tr
/_Times-Bold 9 Tf
(a) Tx 0 -50 Tk 
/_Times-Roman 6.5 Tf
-1.5 Ts
0 0 Tl
(3 ) Tx 
(\r) TX 
TO
0 To
1 0 0 1 410 477.5 0 Tp
TP
0 Tr
/_Times-Bold 9 Tf
0 Ts
9 0 Tl
(a) Tx 0 -50 Tk 
/_Times-Roman 6.5 Tf
-1.5 Ts
0 0 Tl
(2 ) Tx 
(\r) TX 
TO
0 To
1 0 0 1 410 533 0 Tp
TP
0 Tr
/_Times-Bold 9 Tf
0 Ts
9 0 Tl
(a) Tx 
/_Times-Roman 6.5 Tf
-1.5 Ts
0 0 Tl
(1  ) Tx 
(\r) TX 
TO
0 To
1 0 0 1 397.25 597.5 0 Tp
TP
0 Tr
/_Times-Roman 9 Tf
0 Ts
9 0 Tl
(fitted\r) Tx 
T*
(parameters\r) Tx 
T*
(      ) Tx 
/_Times-Bold 9 Tf
(a) Tx 0 -30 Tk 
/_Times-Roman 6.5 Tf
-1.5 Ts
(0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 364.5 595.5 0 Tp
TP
-4.0947 0 Td
0 Tr
/_Symbol 9 Tf
0 Ts
1 Ta
0 0 Tl
(c) Tx 
/_Times-Roman 6.5 Tf
3 Ts
16 0 Tl
(2\r) Tx 
-2.9058 -16 Td
/_Times-Roman 9 Tf
0 Ts
(min) Tx 
/_Times-Roman 6.5 Tf
3 Ts
(\r) Tx 
7.0005 -16 Td
(\r) Tx 
TO
0 To
1 0 0 1 175.5 508.5 0 Tp
TP
-27.8547 0 Td
0 Tr
/_Times-Roman 9 Tf
0 Ts
9 0 Tl
(true parameters\r) Tx 
20.3278 -9 Td
/_Times-Bold 9 Tf
(a) Tx 0 -50 Tk 
/_Times-Roman 6.5 Tf
-1.5 Ts
(true) Tx 
(\r) TX 
TO
0 To
0.6674 0.7448 -0.7448 0.6674 246.4599 554.8276 0 Tp
TP
-43.6003 0 Td
0 Tr
/_Times-Roman 9 Tf
0 Ts
0 0 Tl
(experimental realization) Tx 
(\r) TX 
TO
1 R
0 G
210.625 507.25 m
285 590.125 l
S
0 To
1 0 0 1 321.25 392.75 0 Tp
TP
-1.25 0 Td
0 Tr
0 O
0 g
/_Times-Bold 10 Tf
6 0 Tl
(.\r) Tx 
T*
(.\r) Tx 
T*
(.) Tx 
(\r) TX 
TO
0 To
1 0 0 1 415.25 392.75 0 Tp
TP
-1.25 0 Td
0 Tr
(.\r) Tx 
T*
(.\r) Tx 
T*
(.) Tx 
(\r) TX 
TO
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 0 1197 a Fe(Figure)f(15.6.1.)29 b(A)9 b(statistical)h(universe)e
(of)h(data)f(sets)h(from)g(an)g(underlying)e(model.)14 b(T)o(rue)9
b(parameters)f Fd(a)1288 1201 y Fm(true)1354 1197 y Fe(are)0
1234 y(realized)h(in)h(a)g(data)f(set,)i(from)e(which)g(\256tted)i
(\(observed\))d(parameters)g Fd(a)870 1239 y Fm(0)898 1234
y Fe(are)h(obtained.)16 b(If)10 b(the)g(experiment)e(were)0
1272 y(repeated)g(many)f(times,)j(new)e(data)h(sets)g(and)f(new)g(values)g
(of)h(the)g(\256tted)g(parameters)f(would)g(be)g(obtained.)0
1383 y Fh(a)21 1390 y Fs(\()p Ft(i)p Fs(\))68 1383 y Fw(\000)g
Fh(a)129 1389 y Fs(true)200 1383 y Fj(in)h(the)g(real)h(world.)k(Notice)9
b(that)g(we)h(are)h(not)d(assuming)i(that)f Fh(a)1129 1390
y Fs(\(0\))1183 1383 y Fj(and)h Fh(a)1273 1389 y Fs(true)1344
1383 y Fj(are)0 1433 y(equal;)j(they)f(are)h(certainly)f(not.)20
b(W)m(e)13 b(are)g(only)f(assuming)g(that)g(the)g(way)g(in)g(which)g(random)0
1482 y(errors)g(enter)g(the)g(experiment)f(and)h(data)g(analysis)g(does)g
(not)f(vary)h(rapidly)f(as)h(a)h(function)d(of)0 1532 y Fh(a)21
1538 y Fs(true)82 1532 y Fj(,)16 b(so)e(that)g Fh(a)257 1539
y Fs(\(0\))316 1532 y Fj(can)h(serve)g(as)g(a)g(reasonable)g(surrogate.)83
1582 y(Now)m(,)f(often,)g(the)e(distribution)e(of)i Fh(a)631
1589 y Fs(\()p Ft(i)p Fs(\))681 1582 y Fw(\000)f Fh(a)744 1589
y Fs(\(0\))802 1582 y Fj(in)h(the)h(\256ctitious)f(world)g
Fg(is)g Fj(within)f(our)0 1632 y(power)k(to)g(calculate)h(\(see)g(Figure)f
(15.6.2\).)30 b(If)15 b(we)h(know)e(something)h(about)f(the)h(process)0
1682 y(that)j(generated)h(our)f(data,)j(given)d(an)h(assumed)g(set)g(of)f
(parameters)i Fh(a)1104 1689 y Fs(\(0\))1149 1682 y Fj(,)h(then)d(we)h(can)0
1732 y(usually)11 b(\256gure)h(out)f(how)h(to)g Fg(simulate)f
Fj(our)g(own)h(sets)g(of)g(\252synthetic\272)g(realizations)g(of)f(these)0
1781 y(parameters)g(as)g(\252synthetic)e(data)h(sets.\272)16
b(The)11 b(procedure)f(is)g(to)f(draw)h(random)g(numbers)g(from)0
1831 y(appropriate)k(distribution)o(s)f(\(cf.)i Fw(x)p Fj(7.2\261)p
Fw(x)q Fj(7.3\))f(so)h(as)h(to)e(mimic)h(our)f(best)h(understanding)e(of)0
1881 y(the)d(underlying)f(process)i(and)f(measurement)i(errors)e(in)g(our)g
(apparatus.)16 b(W)n(ith)9 b(such)i(random)0 1931 y(draws,)16
b(we)f(construct)f(data)g(sets)h(with)e(exactly)i(the)f(same)i(numbers)e(of)g
(measured)i(points,)0 1981 y(and)e(precisely)g(the)g(same)h(values)f(of)g
(all)f(control)g(\(independent\))f(variables,)k(as)e(our)g(actual)0
2030 y(data)e(set)f Fw(D)170 2037 y Fs(\(0\))215 2030 y Fj(.)19
b(Let)12 b(us)f(call)h(these)g(simulated)f(data)g(sets)h Fw(D)888
2015 y Ft(S)887 2044 y Fs(\(1\))932 2030 y Fv(;)7 b Fw(D)984
2015 y Ft(S)983 2044 y Fs(\(2\))1027 2030 y Fv(;)g(:)g(:)g(:)e
Fj(.)19 b(By)11 b(construction)0 2080 y(these)16 b(are)g(supposed)f(to)g
(have)h(exactly)f(the)h(same)g(statistical)f(relationship)e(to)i
Fh(a)1234 2087 y Fs(\(0\))1294 2080 y Fj(as)h(the)0 2130 y
Fw(D)32 2137 y Fs(\()p Ft(i)p Fs(\))72 2130 y Fj(')n(s)d(have)h(to)e
Fh(a)271 2136 y Fs(true)332 2130 y Fj(.)25 b(\(For)13 b(the)g(case)i(where)e
(you)g(don')o(t)f(know)h(enough)g(about)f(what)i(you)0 2180
y(are)g(measuring)f(to)g(do)g(a)g(credible)g(job)g(of)f(simulating)g(it,)i
(see)g(below)m(.\))83 2230 y(Next,)20 b(for)d(each)i Fw(D)387
2215 y Ft(S)386 2243 y Fs(\()p Ft(j)r Fs(\))429 2230 y Fj(,)h(perform)d
(exactly)h(the)g(same)h(procedure)e(for)g(estimation)g(of)0
2288 y(parameters,)23 b(e.g.,)g Fv(\037)332 2273 y Fs(2)370
2288 y Fj(minimization,)e(as)f(was)g(performed)f(on)g(the)g(actual)h(data)f
(to)g(get)0 2338 y(the)e(parameters)i Fh(a)289 2345 y Fs(\(0\))333
2338 y Fj(,)h(giving)c(simulated)h(measured)h(parameters)h
Fh(a)1063 2323 y Ft(S)1063 2351 y Fs(\(1\))1107 2338 y Fv(;)7
b Fh(a)1147 2323 y Ft(S)1147 2351 y Fs(\(2\))1191 2338 y Fv(;)g(:)g(:)g(:)e
Fj(.)37 b(Each)0 2398 y(simulated)12 b(measured)h(parameter)g(set)g(yields)e
(a)i(point)e Fh(a)843 2383 y Ft(S)843 2411 y Fs(\()p Ft(i)p
Fs(\))892 2398 y Fw(\000)g Fh(a)955 2405 y Fs(\(0\))1000 2398
y Fj(.)21 b(Simulate)12 b(enough)g(data)0 2448 y(sets)c(and)g(enough)f
(derived)h(simulated)f(measured)i(parameters,)h(and)e(you)f(map)h(out)f(the)h
(desired)0 2497 y(probability)14 b(distributio)o(n)g(in)h Fv(M)21
b Fj(dimensions.)83 2547 y(In)c(fact,)j(the)d(ability)e(to)i(do)f
Fg(Monte)e(Carlo)g(simulations)h Fj(in)i(this)f(fashion)h(has)g(revo-)p
eop
%%Page: 691 3
bop 178 50 a Fk(15.6)10 b(Con\256dence)f(Limits)i(on)f(Estimated)g(Model)g
(Parameters)220 b Fj(691)p 0 68 1395 2 v 0 143 a @beginspecial
@setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial -17 1051 a @beginspecial 115 @llx
378 @lly 458 @urx 595 @ury 3430 @rwi @setspecial
%%BeginDocument: epsf/fig15x6x2.ps
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
/TX {pop} def
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def	% - cf flatness
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
[/_Symbol/Symbol 0 0 0 TZ
[/_Times-Bold/Times-Bold 0 0 1 TZ
[/_Times-Italic/Times-Italic 0 0 1 TZ
[/_Times-Roman/Times-Roman 0 0 1 TZ
0 A
u
1 R
0 G
0 i 0 J 0 j 1 w 4 M []0 d
0 D
251.6693 464.6956 m
251.6693 507.464 L
194.6447 507.464 L
194.6447 464.6956 L
251.6693 464.6956 L
s
223.157 486.0798 m
S
U
u
375.2224 436.9754 m
375.2224 479.7438 L
318.1979 479.7438 L
318.1979 436.9754 L
375.2224 436.9754 L
s
346.7102 458.3596 m
S
U
u
451.2551 436.9754 m
451.2551 479.7438 L
394.2306 479.7438 L
394.2306 436.9754 L
451.2551 436.9754 L
s
422.7429 458.3596 m
S
U
u
375.2224 381.5349 m
375.2224 424.3033 L
318.1979 424.3033 L
318.1979 381.5349 L
375.2224 381.5349 L
s
346.7102 402.9191 m
S
U
u
451.2551 381.5349 m
451.2551 424.3033 L
394.2306 424.3033 L
394.2306 381.5349 L
451.2551 381.5349 L
s
422.7429 402.9191 m
S
U
u
375.2224 492.4159 m
375.2224 535.1843 L
318.1979 535.1843 L
318.1979 492.4159 L
375.2224 492.4159 L
s
346.7102 513.8001 m
S
U
u
451.2551 492.4159 m
451.2551 535.1843 L
394.2306 535.1843 L
394.2306 492.4159 L
451.2551 492.4159 L
s
422.7429 513.8001 m
S
U
u
375.2224 548.6484 m
375.2224 591.4168 L
318.1979 591.4168 L
318.1979 548.6484 L
375.2224 548.6484 L
s
346.7102 570.0326 m
S
U
u
451.2551 548.6484 m
451.2551 591.4168 L
394.2306 591.4168 L
394.2306 548.6484 L
451.2551 548.6484 L
s
U
252.2633 486.6739 m
311.0698 513.0081 l
S
252.0653 486.2778 m
311.0698 459.1516 l
S
252.0653 486.8719 m
313.4458 569.6366 l
S
252.2633 485.4858 m
312.6538 405.6911 l
S
0 R
375.5888 569.8447 m
388.5951 569.8447 l
S
u
0 O
0 g
389.0375 569.818 m
387.5467 567.3126 L
393.5374 569.8347 L
393.5374 569.8347 L
387.5282 572.3125 L
389.0375 569.818 L
f
U
0 R
0 G
375.5888 514.0082 m
388.5951 514.0082 l
S
u
1 R
175.6365 464.6956 m
175.6365 507.464 L
118.612 507.464 L
118.612 464.6956 L
175.6365 464.6956 L
s
147.1243 486.0798 m
S
U
0 R
176.0029 486.2879 m
189.0092 486.2879 l
S
u
0 O
0 g
388.5375 514.068 m
387.0467 511.5626 L
393.0374 514.0847 L
393.0374 514.0847 L
387.0282 516.5625 L
388.5375 514.068 L
f
U
0 R
0 G
375.5888 458.5677 m
388.5951 458.5677 l
S
u
0 O
0 g
388.5375 458.568 m
387.0467 456.0626 L
393.0374 458.5847 L
393.0374 458.5847 L
387.0282 461.0625 L
388.5375 458.568 L
f
U
0 R
0 G
375.5888 403.1272 m
388.5951 403.1272 l
S
u
0 O
0 g
388.2875 403.568 m
386.7967 401.0626 L
392.7874 403.5847 L
392.7874 403.5847 L
386.7782 406.0625 L
388.2875 403.568 L
f
U
u
313.4107 569.5729 m
314.3237 566.8039 L
316.3504 572.9802 L
316.3504 572.9802 L
310.5378 570.0702 L
313.4107 569.5729 L
f
U
u
311.0677 513.015 m
310.7755 510.114 L
315.1393 514.932 L
315.1393 514.932 L
308.6454 514.6379 L
311.0677 513.015 L
f
U
u
310.938 459.2755 m
308.3938 457.8511 L
314.8437 457.0395 L
314.8437 457.0395 L
310.8782 462.1907 L
310.938 459.2755 L
f
U
u
312.6053 405.6144 m
309.7068 405.2976 L
315.3265 402.0299 L
315.3265 402.0299 L
313.6895 408.3212 L
312.6053 405.6144 L
f
U
u
189.0375 486.318 m
187.5467 483.8126 L
193.5374 486.3347 L
193.5374 486.3347 L
187.5282 488.8125 L
189.0375 486.318 L
f
U
0 To
1 0 0 1 330.25 572.75 0 Tp
TP
0 Tr
/_Times-Roman 9 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
9 0 Tl
0 Tc
0 Tw
(synthetic\r) Tx 
T*
(data set  1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 330.25 516 0 Tp
TP
0 Tr
(synthetic\r) Tx 
T*
(data set  2) Tx 
(\r) TX 
TO
0 To
1 0 0 1 330.25 460.25 0 Tp
TP
0 Tr
(synthetic\r) Tx 
T*
(data set  3) Tx 
(\r) TX 
TO
0 To
1 0 0 1 330.25 405 0 Tp
TP
0 Tr
(synthetic\r) Tx 
T*
(data set  4) Tx 
(\r) TX 
TO
0 To
1 0 0 1 418.6277 511.3124 0 Tp
TP
0 Tr
/_Times-Bold 9 Tf
(a) Tx 0 -80 Tk 
/_Times-Roman 6.5 Tf
-1.5 Ts
0 0 Tl
(2  ) Tx 
(\r) TX 
TO
0 To
1 0 0 1 379.1277 574.5624 0 Tp
TP
0 Tr
/_Symbol 9 Tf
0 Ts
(c) Tx 
/_Times-Roman 6.5 Tf
3 Ts
(2\r) Tx 
0 -8 Td
(\r) Tx 
TO
0 To
1 0 0 1 377.3777 561.0624 0 Tp
TP
0 Tr
/_Times-Roman 9 Tf
0 Ts
(min) Tx 
(\r) TX 
TO
0 To
1 0 0 1 179.8777 490.3124 0 Tp
TP
0 Tr
/_Symbol 9 Tf
(c) Tx 
/_Times-Roman 6.5 Tf
3 Ts
(2\r) Tx 
0 -8 Td
(\r) Tx 
TO
0 To
1 0 0 1 178.1277 476.8124 0 Tp
TP
0 Tr
/_Times-Roman 9 Tf
0 Ts
(min) Tx 
(\r) TX 
TO
0 To
1 0 0 1 422.75 513.75 0 Tp
TP
0 Tr
/_Times-Roman 6.5 Tf
3 Ts
-20 Tt
-0.1299 Tc
(\() Tx 
/_Times-Italic 6.5 Tf
(s) Tx 
/_Times-Roman 6.5 Tf
(\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 418.6277 557.8124 0 Tp
TP
0 Tr
/_Times-Bold 9 Tf
0 Ts
0 Tt
9 0 Tl
0 Tc
(a) Tx 0 -80 Tk 
/_Times-Roman 6.5 Tf
-1.5 Ts
0 0 Tl
(1  ) Tx 
(\r) TX 
TO
1 A
0 To
1 0 0 1 422.75 560.25 0 Tp
TP
0 Tr
3 Ts
-20 Tt
-0.1299 Tc
(\() Tx 
/_Times-Italic 6.5 Tf
(s) Tx 
/_Times-Roman 6.5 Tf
(\)) Tx 
(\r) TX 
TO
0 A
0 To
1 0 0 1 418.6277 455.8124 0 Tp
TP
0 Tr
/_Times-Bold 9 Tf
0 Ts
0 Tt
9 0 Tl
0 Tc
(a) Tx 0 -80 Tk 
/_Times-Roman 6.5 Tf
-1.5 Ts
0 0 Tl
(3  ) Tx 
(\r) TX 
TO
0 To
1 0 0 1 422.75 458.25 0 Tp
TP
0 Tr
3 Ts
-20 Tt
-0.1299 Tc
(\() Tx 
/_Times-Italic 6.5 Tf
(s) Tx 
/_Times-Roman 6.5 Tf
(\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 418.6277 400.5624 0 Tp
TP
0 Tr
/_Times-Bold 9 Tf
0 Ts
0 Tt
9 0 Tl
0 Tc
(a) Tx 0 -80 Tk 
/_Times-Roman 6.5 Tf
-1.5 Ts
0 0 Tl
(4  ) Tx 
(\r) TX 
TO
0 To
1 0 0 1 422.75 403 0 Tp
TP
0 Tr
3 Ts
-20 Tt
-0.1299 Tc
(\() Tx 
/_Times-Italic 6.5 Tf
(s) Tx 
/_Times-Roman 6.5 Tf
(\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 400 578.75 0 Tp
TP
0 Tr
/_Times-Roman 9 Tf
0 Ts
0 Tt
9 0 Tl
0 Tc
(Monte Carlo\r) Tx 
T*
(parameters\r) Tx 
T*
(\r) Tx 
TO
0 To
0.5877 0.809 -0.809 0.5877 260.2438 503.3918 0 Tp
TP
0 Tr
/_Times-Roman 8.5007 Tf
10.9998 0 Tl
(Monte Carlo realization) Tx 
(\r) TX 
TO
0 To
1 0 0 1 205 491.75 0 Tp
TP
0 Tr
/_Times-Roman 9 Tf
9 0 Tl
(fitted\r) Tx 
T*
(parameters\r) Tx 
T*
(       ) Tx 
/_Times-Bold 9 Tf
(a) Tx 0 -100 Tk 
/_Times-Roman 6.5 Tf
-1.5 Ts
(0) Tx 
/_Times-Roman 9 Tf
0 Ts
(\r) Tx 
T*
(\r) Tx 
TO
0 To
1 0 0 1 133.75 489.5 0 Tp
TP
0 Tr
(actual\r) Tx 
T*
(data set) Tx 
(\r) TX 
TO
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 0 1114 a Fe(Figure)6 b(15.6.2.)22 b(Monte)5 b(Carlo)h
(simulation)f(of)h(an)g(experiment.)k(The)c(\256tted)g(parameters)f(from)h
(an)g(actual)f(experiment)0 1151 y(are)j(used)e(as)i(surrogates)f(for)g(the)h
(true)g(parameters.)j(Computer)o(-generated)5 b(random)h(numbers)h(are)g
(used)g(to)h(simulate)0 1188 y(many)i(synthetic)f(data)h(sets.)20
b(Each)10 b(of)h(these)f(is)h(analyzed)e(to)h(obtain)g(its)h(\256tted)g
(parameters.)19 b(The)10 b(distribution)g(of)0 1226 y(these)f(\256tted)i
(parameters)d(around)g(the)i(\(known\))f(surrogate)f(true)i(parameters)e(is)j
(thus)e(studied.)0 1328 y Fj(lutionized)14 b(many)j(\256elds)f(of)g(modern)g
(experimental)g(science.)34 b(Not)15 b(only)g(is)h(one)g(able)g(to)0
1378 y(characterize)e(the)f(errors)f(of)g(parameter)i(estimation)e(in)g(a)h
(very)f(precise)h(way;)h(one)f(can)g(also)0 1428 y(try)d(out)g(on)h(the)g
(computer)g(dif)o(ferent)f(methods)h(of)g(parameter)h(estimation,)f(or)f(dif)
o(ferent)h(data)0 1478 y(reduction)h(techniques,)i(and)g(seek)g(to)f
(minimize)g(the)g(uncertainty)f(of)h(the)g(result)g(according)0
1527 y(to)g(any)g(desired)h(criteria.)24 b(Of)o(fered)14 b(the)f(choice)h
(between)g(mastery)g(of)f(a)h(\256ve-foot)e(shelf)h(of)0 1577
y(analytical)c(statistics)h(books)f(and)h(middling)e(ability)g(at)i
(performing)f(statistical)g(Monte)h(Carlo)0 1627 y(simulations,)j(we)h(would)
f(surely)g(choose)h(to)f(have)h(the)g(latter)f(skill.)0 1733
y Ff(Quick-and-Dirty)f(Monte)j(Carlo:)k(The)c(Bootstrap)f(Method)83
1835 y Fj(Here)k(is)f(a)g(powerful)f(technique)g(that)h(can)g(often)g(be)g
(used)g(when)g(you)g(don')o(t)f(know)0 1885 y(enough)g(about)g(the)h
(underlying)d(process,)20 b(or)c(the)h(nature)f(of)h(your)e(measurement)k
(errors,)0 1935 y(to)c(do)h(a)g(credible)f(Monte)h(Carlo)f(simulation.)30
b(Suppose)16 b(that)f(your)g(data)h(set)g(consists)f(of)0 1985
y Fv(N)20 b Fg(independent)12 b(and)h(identically)f(distributed)h
Fj(\(or)h Fg(iid)p Fj(\))g(\252data)i(points.\272)28 b(Each)16
b(data)f(point)0 2035 y(probably)9 b(consists)h(of)f(several)i(numbers,)g
(e.g.,)g(one)g(or)e(more)i(control)e(variables)h(\(uniformly)0
2084 y(distributed,)k(say)m(,)j(in)e(the)f(range)i(that)e(you)g(have)h
(decided)h(to)e(measure\))i(and)f(one)g(or)f(more)0 2134 y(associated)20
b(measured)h(values)f(\(each)h(distributed)c(however)j(Mother)e(Nature)i
(chooses\).)0 2184 y(\252Iid\272)c(means)h(that)e(the)g(sequential)g(order)h
(of)f(the)h(data)g(points)e(is)h(not)g(of)h(consequence)g(to)0
2234 y(the)f(process)h(that)f(you)g(are)h(using)f(to)g(get)g(the)h(\256tted)e
(parameters)j Fh(a)p Fj(.)31 b(For)15 b(example,)j(a)e Fv(\037)1376
2219 y Fs(2)0 2284 y Fj(sum)e(like)g(\(15.5.5\))f(does)i(not)e(care)i(in)f
(what)g(order)f(the)h(points)f(are)i(added.)27 b(Even)14 b(simpler)0
2333 y(examples)f(are)f(the)g(mean)g(value)g(of)f(a)h(measured)h(quantity)m
(,)e(or)g(the)h(mean)h(of)e(some)h(function)0 2383 y(of)18
b(the)h(measured)g(quantities.)83 2433 y(The)10 b Fg(bootstrap)d(method)457
2429 y Fc([1)r(])505 2433 y Fj(uses)j(the)f(actual)g(data)g(set)h
Fw(D)921 2418 y Ft(S)920 2446 y Fs(\(0\))964 2433 y Fj(,)g(with)e(its)h
Fv(N)14 b Fj(data)9 b(points,)f(to)0 2493 y(generate)k(any)f(number)g(of)g
(synthetic)f(data)i(sets)g Fw(D)756 2478 y Ft(S)755 2506 y
Fs(\(1\))799 2493 y Fv(;)7 b Fw(D)851 2478 y Ft(S)850 2506
y Fs(\(2\))894 2493 y Fv(;)g(:)g(:)g(:)e Fj(,)12 b(also)f(with)f
Fv(N)16 b Fj(data)c(points.)0 2547 y(The)g(procedure)f(is)g(simply)g(to)g
(draw)g Fv(N)16 b Fj(data)c(points)e(at)h(a)h(time)f Fg(with)f(r)n
(eplacement)i Fj(from)f(the)p eop
%%Page: 692 4
bop 0 50 a Fj(692)422 b Fk(Chapter)10 b(15.)52 b(Modeling)10
b(of)g(Data)p 0 68 1395 2 v 0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore

@endspecial 46 x Fj(set)16 b Fw(D)95 174 y Ft(S)94 202 y Fs(\(0\))138
189 y Fj(.)32 b(Because)17 b(of)e(the)g(replacement,)k(you)c(do)g(not)g
(simply)f(get)i(back)g(your)f(original)0 239 y(data)e(set)g(each)h(time.)23
b(Y)l(ou)13 b(get)f(sets)i(in)e(which)g(a)i(random)e(fraction)h(of)f(the)h
(original)e(points,)0 288 y(typically)h Fw(\030)j Fu(1)p Fv(=e)f
Fw(\031)h Fu(37\045)p Fj(,)f(are)h(replaced)f(by)f Fg(duplicated)f
Fj(original)g(points.)24 b(Now)m(,)15 b(exactly)0 338 y(as)i(in)e(the)h
(previous)g(discussion,)h(you)e(subject)h(these)h(data)f(sets)h(to)e(the)h
(same)i(estimation)0 388 y(procedure)12 b(as)h(was)g(performed)f(on)g(the)g
(actual)g(data,)i(giving)c(a)j(set)f(of)g(simulated)g(measured)0
438 y(parameters)g Fh(a)213 423 y Ft(S)213 451 y Fs(\(1\))258
438 y Fv(;)7 b Fh(a)297 423 y Ft(S)297 451 y Fs(\(2\))342 438
y Fv(;)g(:)g(:)g(:)e Fj(.)16 b(These)11 b(will)f(be)g(distributed)f(around)g
Fh(a)1011 445 y Fs(\(0\))1066 438 y Fj(in)h(close)h(to)f(the)g(same)0
488 y(way)17 b(that)e Fh(a)185 495 y Fs(\(0\))246 488 y Fj(is)h(distributed)f
(around)g Fh(a)637 494 y Fs(true)698 488 y Fj(.)83 537 y(Sounds)9
b(like)g(getting)e(something)i(for)g(nothing,)f(doesn')o(t)h(it?)14
b(In)9 b(fact,)i(it)d(has)i(taken)f(more)0 587 y(than)g(a)h(decade)h(for)f
(the)f(bootstrap)f(method)h(to)h(become)g(accepted)h(by)f(statisticians.)j
(By)d(now)m(,)0 637 y(however)n(,)f(enough)e(theorems)g(have)h(been)g(proved)
f(to)g(render)g(the)h(bootstrap)e(reputable)h(\(see)1356 633
y Fc([2)r(])0 687 y Fj(for)h(references\).)16 b(The)10 b(basic)f(idea)g
(behind)f(the)g(bootstrap)f(is)i(that)f(the)g(actual)h(data)g(set,)h(viewed)0
737 y(as)j(a)f(probability)e(distributio)o(n)f(consisting)i(of)g(delta)h
(functions)f(at)h(the)g(measured)h(values,)g(is)0 786 y(in)c(most)g(cases)i
(the)e(best)h(\320)f(or)g(only)f(\320)h(available)h(estimator)f(of)g(the)g
(underlying)f(probability)0 836 y(distribution)o(.)20 b(It)12
b(takes)h(courage,)h(but)e(one)g(can)i(often)e(simply)f(use)i
Fg(that)f Fj(distributio)o(n)e(as)j(the)0 886 y(basis)k(for)g(Monte)g(Carlo)g
(simulations.)83 936 y(W)m(atch)e(out)g(for)g(cases)i(where)f(the)f
(bootstrap')n(s)e(\252iid\272)i(assumption)g(is)g(violated.)29
b(For)0 986 y(example,)11 b(if)e(you)f(have)i(made)h(measurements)g(at)e
(evenly)g(spaced)i(intervals)d(of)h(some)h(control)0 1036 y(variable,)e(then)
f(you)f(can)i Fg(usually)e Fj(get)h(away)g(with)f(pretending)g(that)h(these)g
(are)h(\252iid,\272)g(uniformly)0 1085 y(distributed)14 b(over)i(the)f
(measured)j(range.)32 b(However)n(,)19 b(some)e(estimators)e(of)h
Fh(a)g Fj(\(e.g.,)j(ones)0 1135 y(involving)7 b(Fourier)j(methods\))g(might)f
(be)h(particularly)f(sensitive)g(to)h(all)g(the)g(points)e(on)i(a)h(grid)0
1185 y(being)f(present.)16 b(In)10 b(that)f(case,)k(the)d(bootstrap)f(is)h
(going)g(to)f(give)h(a)h(wrong)f(distribution)o(.)j(Also)0
1235 y(watch)d(out)f(for)g(estimators)h(that)f(look)g(at)h(anything)e(like)h
(small-scale)i(clumpiness)f(within)e(the)0 1285 y Fv(N)20 b
Fj(data)c(points,)f(or)g(estimators)g(that)f(sort)h(the)g(data)g(and)h(look)e
(at)h(sequential)g(dif)o(ferences.)0 1334 y(Obviously)8 b(the)j(bootstrap)e
(will)g(fail)h(on)g(these,)h(too.)k(\(The)c(theorems)f(justifying)e(the)i
(method)0 1384 y(are)f(still)e(true,)h(but)g(some)g(of)g(their)g(technical)g
(assumptions)f(are)i(violated)e(by)h(these)h(examples.\))83
1434 y(For)16 b(a)h(lar)o(ge)g(class)h(of)e(problems,)i(however)n(,)h(the)d
(bootstrap)f(does)i(yield)f(easy)m(,)j Fg(very)0 1484 y(quick)p
Fj(,)13 b(Monte)e(Carlo)g(estimates)h(of)g(the)g(errors)f(in)h(an)g
(estimated)g(parameter)h(set.)0 1570 y Ff(Con\256dence)i(Limits)83
1651 y Fj(Rather)21 b(than)g(present)h(all)f(details)g(of)g(the)g
(probability)e(distribution)f(of)j(errors)g(in)0 1700 y(parameter)c
(estimation,)g(it)e(is)h(common)g(practice)h(to)e(summarize)i(the)f
(distribution)d(in)i(the)0 1750 y(form)h(of)g Fg(con\256dence)f(limits)p
Fj(.)32 b(The)18 b(full)d(probability)e(distribution)g(is)k(a)g(function)e
(de\256ned)0 1800 y(on)e(the)h Fv(M)5 b Fj(-dimensional)12
b(space)j(of)e(parameters)i Fh(a)p Fj(.)25 b(A)14 b Fg(con\256dence)f(r)n
(egion)g Fj(\(or)g Fg(con\256dence)0 1850 y(interval)p Fj(\))c(is)g(just)g(a)
h(region)e(of)i(that)f Fv(M)c Fj(-dimensional)j(space)j(\(hopefully)c(a)j
(small)g(region\))f(that)0 1900 y(contains)k(a)g(certain)h(\(hopefully)d(lar)
o(ge\))i(percentage)h(of)f(the)g(total)f(probability)f(distribution)o(.)0
1949 y(Y)l(ou)f(point)f(to)h(a)i(con\256dence)f(region)f(and)h(say)m(,)h
(e.g.,)g(\252there)f(is)g(a)g(99)f(percent)h(chance)h(that)e(the)0
1999 y(true)h(parameter)i(values)f(fall)f(within)f(this)h(region)g(around)g
(the)h(measured)h(value.\272)83 2049 y(It)21 b(is)f(worth)g(emphasizing)h
(that)g(you,)i(the)e(experimenter)n(,)k(get)c(to)f(pick)h(both)f(the)0
2099 y Fg(con\256dence)11 b(level)h Fj(\(99)e(percent)h(in)g(the)g(above)g
(example\),)h(and)f(the)g(shape)g(of)g(the)g(con\256dence)0
2149 y(region.)17 b(The)12 b(only)e(requirement)h(is)g(that)f(your)h(region)f
(does)h(include)g(the)g(stated)g(percentage)0 2199 y(of)17
b(probability)m(.)34 b(Certain)16 b(percentages)j(are,)h(however)n(,)g
(customary)d(in)f(scienti\256c)i(usage:)0 2248 y(68.3)10 b(percent)g(\(the)g
(lowest)g(con\256dence)h(worthy)e(of)h(quoting\),)e(90)i(percent,)h(95.4)e
(percent,)i(99)0 2298 y(percent,)e(and)f(99.73)g(percent.)14
b(Higher)8 b(con\256dence)h(levels)f(are)g(conventionally)e(\252ninety-nine)0
2348 y(point)14 b(nine)g Fv(:)7 b(:)g(:)14 b Fj(nine.\272)30
b(As)15 b(for)f(shape,)k(obviously)13 b(you)h(want)h(a)h(region)e(that)g(is)h
(compact)0 2398 y(and)g(reasonably)f(centered)i(on)e(your)g(measurement)i
Fh(a)828 2405 y Fs(\(0\))873 2398 y Fj(,)g(since)f(the)g(whole)f(purpose)g
(of)g(a)0 2448 y(con\256dence)f(limit)d(is)i(to)f(inspire)g(con\256dence)i
(in)e(that)h(measured)h(value.)20 b(In)11 b(one)h(dimension,)0
2497 y(the)h(convention)g(is)g(to)g(use)h(a)g(line)f(segment)h(centered)g(on)
g(the)f(measured)i(value;)g(in)e(higher)0 2547 y(dimensions,)h(ellipses)g(or)
f(ellipsoids)f(are)j(most)e(frequently)g(used.)p eop
%%Page: 693 5
bop 178 50 a Fk(15.6)10 b(Con\256dence)f(Limits)i(on)f(Estimated)g(Model)g
(Parameters)220 b Fj(693)p 0 68 1395 2 v 0 143 a @beginspecial
@setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial -21 1376 a @beginspecial 142 @llx
314 @lly 487 @urx 609 @ury 3450 @rwi @setspecial
%%BeginDocument: epsf/fig15x6x3.ps
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
/TX {pop} def
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def	% - cf flatness
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
[/_Symbol/Symbol 0 0 0 TZ
[/_Times-Italic/Times-Italic 0 0 1 TZ
[/_Times-Roman/Times-Roman 0 0 1 TZ
0 A
u
0 O
0.8 g
0 R
0 G
0 i 0 J 0 j 2 w 4 M []0 d
0 D
272.035 432.4061 m
321.9888 475.0219 357.0517 509.8803 350.2732 518.3179 c
344.8548 525.0622 304.5694 495.3201 254.6156 452.7043 c
204.6618 410.0886 169.5855 376.3442 175.6768 369.5949 c
181.4359 363.2138 222.0811 389.7903 272.035 432.4061 c
b
1 w
263.3253 442.9055 m
F
U
0 R
0 G
214.1407 549.784 m
214.1407 348.0153 l
S
179.1114 484.6295 m
383.6825 484.6295 l
S
0.5 w
230.2542 593.9208 m
230.2542 316.4889 l
S
144.4325 416.8478 m
421.8644 416.8478 l
S
1 w
162.2974 399.158 m
383.6825 399.158 l
S
0.5 w
216.7484 529.467 m
326.7155 529.467 327.0658 529.467 v
S
368.6199 482.721 m
368.6199 446.875 l
S
368.6199 437.875 m
368.6199 401.0142 l
S
1.5 w
230.4293 416.8478 m
261.3427 442.5068 l
S
0.5 w
241.6773 423.4372 m
241.4188 409.8003 252.2077 378.1644 285.9508 371.1346 c
S
353.1489 518.0716 m
363.0544 524.1486 380.2813 528.5411 387.1854 528.4161 c
S
1 w
329.3871 549.784 m
329.3871 348.0153 l
S
u
0 O
0 g
243.8705 460.6796 m
244.4509 460.6796 244.9214 461.15 244.9214 461.7304 c
244.9214 462.3107 244.4509 462.7812 243.8705 462.7812 c
243.2902 462.7812 242.8197 462.3107 242.8197 461.7304 c
242.8197 461.15 243.2902 460.6796 243.8705 460.6796 c
f
243.8705 461.7304 m
F
U
u
242.119 453.3234 m
242.6994 453.3234 243.1699 453.7938 243.1699 454.3742 c
243.1699 454.9546 242.6994 455.4251 242.119 455.4251 c
241.5387 455.4251 241.0682 454.9546 241.0682 454.3742 c
241.0682 453.7938 241.5387 453.3234 242.119 453.3234 c
f
242.119 454.3742 m
F
U
u
236.3392 455.4252 m
236.9196 455.4252 237.3901 455.8956 237.3901 456.476 c
237.3901 457.0563 236.9196 457.5268 236.3392 457.5268 c
235.7588 457.5268 235.2884 457.0563 235.2884 456.476 c
235.2884 455.8956 235.7588 455.4252 236.3392 455.4252 c
f
236.3392 456.476 m
F
U
u
238.9664 446.4927 m
239.5468 446.4927 240.0173 446.9631 240.0173 447.5435 c
240.0173 448.1238 239.5468 448.5944 238.9664 448.5944 c
238.386 448.5944 237.9156 448.1238 237.9156 447.5435 c
237.9156 446.9631 238.386 446.4927 238.9664 446.4927 c
f
238.9664 447.5435 m
F
U
u
247.7237 454.024 m
248.3041 454.024 248.7746 454.4944 248.7746 455.0748 c
248.7746 455.6552 248.3041 456.1257 247.7237 456.1257 c
247.1434 456.1257 246.6729 455.6552 246.6729 455.0748 c
246.6729 454.4944 247.1434 454.024 247.7237 454.024 c
f
247.7237 455.0748 m
F
U
u
250.8764 459.8038 m
251.4567 459.8038 251.9273 460.2743 251.9273 460.8546 c
251.9273 461.435 251.4567 461.9055 250.8764 461.9055 c
250.296 461.9055 249.8256 461.435 249.8256 460.8546 c
249.8256 460.2743 250.296 459.8038 250.8764 459.8038 c
f
250.8764 460.8546 m
F
U
u
246.4977 468.0357 m
247.0781 468.0357 247.5486 468.5061 247.5486 469.0865 c
247.5486 469.6668 247.0781 470.1374 246.4977 470.1374 c
245.9173 470.1374 245.4469 469.6668 245.4469 469.0865 c
245.4469 468.5061 245.9173 468.0357 246.4977 468.0357 c
f
246.4977 469.0865 m
F
U
u
253.3284 474.1658 m
253.9088 474.1658 254.3793 474.6363 254.3793 475.2166 c
254.3793 475.797 253.9088 476.2675 253.3284 476.2675 c
252.7481 476.2675 252.2776 475.797 252.2776 475.2166 c
252.2776 474.6363 252.7481 474.1658 253.3284 474.1658 c
f
253.3284 475.2166 m
F
U
u
256.6562 467.6854 m
257.2366 467.6854 257.7071 468.1559 257.7071 468.7362 c
257.7071 469.3166 257.2366 469.7871 256.6562 469.7871 c
256.0758 469.7871 255.6054 469.3166 255.6054 468.7362 c
255.6054 468.1559 256.0758 467.6854 256.6562 467.6854 c
f
256.6562 468.7362 m
F
U
u
259.1083 460.5044 m
259.6886 460.5044 260.1591 460.9748 260.1591 461.5552 c
260.1591 462.1356 259.6886 462.6061 259.1083 462.6061 c
258.5279 462.6061 258.0574 462.1356 258.0574 461.5552 c
258.0574 460.9748 258.5279 460.5044 259.1083 460.5044 c
f
259.1083 461.5552 m
F
U
u
265.2384 466.6345 m
265.8187 466.6345 266.2893 467.105 266.2893 467.6853 c
266.2893 468.2657 265.8187 468.7362 265.2384 468.7362 c
264.658 468.7362 264.1876 468.2657 264.1876 467.6853 c
264.1876 467.105 264.658 466.6345 265.2384 466.6345 c
f
265.2384 467.6853 m
F
U
u
262.0857 474.8664 m
262.6661 474.8664 263.1366 475.3368 263.1366 475.9172 c
263.1366 476.4976 262.6661 476.9681 262.0857 476.9681 c
261.5054 476.9681 261.0349 476.4976 261.0349 475.9172 c
261.0349 475.3368 261.5054 474.8664 262.0857 474.8664 c
f
262.0857 475.9172 m
F
U
u
271.0182 473.9907 m
271.5986 473.9907 272.0691 474.4611 272.0691 475.0415 c
272.0691 475.6218 271.5986 476.0924 271.0182 476.0924 c
270.4378 476.0924 269.9674 475.6218 269.9674 475.0415 c
269.9674 474.4611 270.4378 473.9907 271.0182 473.9907 c
f
271.0182 475.0415 m
F
U
u
276.9732 478.0191 m
277.5535 478.0191 278.0241 478.4895 278.0241 479.0699 c
278.0241 479.6502 277.5535 480.1207 276.9732 480.1207 c
276.3928 480.1207 275.9224 479.6502 275.9224 479.0699 c
275.9224 478.4895 276.3928 478.0191 276.9732 478.0191 c
f
276.9732 479.0699 m
F
U
u
266.6395 457.5269 m
267.2199 457.5269 267.6904 457.9974 267.6904 458.5777 c
267.6904 459.1581 267.2199 459.6286 266.6395 459.6286 c
266.0592 459.6286 265.5887 459.1581 265.5887 458.5777 c
265.5887 457.9974 266.0592 457.5269 266.6395 457.5269 c
f
266.6395 458.5777 m
F
U
u
266.6395 453.4985 m
267.2199 453.4985 267.6904 453.969 267.6904 454.5493 c
267.6904 455.1297 267.2199 455.6002 266.6395 455.6002 c
266.0592 455.6002 265.5887 455.1297 265.5887 454.5493 c
265.5887 453.969 266.0592 453.4985 266.6395 453.4985 c
f
266.6395 454.5493 m
F
U
u
259.8088 453.1483 m
260.3892 453.1483 260.8597 453.6187 260.8597 454.199 c
260.8597 454.7794 260.3892 455.2499 259.8088 455.2499 c
259.2285 455.2499 258.7581 454.7794 258.7581 454.199 c
258.7581 453.6187 259.2285 453.1483 259.8088 453.1483 c
f
259.8088 454.199 m
F
U
u
263.3118 455.7755 m
263.8921 455.7755 264.3626 456.2459 264.3626 456.8262 c
264.3626 457.4066 263.8921 457.8771 263.3118 457.8771 c
262.7314 457.8771 262.261 457.4066 262.261 456.8262 c
262.261 456.2459 262.7314 455.7755 263.3118 455.7755 c
f
263.3118 456.8262 m
F
U
u
262.6112 450.3459 m
263.1915 450.3459 263.6621 450.8164 263.6621 451.3967 c
263.6621 451.9771 263.1915 452.4476 262.6112 452.4476 c
262.0308 452.4476 261.5604 451.9771 261.5604 451.3967 c
261.5604 450.8164 262.0308 450.3459 262.6112 450.3459 c
f
262.6112 451.3967 m
F
U
u
267.5153 449.9956 m
268.0956 449.9956 268.5662 450.466 268.5662 451.0464 c
268.5662 451.6268 268.0956 452.0973 267.5153 452.0973 c
266.9349 452.0973 266.4645 451.6268 266.4645 451.0464 c
266.4645 450.466 266.9349 449.9956 267.5153 449.9956 c
f
267.5153 451.0464 m
F
U
u
256.4811 449.9956 m
257.0614 449.9956 257.5319 450.466 257.5319 451.0464 c
257.5319 451.6268 257.0614 452.0973 256.4811 452.0973 c
255.9007 452.0973 255.4302 451.6268 255.4302 451.0464 c
255.4302 450.466 255.9007 449.9956 256.4811 449.9956 c
f
256.4811 451.0464 m
F
U
u
251.9273 446.6678 m
252.5076 446.6678 252.9781 447.1383 252.9781 447.7187 c
252.9781 448.299 252.5076 448.7695 251.9273 448.7695 c
251.3469 448.7695 250.8765 448.299 250.8765 447.7187 c
250.8765 447.1383 251.3469 446.6678 251.9273 446.6678 c
f
251.9273 447.7187 m
F
U
u
254.3793 443.5152 m
254.9597 443.5152 255.4302 443.9856 255.4302 444.566 c
255.4302 445.1463 254.9597 445.6169 254.3793 445.6169 c
253.7989 445.6169 253.3285 445.1463 253.3285 444.566 c
253.3285 443.9856 253.7989 443.5152 254.3793 443.5152 c
f
254.3793 444.566 m
F
U
u
258.5828 445.7921 m
259.1632 445.7921 259.6337 446.2625 259.6337 446.8429 c
259.6337 447.4233 259.1632 447.8938 258.5828 447.8938 c
258.0024 447.8938 257.532 447.4233 257.532 446.8429 c
257.532 446.2625 258.0024 445.7921 258.5828 445.7921 c
f
258.5828 446.8429 m
F
U
u
253.8539 439.8371 m
254.4342 439.8371 254.9048 440.3076 254.9048 440.8879 c
254.9048 441.4683 254.4342 441.9388 253.8539 441.9388 c
253.2735 441.9388 252.8031 441.4683 252.8031 440.8879 c
252.8031 440.3076 253.2735 439.8371 253.8539 439.8371 c
f
253.8539 440.8879 m
F
U
u
249.4752 438.436 m
250.0556 438.436 250.5261 438.9064 250.5261 439.4868 c
250.5261 440.0671 250.0556 440.5377 249.4752 440.5377 c
248.8948 440.5377 248.4244 440.0671 248.4244 439.4868 c
248.4244 438.9064 248.8948 438.436 249.4752 438.436 c
f
249.4752 439.4868 m
F
U
u
248.7746 443.8655 m
249.355 443.8655 249.8255 444.3359 249.8255 444.9163 c
249.8255 445.4967 249.355 445.9672 248.7746 445.9672 c
248.1943 445.9672 247.7238 445.4967 247.7238 444.9163 c
247.7238 444.3359 248.1943 443.8655 248.7746 443.8655 c
f
248.7746 444.9163 m
F
U
u
246.1474 440.1874 m
246.7278 440.1874 247.1983 440.6579 247.1983 441.2382 c
247.1983 441.8186 246.7278 442.2891 246.1474 442.2891 c
245.5671 442.2891 245.0966 441.8186 245.0966 441.2382 c
245.0966 440.6579 245.5671 440.1874 246.1474 440.1874 c
f
246.1474 441.2382 m
F
U
u
242.119 438.6111 m
242.6994 438.6111 243.1699 439.0815 243.1699 439.6619 c
243.1699 440.2423 242.6994 440.7128 242.119 440.7128 c
241.5387 440.7128 241.0682 440.2423 241.0682 439.6619 c
241.0682 439.0815 241.5387 438.6111 242.119 438.6111 c
f
242.119 439.6619 m
F
U
u
240.1924 434.0573 m
240.7728 434.0573 241.2433 434.5277 241.2433 435.1081 c
241.2433 435.6885 240.7728 436.159 240.1924 436.159 c
239.6121 436.159 239.1416 435.6885 239.1416 435.1081 c
239.1416 434.5277 239.6121 434.0573 240.1924 434.0573 c
f
240.1924 435.1081 m
F
U
u
235.8138 432.8313 m
236.3941 432.8313 236.8647 433.3017 236.8647 433.8821 c
236.8647 434.4624 236.3941 434.933 235.8138 434.933 c
235.2334 434.933 234.763 434.4624 234.763 433.8821 c
234.763 433.3017 235.2334 432.8313 235.8138 432.8313 c
f
235.8138 433.8821 m
F
U
u
239.4919 429.5035 m
240.0722 429.5035 240.5427 429.9739 240.5427 430.5543 c
240.5427 431.1347 240.0722 431.6052 239.4919 431.6052 c
238.9115 431.6052 238.4411 431.1347 238.4411 430.5543 c
238.4411 429.9739 238.9115 429.5035 239.4919 429.5035 c
f
239.4919 430.5543 m
F
U
u
244.5711 433.1816 m
245.1514 433.1816 245.622 433.652 245.622 434.2324 c
245.622 434.8127 245.1514 435.2832 244.5711 435.2832 c
243.9907 435.2832 243.5203 434.8127 243.5203 434.2324 c
243.5203 433.652 243.9907 433.1816 244.5711 433.1816 c
f
244.5711 434.2324 m
F
U
u
234.7629 425.8254 m
235.3433 425.8254 235.8138 426.2959 235.8138 426.8762 c
235.8138 427.4566 235.3433 427.9271 234.7629 427.9271 c
234.1825 427.9271 233.7121 427.4566 233.7121 426.8762 c
233.7121 426.2959 234.1825 425.8254 234.7629 425.8254 c
f
234.7629 426.8762 m
F
U
u
231.4351 438.7863 m
232.0155 438.7863 232.486 439.2567 232.486 439.8371 c
232.486 440.4174 232.0155 440.8879 231.4351 440.8879 c
230.8547 440.8879 230.3843 440.4174 230.3843 439.8371 c
230.3843 439.2567 230.8547 438.7863 231.4351 438.7863 c
f
231.4351 439.8371 m
F
U
u
231.26 447.5436 m
231.8403 447.5436 232.3108 448.014 232.3108 448.5944 c
232.3108 449.1747 231.8403 449.6452 231.26 449.6452 c
230.6796 449.6452 230.2092 449.1747 230.2092 448.5944 c
230.2092 448.014 230.6796 447.5436 231.26 447.5436 c
f
231.26 448.5944 m
F
U
u
269.4419 461.5553 m
270.0222 461.5553 270.4928 462.0257 270.4928 462.6061 c
270.4928 463.1864 270.0222 463.657 269.4419 463.657 c
268.8615 463.657 268.3911 463.1864 268.3911 462.6061 c
268.3911 462.0257 268.8615 461.5553 269.4419 461.5553 c
f
269.4419 462.6061 m
F
U
u
273.9957 461.205 m
274.576 461.205 275.0466 461.6754 275.0466 462.2558 c
275.0466 462.8361 274.576 463.3067 273.9957 463.3067 c
273.4153 463.3067 272.9449 462.8361 272.9449 462.2558 c
272.9449 461.6754 273.4153 461.205 273.9957 461.205 c
f
273.9957 462.2558 m
F
U
u
271.1934 455.25 m
271.7737 455.25 272.2442 455.7204 272.2442 456.3008 c
272.2442 456.8812 271.7737 457.3517 271.1934 457.3517 c
270.613 457.3517 270.1426 456.8812 270.1426 456.3008 c
270.1426 455.7204 270.613 455.25 271.1934 455.25 c
f
271.1934 456.3008 m
F
U
u
274.6963 452.798 m
275.2766 452.798 275.7472 453.2684 275.7472 453.8488 c
275.7472 454.4291 275.2766 454.8997 274.6963 454.8997 c
274.1159 454.8997 273.6455 454.4291 273.6455 453.8488 c
273.6455 453.2684 274.1159 452.798 274.6963 452.798 c
f
274.6963 453.8488 m
F
U
u
276.6229 446.1424 m
277.2032 446.1424 277.6738 446.6128 277.6738 447.1932 c
277.6738 447.7736 277.2032 448.2441 276.6229 448.2441 c
276.0425 448.2441 275.5721 447.7736 275.5721 447.1932 c
275.5721 446.6128 276.0425 446.1424 276.6229 446.1424 c
f
276.6229 447.1932 m
F
U
u
272.4194 448.069 m
272.9997 448.069 273.4703 448.5395 273.4703 449.1198 c
273.4703 449.7002 272.9997 450.1707 272.4194 450.1707 c
271.839 450.1707 271.3686 449.7002 271.3686 449.1198 c
271.3686 448.5395 271.839 448.069 272.4194 448.069 c
f
272.4194 449.1198 m
F
U
u
272.9448 441.9389 m
273.5252 441.9389 273.9957 442.4093 273.9957 442.9897 c
273.9957 443.57 273.5252 444.0406 272.9448 444.0406 c
272.3645 444.0406 271.894 443.57 271.894 442.9897 c
271.894 442.4093 272.3645 441.9389 272.9448 441.9389 c
f
272.9448 442.9897 m
F
U
u
278.7246 454.5494 m
279.305 454.5494 279.7755 455.0199 279.7755 455.6002 c
279.7755 456.1806 279.305 456.6511 278.7246 456.6511 c
278.1443 456.6511 277.6739 456.1806 277.6739 455.6002 c
277.6739 455.0199 278.1443 454.5494 278.7246 454.5494 c
f
278.7246 455.6002 m
F
U
u
277.4986 459.1033 m
278.079 459.1033 278.5495 459.5737 278.5495 460.154 c
278.5495 460.7344 278.079 461.2049 277.4986 461.2049 c
276.9183 461.2049 276.4478 460.7344 276.4478 460.154 c
276.4478 459.5737 276.9183 459.1033 277.4986 459.1033 c
f
277.4986 460.154 m
F
U
u
279.4252 463.1316 m
280.0056 463.1316 280.4761 463.602 280.4761 464.1824 c
280.4761 464.7628 280.0056 465.2333 279.4252 465.2333 c
278.8449 465.2333 278.3744 464.7628 278.3744 464.1824 c
278.3744 463.602 278.8449 463.1316 279.4252 463.1316 c
f
279.4252 464.1824 m
F
U
u
275.572 465.9339 m
276.1524 465.9339 276.6229 466.4044 276.6229 466.9847 c
276.6229 467.5651 276.1524 468.0356 275.572 468.0356 c
274.9916 468.0356 274.5212 467.5651 274.5212 466.9847 c
274.5212 466.4044 274.9916 465.9339 275.572 465.9339 c
f
275.572 466.9847 m
F
U
u
280.1258 469.9623 m
280.7062 469.9623 281.1767 470.4328 281.1767 471.0131 c
281.1767 471.5935 280.7062 472.064 280.1258 472.064 c
279.5455 472.064 279.075 471.5935 279.075 471.0131 c
279.075 470.4328 279.5455 469.9623 280.1258 469.9623 c
f
280.1258 471.0131 m
F
U
u
284.8548 464.3576 m
285.4351 464.3576 285.9057 464.8281 285.9057 465.4084 c
285.9057 465.9888 285.4351 466.4593 284.8548 466.4593 c
284.2744 466.4593 283.804 465.9888 283.804 465.4084 c
283.804 464.8281 284.2744 464.3576 284.8548 464.3576 c
f
284.8548 465.4084 m
F
U
u
283.1033 456.476 m
283.6837 456.476 284.1542 456.9465 284.1542 457.5268 c
284.1542 458.1072 283.6837 458.5777 283.1033 458.5777 c
282.5229 458.5777 282.0525 458.1072 282.0525 457.5268 c
282.0525 456.9465 282.5229 456.476 283.1033 456.476 c
f
283.1033 457.5268 m
F
U
u
286.9565 458.2275 m
287.5369 458.2275 288.0074 458.6979 288.0074 459.2783 c
288.0074 459.8587 287.5369 460.3292 286.9565 460.3292 c
286.3762 460.3292 285.9057 459.8587 285.9057 459.2783 c
285.9057 458.6979 286.3762 458.2275 286.9565 458.2275 c
f
286.9565 459.2783 m
F
U
u
290.1092 453.1483 m
290.6895 453.1483 291.16 453.6187 291.16 454.199 c
291.16 454.7794 290.6895 455.2499 290.1092 455.2499 c
289.5288 455.2499 289.0584 454.7794 289.0584 454.199 c
289.0584 453.6187 289.5288 453.1483 290.1092 453.1483 c
f
290.1092 454.199 m
F
U
u
286.9565 446.6678 m
287.5369 446.6678 288.0074 447.1383 288.0074 447.7187 c
288.0074 448.299 287.5369 448.7695 286.9565 448.7695 c
286.3762 448.7695 285.9057 448.299 285.9057 447.7187 c
285.9057 447.1383 286.3762 446.6678 286.9565 446.6678 c
f
286.9565 447.7187 m
F
U
u
283.979 443.5152 m
284.5594 443.5152 285.0299 443.9856 285.0299 444.566 c
285.0299 445.1463 284.5594 445.6169 283.979 445.6169 c
283.3987 445.6169 282.9282 445.1463 282.9282 444.566 c
282.9282 443.9856 283.3987 443.5152 283.979 443.5152 c
f
283.979 444.566 m
F
U
u
279.4252 441.5886 m
280.0056 441.5886 280.4761 442.059 280.4761 442.6394 c
280.4761 443.2198 280.0056 443.6903 279.4252 443.6903 c
278.8449 443.6903 278.3744 443.2198 278.3744 442.6394 c
278.3744 442.059 278.8449 441.5886 279.4252 441.5886 c
f
279.4252 442.6394 m
F
U
u
281.527 448.9447 m
282.1073 448.9447 282.5779 449.4152 282.5779 449.9955 c
282.5779 450.5759 282.1073 451.0464 281.527 451.0464 c
280.9466 451.0464 280.4762 450.5759 280.4762 449.9955 c
280.4762 449.4152 280.9466 448.9447 281.527 448.9447 c
f
281.527 449.9955 m
F
U
u
266.9898 439.8371 m
267.5702 439.8371 268.0407 440.3076 268.0407 440.8879 c
268.0407 441.4683 267.5702 441.9388 266.9898 441.9388 c
266.4095 441.9388 265.939 441.4683 265.939 440.8879 c
265.939 440.3076 266.4095 439.8371 266.9898 439.8371 c
f
266.9898 440.8879 m
F
U
u
266.1141 434.4076 m
266.6945 434.4076 267.165 434.878 267.165 435.4584 c
267.165 436.0388 266.6945 436.5093 266.1141 436.5093 c
265.5337 436.5093 265.0633 436.0388 265.0633 435.4584 c
265.0633 434.878 265.5337 434.4076 266.1141 434.4076 c
f
266.1141 435.4584 m
F
U
u
265.939 428.8029 m
266.5193 428.8029 266.9898 429.2733 266.9898 429.8537 c
266.9898 430.434 266.5193 430.9046 265.939 430.9046 c
265.3586 430.9046 264.8881 430.434 264.8881 429.8537 c
264.8881 429.2733 265.3586 428.8029 265.939 428.8029 c
f
265.939 429.8537 m
F
U
u
273.12 435.6336 m
273.7003 435.6336 274.1708 436.104 274.1708 436.6844 c
274.1708 437.2648 273.7003 437.7353 273.12 437.7353 c
272.5396 437.7353 272.0692 437.2648 272.0692 436.6844 c
272.0692 436.104 272.5396 435.6336 273.12 435.6336 c
f
273.12 436.6844 m
F
U
u
261.3852 426.7012 m
261.9655 426.7012 262.436 427.1716 262.436 427.752 c
262.436 428.3323 261.9655 428.8028 261.3852 428.8028 c
260.8048 428.8028 260.3344 428.3323 260.3344 427.752 c
260.3344 427.1716 260.8048 426.7012 261.3852 426.7012 c
f
261.3852 427.752 m
F
U
u
262.436 438.7863 m
263.0164 438.7863 263.4869 439.2567 263.4869 439.8371 c
263.4869 440.4174 263.0164 440.8879 262.436 440.8879 c
261.8557 440.8879 261.3852 440.4174 261.3852 439.8371 c
261.3852 439.2567 261.8557 438.7863 262.436 438.7863 c
f
262.436 439.8371 m
F
U
u
261.3852 433.1816 m
261.9655 433.1816 262.436 433.652 262.436 434.2324 c
262.436 434.8127 261.9655 435.2832 261.3852 435.2832 c
260.8048 435.2832 260.3344 434.8127 260.3344 434.2324 c
260.3344 433.652 260.8048 433.1816 261.3852 433.1816 c
f
261.3852 434.2324 m
F
U
u
257.7946 436.5093 m
258.375 436.5093 258.8455 436.9798 258.8455 437.5601 c
258.8455 438.1405 258.375 438.611 257.7946 438.611 c
257.2143 438.611 256.7438 438.1405 256.7438 437.5601 c
256.7438 436.9798 257.2143 436.5093 257.7946 436.5093 c
f
257.7946 437.5601 m
F
U
u
254.642 433.2691 m
255.2224 433.2691 255.6929 433.7396 255.6929 434.3199 c
255.6929 434.9003 255.2224 435.3708 254.642 435.3708 c
254.0617 435.3708 253.5912 434.9003 253.5912 434.3199 c
253.5912 433.7396 254.0617 433.2691 254.642 433.2691 c
f
254.642 434.3199 m
F
U
u
257.0941 429.0656 m
257.6744 429.0656 258.1449 429.5361 258.1449 430.1164 c
258.1449 430.6968 257.6744 431.1673 257.0941 431.1673 c
256.5137 431.1673 256.0433 430.6968 256.0433 430.1164 c
256.0433 429.5361 256.5137 429.0656 257.0941 429.0656 c
f
257.0941 430.1164 m
F
U
u
252.5402 427.5769 m
253.1206 427.5769 253.5911 428.0473 253.5911 428.6277 c
253.5911 429.208 253.1206 429.6786 252.5402 429.6786 c
251.9599 429.6786 251.4895 429.208 251.4895 428.6277 c
251.4895 428.0473 251.9599 427.5769 252.5402 427.5769 c
f
252.5402 428.6277 m
F
U
u
257.2692 423.1982 m
257.8496 423.1982 258.3201 423.6687 258.3201 424.249 c
258.3201 424.8294 257.8496 425.2999 257.2692 425.2999 c
256.6889 425.2999 256.2184 424.8294 256.2184 424.249 c
256.2184 423.6687 256.6889 423.1982 257.2692 423.1982 c
f
257.2692 424.249 m
F
U
u
247.6362 426.3508 m
248.2165 426.3508 248.687 426.8213 248.687 427.4017 c
248.687 427.982 248.2165 428.4525 247.6362 428.4525 c
247.0558 428.4525 246.5853 427.982 246.5853 427.4017 c
246.5853 426.8213 247.0558 426.3508 247.6362 426.3508 c
f
247.6362 427.4017 m
F
U
u
250.5261 420.571 m
251.1064 420.571 251.577 421.0415 251.577 421.6218 c
251.577 422.2022 251.1064 422.6727 250.5261 422.6727 c
249.9457 422.6727 249.4753 422.2022 249.4753 421.6218 c
249.4753 421.0415 249.9457 420.571 250.5261 420.571 c
f
250.5261 421.6218 m
F
U
u
287.1317 469.612 m
287.712 469.612 288.1826 470.0825 288.1826 470.6628 c
288.1826 471.2432 287.712 471.7137 287.1317 471.7137 c
286.5513 471.7137 286.0809 471.2432 286.0809 470.6628 c
286.0809 470.0825 286.5513 469.612 287.1317 469.612 c
f
287.1317 470.6628 m
F
U
u
284.8548 473.8155 m
285.4351 473.8155 285.9057 474.286 285.9057 474.8663 c
285.9057 475.4467 285.4351 475.9172 284.8548 475.9172 c
284.2744 475.9172 283.804 475.4467 283.804 474.8663 c
283.804 474.286 284.2744 473.8155 284.8548 473.8155 c
f
284.8548 474.8663 m
F
U
u
290.4595 477.4936 m
291.0398 477.4936 291.5104 477.964 291.5104 478.5444 c
291.5104 479.1248 291.0398 479.5953 290.4595 479.5953 c
289.8791 479.5953 289.4087 479.1248 289.4087 478.5444 c
289.4087 477.964 289.8791 477.4936 290.4595 477.4936 c
f
290.4595 478.5444 m
F
U
u
296.4144 477.1433 m
296.9948 477.1433 297.4653 477.6138 297.4653 478.1941 c
297.4653 478.7745 296.9948 479.245 296.4144 479.245 c
295.8341 479.245 295.3636 478.7745 295.3636 478.1941 c
295.3636 477.6138 295.8341 477.1433 296.4144 477.1433 c
f
296.4144 478.1941 m
F
U
u
304.1209 474.5161 m
304.7012 474.5161 305.1718 474.9865 305.1718 475.5669 c
305.1718 476.1473 304.7012 476.6178 304.1209 476.6178 c
303.5405 476.6178 303.0701 476.1473 303.0701 475.5669 c
303.0701 474.9865 303.5405 474.5161 304.1209 474.5161 c
f
304.1209 475.5669 m
F
U
u
303.5954 466.6345 m
304.1758 466.6345 304.6463 467.105 304.6463 467.6853 c
304.6463 468.2657 304.1758 468.7362 303.5954 468.7362 c
303.0151 468.7362 302.5446 468.2657 302.5446 467.6853 c
302.5446 467.105 303.0151 466.6345 303.5954 466.6345 c
f
303.5954 467.6853 m
F
U
u
299.7422 463.8322 m
300.3226 463.8322 300.7931 464.3026 300.7931 464.883 c
300.7931 465.4633 300.3226 465.9339 299.7422 465.9339 c
299.1618 465.9339 298.6914 465.4633 298.6914 464.883 c
298.6914 464.3026 299.1618 463.8322 299.7422 463.8322 c
f
299.7422 464.883 m
F
U
u
293.7873 461.205 m
294.3676 461.205 294.8381 461.6754 294.8381 462.2558 c
294.8381 462.8361 294.3676 463.3067 293.7873 463.3067 c
293.2069 463.3067 292.7364 462.8361 292.7364 462.2558 c
292.7364 461.6754 293.2069 461.205 293.7873 461.205 c
f
293.7873 462.2558 m
F
U
u
289.934 465.9339 m
290.5144 465.9339 290.9849 466.4044 290.9849 466.9847 c
290.9849 467.5651 290.5144 468.0356 289.934 468.0356 c
289.3536 468.0356 288.8832 467.5651 288.8832 466.9847 c
288.8832 466.4044 289.3536 465.9339 289.934 465.9339 c
f
289.934 466.9847 m
F
U
u
294.3127 468.7363 m
294.893 468.7363 295.3636 469.2067 295.3636 469.7871 c
295.3636 470.3674 294.893 470.838 294.3127 470.838 c
293.7323 470.838 293.2619 470.3674 293.2619 469.7871 c
293.2619 469.2067 293.7323 468.7363 294.3127 468.7363 c
f
294.3127 469.7871 m
F
U
u
310.7764 469.9623 m
311.3568 469.9623 311.8273 470.4328 311.8273 471.0131 c
311.8273 471.5935 311.3568 472.064 310.7764 472.064 c
310.1961 472.064 309.7256 471.5935 309.7256 471.0131 c
309.7256 470.4328 310.1961 469.9623 310.7764 469.9623 c
f
310.7764 471.0131 m
F
U
u
298.341 456.6512 m
298.9214 456.6512 299.3919 457.1216 299.3919 457.702 c
299.3919 458.2823 298.9214 458.7529 298.341 458.7529 c
297.7607 458.7529 297.2902 458.2823 297.2902 457.702 c
297.2902 457.1216 297.7607 456.6512 298.341 456.6512 c
f
298.341 457.702 m
F
U
u
311.8273 478.7196 m
312.4077 478.7196 312.8782 479.1901 312.8782 479.7705 c
312.8782 480.3508 312.4077 480.8213 311.8273 480.8213 c
311.247 480.8213 310.7765 480.3508 310.7765 479.7705 c
310.7765 479.1901 311.247 478.7196 311.8273 478.7196 c
f
311.8273 479.7705 m
F
U
u
317.6072 475.9173 m
318.1875 475.9173 318.658 476.3877 318.658 476.9681 c
318.658 477.5485 318.1875 478.019 317.6072 478.019 c
317.0268 478.019 316.5564 477.5485 316.5564 476.9681 c
316.5564 476.3877 317.0268 475.9173 317.6072 475.9173 c
f
317.6072 476.9681 m
F
U
u
306.0475 485.2001 m
306.6278 485.2001 307.0984 485.6705 307.0984 486.2509 c
307.0984 486.8312 306.6278 487.3017 306.0475 487.3017 c
305.4671 487.3017 304.9967 486.8312 304.9967 486.2509 c
304.9967 485.6705 305.4671 485.2001 306.0475 485.2001 c
f
306.0475 486.2509 m
F
U
u
306.5729 490.8047 m
307.1533 490.8047 307.6238 491.2752 307.6238 491.8555 c
307.6238 492.4359 307.1533 492.9064 306.5729 492.9064 c
305.9926 492.9064 305.5221 492.4359 305.5221 491.8555 c
305.5221 491.2752 305.9926 490.8047 306.5729 490.8047 c
f
306.5729 491.8555 m
F
U
u
312.7031 489.7539 m
313.2834 489.7539 313.7539 490.2243 313.7539 490.8047 c
313.7539 491.385 313.2834 491.8555 312.7031 491.8555 c
312.1227 491.8555 311.6522 491.385 311.6522 490.8047 c
311.6522 490.2243 312.1227 489.7539 312.7031 489.7539 c
f
312.7031 490.8047 m
F
U
u
299.3919 485.3752 m
299.9723 485.3752 300.4428 485.8456 300.4428 486.426 c
300.4428 487.0063 299.9723 487.4769 299.3919 487.4769 c
298.8116 487.4769 298.3411 487.0063 298.3411 486.426 c
298.3411 485.8456 298.8116 485.3752 299.3919 485.3752 c
f
299.3919 486.426 m
F
U
u
317.9575 484.6746 m
318.5378 484.6746 319.0083 485.145 319.0083 485.7254 c
319.0083 486.3058 318.5378 486.7763 317.9575 486.7763 c
317.3771 486.7763 316.9066 486.3058 316.9066 485.7254 c
316.9066 485.145 317.3771 484.6746 317.9575 484.6746 c
f
317.9575 485.7254 m
F
U
u
324.613 485.7255 m
325.1934 485.7255 325.6639 486.1959 325.6639 486.7763 c
325.6639 487.3567 325.1934 487.8272 324.613 487.8272 c
324.0326 487.8272 323.5622 487.3567 323.5622 486.7763 c
323.5622 486.1959 324.0326 485.7255 324.613 485.7255 c
f
324.613 486.7763 m
F
U
u
314.1042 464.1825 m
314.6846 464.1825 315.1551 464.6529 315.1551 465.2333 c
315.1551 465.8136 314.6846 466.2842 314.1042 466.2842 c
313.5239 466.2842 313.0534 465.8136 313.0534 465.2333 c
313.0534 464.6529 313.5239 464.1825 314.1042 464.1825 c
f
314.1042 465.2333 m
F
U
u
323.2118 462.6062 m
323.7922 462.6062 324.2627 463.0766 324.2627 463.657 c
324.2627 464.2373 323.7922 464.7078 323.2118 464.7078 c
322.6315 464.7078 322.161 464.2373 322.161 463.657 c
322.161 463.0766 322.6315 462.6062 323.2118 462.6062 c
f
323.2118 463.657 m
F
U
u
322.5113 472.4144 m
323.0916 472.4144 323.5621 472.8848 323.5621 473.4652 c
323.5621 474.0455 323.0916 474.516 322.5113 474.516 c
321.9309 474.516 321.4604 474.0455 321.4604 473.4652 c
321.4604 472.8848 321.9309 472.4144 322.5113 472.4144 c
f
322.5113 473.4652 m
F
U
u
315.8557 454.5494 m
316.436 454.5494 316.9066 455.0199 316.9066 455.6002 c
316.9066 456.1806 316.436 456.6511 315.8557 456.6511 c
315.2753 456.6511 314.8049 456.1806 314.8049 455.6002 c
314.8049 455.0199 315.2753 454.5494 315.8557 454.5494 c
f
315.8557 455.6002 m
F
U
u
307.9741 457.7021 m
308.5545 457.7021 309.025 458.1725 309.025 458.7529 c
309.025 459.3332 308.5545 459.8038 307.9741 459.8038 c
307.3937 459.8038 306.9233 459.3332 306.9233 458.7529 c
306.9233 458.1725 307.3937 457.7021 307.9741 457.7021 c
f
307.9741 458.7529 m
F
U
u
309.7256 448.069 m
310.3059 448.069 310.7764 448.5395 310.7764 449.1198 c
310.7764 449.7002 310.3059 450.1707 309.7256 450.1707 c
309.1452 450.1707 308.6748 449.7002 308.6748 449.1198 c
308.6748 448.5395 309.1452 448.069 309.7256 448.069 c
f
309.7256 449.1198 m
F
U
u
300.2677 451.2216 m
300.848 451.2216 301.3185 451.6921 301.3185 452.2725 c
301.3185 452.8528 300.848 453.3233 300.2677 453.3233 c
299.6873 453.3233 299.2169 452.8528 299.2169 452.2725 c
299.2169 451.6921 299.6873 451.2216 300.2677 451.2216 c
f
300.2677 452.2725 m
F
U
u
294.3127 443.5152 m
294.893 443.5152 295.3636 443.9856 295.3636 444.566 c
295.3636 445.1463 294.893 445.6169 294.3127 445.6169 c
293.7323 445.6169 293.2619 445.1463 293.2619 444.566 c
293.2619 443.9856 293.7323 443.5152 294.3127 443.5152 c
f
294.3127 444.566 m
F
U
u
305.522 440.7129 m
306.1024 440.7129 306.5729 441.1833 306.5729 441.7637 c
306.5729 442.344 306.1024 442.8146 305.522 442.8146 c
304.9417 442.8146 304.4712 442.344 304.4712 441.7637 c
304.4712 441.1833 304.9417 440.7129 305.522 440.7129 c
f
305.522 441.7637 m
F
U
u
300.4428 433.0064 m
301.0232 433.0064 301.4937 433.4769 301.4937 434.0572 c
301.4937 434.6376 301.0232 435.1081 300.4428 435.1081 c
299.8624 435.1081 299.392 434.6376 299.392 434.0572 c
299.392 433.4769 299.8624 433.0064 300.4428 433.0064 c
f
300.4428 434.0572 m
F
U
u
290.6346 431.7804 m
291.215 431.7804 291.6855 432.2508 291.6855 432.8312 c
291.6855 433.4115 291.215 433.8821 290.6346 433.8821 c
290.0542 433.8821 289.5838 433.4115 289.5838 432.8312 c
289.5838 432.2508 290.0542 431.7804 290.6346 431.7804 c
f
290.6346 432.8312 m
F
U
u
289.5837 439.4868 m
290.1641 439.4868 290.6346 439.9573 290.6346 440.5377 c
290.6346 441.118 290.1641 441.5885 289.5837 441.5885 c
289.0034 441.5885 288.5329 441.118 288.5329 440.5377 c
288.5329 439.9573 289.0034 439.4868 289.5837 439.4868 c
f
289.5837 440.5377 m
F
U
u
282.9282 437.9105 m
283.5085 437.9105 283.979 438.3809 283.979 438.9613 c
283.979 439.5417 283.5085 440.0122 282.9282 440.0122 c
282.3478 440.0122 281.8774 439.5417 281.8774 438.9613 c
281.8774 438.3809 282.3478 437.9105 282.9282 437.9105 c
f
282.9282 438.9613 m
F
U
u
283.4536 430.9046 m
284.034 430.9046 284.5045 431.3751 284.5045 431.9555 c
284.5045 432.5358 284.034 433.0063 283.4536 433.0063 c
282.8732 433.0063 282.4028 432.5358 282.4028 431.9555 c
282.4028 431.3751 282.8732 430.9046 283.4536 430.9046 c
f
283.4536 431.9555 m
F
U
u
284.3293 425.3 m
284.9097 425.3 285.3802 425.7704 285.3802 426.3508 c
285.3802 426.9311 284.9097 427.4017 284.3293 427.4017 c
283.749 427.4017 283.2785 426.9311 283.2785 426.3508 c
283.2785 425.7704 283.749 425.3 284.3293 425.3 c
f
284.3293 426.3508 m
F
U
u
291.16 423.0231 m
291.7404 423.0231 292.2109 423.4935 292.2109 424.0739 c
292.2109 424.6542 291.7404 425.1248 291.16 425.1248 c
290.5797 425.1248 290.1092 424.6542 290.1092 424.0739 c
290.1092 423.4935 290.5797 423.0231 291.16 423.0231 c
f
291.16 424.0739 m
F
U
u
278.0241 426.0006 m
278.6044 426.0006 279.075 426.471 279.075 427.0514 c
279.075 427.6317 278.6044 428.1022 278.0241 428.1022 c
277.4437 428.1022 276.9733 427.6317 276.9733 427.0514 c
276.9733 426.471 277.4437 426.0006 278.0241 426.0006 c
f
278.0241 427.0514 m
F
U
u
273.4703 428.9781 m
274.0506 428.9781 274.5211 429.4485 274.5211 430.0288 c
274.5211 430.6092 274.0506 431.0797 273.4703 431.0797 c
272.8899 431.0797 272.4195 430.6092 272.4195 430.0288 c
272.4195 429.4485 272.8899 428.9781 273.4703 428.9781 c
f
273.4703 430.0288 m
F
U
u
278.0241 433.0064 m
278.6044 433.0064 279.075 433.4769 279.075 434.0572 c
279.075 434.6376 278.6044 435.1081 278.0241 435.1081 c
277.4437 435.1081 276.9733 434.6376 276.9733 434.0572 c
276.9733 433.4769 277.4437 433.0064 278.0241 433.0064 c
f
278.0241 434.0572 m
F
U
u
269.9673 426.3508 m
270.5477 426.3508 271.0182 426.8213 271.0182 427.4017 c
271.0182 427.982 270.5477 428.4525 269.9673 428.4525 c
269.387 428.4525 268.9165 427.982 268.9165 427.4017 c
268.9165 426.8213 269.387 426.3508 269.9673 426.3508 c
f
269.9673 427.4017 m
F
U
u
273.12 422.3225 m
273.7003 422.3225 274.1708 422.7929 274.1708 423.3733 c
274.1708 423.9537 273.7003 424.4242 273.12 424.4242 c
272.5396 424.4242 272.0692 423.9537 272.0692 423.3733 c
272.0692 422.7929 272.5396 422.3225 273.12 422.3225 c
f
273.12 423.3733 m
F
U
u
278.8998 418.2941 m
279.4801 418.2941 279.9507 418.7645 279.9507 419.3449 c
279.9507 419.9253 279.4801 420.3958 278.8998 420.3958 c
278.3194 420.3958 277.849 419.9253 277.849 419.3449 c
277.849 418.7645 278.3194 418.2941 278.8998 418.2941 c
f
278.8998 419.3449 m
F
U
u
269.2667 417.9438 m
269.8471 417.9438 270.3176 418.4143 270.3176 418.9947 c
270.3176 419.575 269.8471 420.0455 269.2667 420.0455 c
268.6864 420.0455 268.216 419.575 268.216 418.9947 c
268.216 418.4143 268.6864 417.9438 269.2667 417.9438 c
f
269.2667 418.9947 m
F
U
u
265.5887 421.9722 m
266.169 421.9722 266.6395 422.4426 266.6395 423.023 c
266.6395 423.6033 266.169 424.0739 265.5887 424.0739 c
265.0083 424.0739 264.5379 423.6033 264.5379 423.023 c
264.5379 422.4426 265.0083 421.9722 265.5887 421.9722 c
f
265.5887 423.023 m
F
U
u
260.5094 418.4693 m
261.0898 418.4693 261.5603 418.9397 261.5603 419.5201 c
261.5603 420.1004 261.0898 420.571 260.5094 420.571 c
259.9291 420.571 259.4586 420.1004 259.4586 419.5201 c
259.4586 418.9397 259.9291 418.4693 260.5094 418.4693 c
f
260.5094 419.5201 m
F
U
u
256.3059 413.7403 m
256.8863 413.7403 257.3568 414.2107 257.3568 414.7911 c
257.3568 415.3715 256.8863 415.842 256.3059 415.842 c
255.7255 415.842 255.2551 415.3715 255.2551 414.7911 c
255.2551 414.2107 255.7255 413.7403 256.3059 413.7403 c
f
256.3059 414.7911 m
F
U
u
252.4527 410.5877 m
253.033 410.5877 253.5036 411.0581 253.5036 411.6385 c
253.5036 412.2188 253.033 412.6893 252.4527 412.6893 c
251.8723 412.6893 251.4019 412.2188 251.4019 411.6385 c
251.4019 411.0581 251.8723 410.5877 252.4527 410.5877 c
f
252.4527 411.6385 m
F
U
u
258.5828 406.0339 m
259.1632 406.0339 259.6337 406.5043 259.6337 407.0847 c
259.6337 407.665 259.1632 408.1356 258.5828 408.1356 c
258.0024 408.1356 257.532 407.665 257.532 407.0847 c
257.532 406.5043 258.0024 406.0339 258.5828 406.0339 c
f
258.5828 407.0847 m
F
U
u
266.6395 409.7119 m
267.2199 409.7119 267.6904 410.1824 267.6904 410.7628 c
267.6904 411.3431 267.2199 411.8136 266.6395 411.8136 c
266.0592 411.8136 265.5887 411.3431 265.5887 410.7628 c
265.5887 410.1824 266.0592 409.7119 266.6395 409.7119 c
f
266.6395 410.7628 m
F
U
u
274.5211 410.7628 m
275.1015 410.7628 275.572 411.2333 275.572 411.8136 c
275.572 412.394 275.1015 412.8645 274.5211 412.8645 c
273.9408 412.8645 273.4703 412.394 273.4703 411.8136 c
273.4703 411.2333 273.9408 410.7628 274.5211 410.7628 c
f
274.5211 411.8136 m
F
U
u
238.9664 418.119 m
239.5468 418.119 240.0173 418.5894 240.0173 419.1698 c
240.0173 419.7501 239.5468 420.2207 238.9664 420.2207 c
238.386 420.2207 237.9156 419.7501 237.9156 419.1698 c
237.9156 418.5894 238.386 418.119 238.9664 418.119 c
f
238.9664 419.1698 m
F
U
u
240.0173 410.4125 m
240.5976 410.4125 241.0682 410.883 241.0682 411.4633 c
241.0682 412.0437 240.5976 412.5142 240.0173 412.5142 c
239.4369 412.5142 238.9665 412.0437 238.9665 411.4633 c
238.9665 410.883 239.4369 410.4125 240.0173 410.4125 c
f
240.0173 411.4633 m
F
U
u
232.3108 412.164 m
232.8912 412.164 233.3618 412.6344 233.3618 413.2148 c
233.3618 413.7951 232.8912 414.2657 232.3108 414.2657 c
231.7305 414.2657 231.2601 413.7951 231.2601 413.2148 c
231.2601 412.6344 231.7305 412.164 232.3108 412.164 c
f
232.3108 413.2148 m
F
U
u
234.9381 406.9096 m
235.5184 406.9096 235.9889 407.38 235.9889 407.9604 c
235.9889 408.5408 235.5184 409.0113 234.9381 409.0113 c
234.3577 409.0113 233.8872 408.5408 233.8872 407.9604 c
233.8872 407.38 234.3577 406.9096 234.9381 406.9096 c
f
234.9381 407.9604 m
F
U
u
235.4635 399.9038 m
236.0438 399.9038 236.5144 400.3742 236.5144 400.9546 c
236.5144 401.5349 236.0438 402.0054 235.4635 402.0054 c
234.8831 402.0054 234.4127 401.5349 234.4127 400.9546 c
234.4127 400.3742 234.8831 399.9038 235.4635 399.9038 c
f
235.4635 400.9546 m
F
U
u
242.6445 402.0055 m
243.2248 402.0055 243.6954 402.4759 243.6954 403.0563 c
243.6954 403.6367 243.2248 404.1072 242.6445 404.1072 c
242.0641 404.1072 241.5937 403.6367 241.5937 403.0563 c
241.5937 402.4759 242.0641 402.0055 242.6445 402.0055 c
f
242.6445 403.0563 m
F
U
u
244.396 395.1748 m
244.9763 395.1748 245.4468 395.6452 245.4468 396.2256 c
245.4468 396.8059 244.9763 397.2765 244.396 397.2765 c
243.8156 397.2765 243.3451 396.8059 243.3451 396.2256 c
243.3451 395.6452 243.8156 395.1748 244.396 395.1748 c
f
244.396 396.2256 m
F
U
u
249.4752 403.757 m
250.0556 403.757 250.5261 404.2274 250.5261 404.8078 c
250.5261 405.3881 250.0556 405.8587 249.4752 405.8587 c
248.8948 405.8587 248.4244 405.3881 248.4244 404.8078 c
248.4244 404.2274 248.8948 403.757 249.4752 403.757 c
f
249.4752 404.8078 m
F
U
u
226.3559 405.1581 m
226.9362 405.1581 227.4068 405.6286 227.4068 406.2089 c
227.4068 406.7893 226.9362 407.2598 226.3559 407.2598 c
225.7755 407.2598 225.3051 406.7893 225.3051 406.2089 c
225.3051 405.6286 225.7755 405.1581 226.3559 405.1581 c
f
226.3559 406.2089 m
F
U
u
231.26 401.4801 m
231.8403 401.4801 232.3108 401.9505 232.3108 402.5309 c
232.3108 403.1112 231.8403 403.5818 231.26 403.5818 c
230.6796 403.5818 230.2092 403.1112 230.2092 402.5309 c
230.2092 401.9505 230.6796 401.4801 231.26 401.4801 c
f
231.26 402.5309 m
F
U
u
226.7062 412.5143 m
227.2865 412.5143 227.757 412.9847 227.757 413.5651 c
227.757 414.1455 227.2865 414.616 226.7062 414.616 c
226.1258 414.616 225.6554 414.1455 225.6554 413.5651 c
225.6554 412.9847 226.1258 412.5143 226.7062 412.5143 c
f
226.7062 413.5651 m
F
U
u
221.9772 412.5143 m
222.5576 412.5143 223.0281 412.9847 223.0281 413.5651 c
223.0281 414.1455 222.5576 414.616 221.9772 414.616 c
221.3968 414.616 220.9264 414.1455 220.9264 413.5651 c
220.9264 412.9847 221.3968 412.5143 221.9772 412.5143 c
f
221.9772 413.5651 m
F
U
u
219.7003 407.435 m
220.2807 407.435 220.7512 407.9055 220.7512 408.4858 c
220.7512 409.0662 220.2807 409.5367 219.7003 409.5367 c
219.1199 409.5367 218.6495 409.0662 218.6495 408.4858 c
218.6495 407.9055 219.1199 407.435 219.7003 407.435 c
f
219.7003 408.4858 m
F
U
u
215.8471 410.7628 m
216.4274 410.7628 216.898 411.2333 216.898 411.8136 c
216.898 412.394 216.4274 412.8645 215.8471 412.8645 c
215.2667 412.8645 214.7963 412.394 214.7963 411.8136 c
214.7963 411.2333 215.2667 410.7628 215.8471 410.7628 c
f
215.8471 411.8136 m
F
U
u
216.5477 401.3049 m
217.128 401.3049 217.5986 401.7754 217.5986 402.3557 c
217.5986 402.9361 217.128 403.4066 216.5477 403.4066 c
215.9673 403.4066 215.4969 402.9361 215.4969 402.3557 c
215.4969 401.7754 215.9673 401.3049 216.5477 401.3049 c
f
216.5477 402.3557 m
F
U
u
222.3275 399.9038 m
222.9079 399.9038 223.3784 400.3742 223.3784 400.9546 c
223.3784 401.5349 222.9079 402.0054 222.3275 402.0054 c
221.7471 402.0054 221.2767 401.5349 221.2767 400.9546 c
221.2767 400.3742 221.7471 399.9038 222.3275 399.9038 c
f
222.3275 400.9546 m
F
U
u
225.1298 417.7687 m
225.7102 417.7687 226.1807 418.2391 226.1807 418.8195 c
226.1807 419.3998 225.7102 419.8704 225.1298 419.8704 c
224.5495 419.8704 224.0791 419.3998 224.0791 418.8195 c
224.0791 418.2391 224.5495 417.7687 225.1298 417.7687 c
f
225.1298 418.8195 m
F
U
u
225.8304 423.5485 m
226.4108 423.5485 226.8813 424.0189 226.8813 424.5993 c
226.8813 425.1797 226.4108 425.6502 225.8304 425.6502 c
225.2501 425.6502 224.7796 425.1797 224.7796 424.5993 c
224.7796 424.0189 225.2501 423.5485 225.8304 423.5485 c
f
225.8304 424.5993 m
F
U
u
218.6494 417.9438 m
219.2298 417.9438 219.7003 418.4143 219.7003 418.9947 c
219.7003 419.575 219.2298 420.0455 218.6494 420.0455 c
218.0691 420.0455 217.5986 419.575 217.5986 418.9947 c
217.5986 418.4143 218.0691 417.9438 218.6494 417.9438 c
f
218.6494 418.9947 m
F
U
u
217.0731 427.2266 m
217.6535 427.2266 218.124 427.697 218.124 428.2774 c
218.124 428.8577 217.6535 429.3283 217.0731 429.3283 c
216.4927 429.3283 216.0223 428.8577 216.0223 428.2774 c
216.0223 427.697 216.4927 427.2266 217.0731 427.2266 c
f
217.0731 428.2774 m
F
U
u
224.2541 434.2324 m
224.8345 434.2324 225.305 434.7029 225.305 435.2832 c
225.305 435.8636 224.8345 436.3341 224.2541 436.3341 c
223.6738 436.3341 223.2033 435.8636 223.2033 435.2832 c
223.2033 434.7029 223.6738 434.2324 224.2541 434.2324 c
f
224.2541 435.2832 m
F
U
u
217.7737 437.3851 m
218.3541 437.3851 218.8246 437.8555 218.8246 438.4359 c
218.8246 439.0162 218.3541 439.4868 217.7737 439.4868 c
217.1933 439.4868 216.7229 439.0162 216.7229 438.4359 c
216.7229 437.8555 217.1933 437.3851 217.7737 437.3851 c
f
217.7737 438.4359 m
F
U
u
225.305 441.9389 m
225.8853 441.9389 226.3559 442.4093 226.3559 442.9897 c
226.3559 443.57 225.8853 444.0406 225.305 444.0406 c
224.7246 444.0406 224.2542 443.57 224.2542 442.9897 c
224.2542 442.4093 224.7246 441.9389 225.305 441.9389 c
f
225.305 442.9897 m
F
U
u
208.6661 420.7462 m
209.2464 420.7462 209.717 421.2166 209.717 421.797 c
209.717 422.3773 209.2464 422.8479 208.6661 422.8479 c
208.0857 422.8479 207.6153 422.3773 207.6153 421.797 c
207.6153 421.2166 208.0857 420.7462 208.6661 420.7462 c
f
208.6661 421.797 m
F
U
u
200.7845 423.1982 m
201.3648 423.1982 201.8354 423.6687 201.8354 424.249 c
201.8354 424.8294 201.3648 425.2999 200.7845 425.2999 c
200.2041 425.2999 199.7337 424.8294 199.7337 424.249 c
199.7337 423.6687 200.2041 423.1982 200.7845 423.1982 c
f
200.7845 424.249 m
F
U
u
207.9655 432.3058 m
208.5458 432.3058 209.0164 432.7763 209.0164 433.3566 c
209.0164 433.937 208.5458 434.4075 207.9655 434.4075 c
207.3851 434.4075 206.9147 433.937 206.9147 433.3566 c
206.9147 432.7763 207.3851 432.3058 207.9655 432.3058 c
f
207.9655 433.3566 m
F
U
u
199.9088 411.1131 m
200.4891 411.1131 200.9596 411.5836 200.9596 412.1639 c
200.9596 412.7443 200.4891 413.2148 199.9088 413.2148 c
199.3284 413.2148 198.858 412.7443 198.858 412.1639 c
198.858 411.5836 199.3284 411.1131 199.9088 411.1131 c
f
199.9088 412.1639 m
F
U
u
194.3041 404.1073 m
194.8844 404.1073 195.355 404.5777 195.355 405.1581 c
195.355 405.7384 194.8844 406.2089 194.3041 406.2089 c
193.7237 406.2089 193.2533 405.7384 193.2533 405.1581 c
193.2533 404.5777 193.7237 404.1073 194.3041 404.1073 c
f
194.3041 405.1581 m
F
U
u
186.9479 404.2824 m
187.5283 404.2824 187.9988 404.7528 187.9988 405.3332 c
187.9988 405.9136 187.5283 406.3841 186.9479 406.3841 c
186.3676 406.3841 185.8971 405.9136 185.8971 405.3332 c
185.8971 404.7528 186.3676 404.2824 186.9479 404.2824 c
f
186.9479 405.3332 m
F
U
u
178.1906 402.0055 m
178.771 402.0055 179.2415 402.4759 179.2415 403.0563 c
179.2415 403.6367 178.771 404.1072 178.1906 404.1072 c
177.6102 404.1072 177.1398 403.6367 177.1398 403.0563 c
177.1398 402.4759 177.6102 402.0055 178.1906 402.0055 c
f
178.1906 403.0563 m
F
U
u
190.2757 412.164 m
190.8561 412.164 191.3266 412.6344 191.3266 413.2148 c
191.3266 413.7951 190.8561 414.2657 190.2757 414.2657 c
189.6953 414.2657 189.2249 413.7951 189.2249 413.2148 c
189.2249 412.6344 189.6953 412.164 190.2757 412.164 c
f
190.2757 413.2148 m
F
U
u
202.0105 400.254 m
202.5909 400.254 203.0614 400.7245 203.0614 401.3048 c
203.0614 401.8852 202.5909 402.3557 202.0105 402.3557 c
201.4302 402.3557 200.9597 401.8852 200.9597 401.3048 c
200.9597 400.7245 201.4302 400.254 202.0105 400.254 c
f
202.0105 401.3048 m
F
U
u
207.4401 404.1073 m
208.0204 404.1073 208.4909 404.5777 208.4909 405.1581 c
208.4909 405.7384 208.0204 406.2089 207.4401 406.2089 c
206.8597 406.2089 206.3892 405.7384 206.3892 405.1581 c
206.3892 404.5777 206.8597 404.1073 207.4401 404.1073 c
f
207.4401 405.1581 m
F
U
u
207.4401 394.4742 m
208.0204 394.4742 208.4909 394.9447 208.4909 395.525 c
208.4909 396.1054 208.0204 396.5759 207.4401 396.5759 c
206.8597 396.5759 206.3892 396.1054 206.3892 395.525 c
206.3892 394.9447 206.8597 394.4742 207.4401 394.4742 c
f
207.4401 395.525 m
F
U
u
216.7228 393.073 m
217.3032 393.073 217.7737 393.5435 217.7737 394.1238 c
217.7737 394.7042 217.3032 395.1747 216.7228 395.1747 c
216.1425 395.1747 215.672 394.7042 215.672 394.1238 c
215.672 393.5435 216.1425 393.073 216.7228 393.073 c
f
216.7228 394.1238 m
F
U
u
209.5418 386.7678 m
210.1222 386.7678 210.5927 387.2382 210.5927 387.8186 c
210.5927 388.3989 210.1222 388.8694 209.5418 388.8694 c
208.9615 388.8694 208.491 388.3989 208.491 387.8186 c
208.491 387.2382 208.9615 386.7678 209.5418 386.7678 c
f
209.5418 387.8186 m
F
U
u
200.7845 390.9713 m
201.3648 390.9713 201.8354 391.4417 201.8354 392.0221 c
201.8354 392.6024 201.3648 393.073 200.7845 393.073 c
200.2041 393.073 199.7337 392.6024 199.7337 392.0221 c
199.7337 391.4417 200.2041 390.9713 200.7845 390.9713 c
f
200.7845 392.0221 m
F
U
u
194.3041 391.1464 m
194.8844 391.1464 195.355 391.6169 195.355 392.1972 c
195.355 392.7776 194.8844 393.2481 194.3041 393.2481 c
193.7237 393.2481 193.2533 392.7776 193.2533 392.1972 c
193.2533 391.6169 193.7237 391.1464 194.3041 391.1464 c
f
194.3041 392.1972 m
F
U
u
186.9479 385.1914 m
187.5283 385.1914 187.9988 385.6619 187.9988 386.2423 c
187.9988 386.8226 187.5283 387.2931 186.9479 387.2931 c
186.3676 387.2931 185.8971 386.8226 185.8971 386.2423 c
185.8971 385.6619 186.3676 385.1914 186.9479 385.1914 c
f
186.9479 386.2423 m
F
U
u
191.852 380.6376 m
192.4324 380.6376 192.9029 381.1081 192.9029 381.6885 c
192.9029 382.2688 192.4324 382.7393 191.852 382.7393 c
191.2717 382.7393 190.8012 382.2688 190.8012 381.6885 c
190.8012 381.1081 191.2717 380.6376 191.852 380.6376 c
f
191.852 381.6885 m
F
U
u
188.174 373.9821 m
188.7543 373.9821 189.2248 374.4525 189.2248 375.0329 c
189.2248 375.6132 188.7543 376.0838 188.174 376.0838 c
187.5936 376.0838 187.1231 375.6132 187.1231 375.0329 c
187.1231 374.4525 187.5936 373.9821 188.174 373.9821 c
f
188.174 375.0329 m
F
U
u
182.219 378.8862 m
182.7993 378.8862 183.2699 379.3566 183.2699 379.937 c
183.2699 380.5173 182.7993 380.9878 182.219 380.9878 c
181.6386 380.9878 181.1682 380.5173 181.1682 379.937 c
181.1682 379.3566 181.6386 378.8862 182.219 378.8862 c
f
182.219 379.937 m
F
U
u
178.3658 372.5809 m
178.9461 372.5809 179.4166 373.0513 179.4166 373.6317 c
179.4166 374.2121 178.9461 374.6826 178.3658 374.6826 c
177.7854 374.6826 177.315 374.2121 177.315 373.6317 c
177.315 373.0513 177.7854 372.5809 178.3658 372.5809 c
f
178.3658 373.6317 m
F
U
u
201.4851 381.8637 m
202.0654 381.8637 202.536 382.3341 202.536 382.9145 c
202.536 383.4948 202.0654 383.9653 201.4851 383.9653 c
200.9047 383.9653 200.4343 383.4948 200.4343 382.9145 c
200.4343 382.3341 200.9047 381.8637 201.4851 381.8637 c
f
201.4851 382.9145 m
F
U
u
182.7444 393.4233 m
183.3248 393.4233 183.7953 393.8938 183.7953 394.4741 c
183.7953 395.0545 183.3248 395.525 182.7444 395.525 c
182.1641 395.525 181.6936 395.0545 181.6936 394.4741 c
181.6936 393.8938 182.1641 393.4233 182.7444 393.4233 c
f
182.7444 394.4741 m
F
U
u
177.6652 389.395 m
178.2455 389.395 178.7161 389.8654 178.7161 390.4458 c
178.7161 391.0261 178.2455 391.4967 177.6652 391.4967 c
177.0848 391.4967 176.6144 391.0261 176.6144 390.4458 c
176.6144 389.8654 177.0848 389.395 177.6652 389.395 c
f
177.6652 390.4458 m
F
U
u
171.3599 392.5476 m
171.9403 392.5476 172.4108 393.018 172.4108 393.5984 c
172.4108 394.1788 171.9403 394.6493 171.3599 394.6493 c
170.7795 394.6493 170.3091 394.1788 170.3091 393.5984 c
170.3091 393.018 170.7795 392.5476 171.3599 392.5476 c
f
171.3599 393.5984 m
F
U
u
170.6593 382.214 m
171.2397 382.214 171.7102 382.6844 171.7102 383.2648 c
171.7102 383.8451 171.2397 384.3157 170.6593 384.3157 c
170.079 384.3157 169.6085 383.8451 169.6085 383.2648 c
169.6085 382.6844 170.079 382.214 170.6593 382.214 c
f
170.6593 383.2648 m
F
U
u
165.7552 373.9821 m
166.3356 373.9821 166.8061 374.4525 166.8061 375.0329 c
166.8061 375.6132 166.3356 376.0838 165.7552 376.0838 c
165.1748 376.0838 164.7044 375.6132 164.7044 375.0329 c
164.7044 374.4525 165.1748 373.9821 165.7552 373.9821 c
f
165.7552 375.0329 m
F
U
u
162.2523 384.666 m
162.8326 384.666 163.3032 385.1364 163.3032 385.7168 c
163.3032 386.2972 162.8326 386.7677 162.2523 386.7677 c
161.6719 386.7677 161.2015 386.2972 161.2015 385.7168 c
161.2015 385.1364 161.6719 384.666 162.2523 384.666 c
f
162.2523 385.7168 m
F
U
u
156.1222 375.033 m
156.7025 375.033 157.1731 375.5034 157.1731 376.0838 c
157.1731 376.6641 156.7025 377.1346 156.1222 377.1346 c
155.5418 377.1346 155.0714 376.6641 155.0714 376.0838 c
155.0714 375.5034 155.5418 375.033 156.1222 375.033 c
f
156.1222 376.0838 m
F
U
u
157.3482 362.5976 m
157.9285 362.5976 158.3991 363.068 158.3991 363.6484 c
158.3991 364.2287 157.9285 364.6993 157.3482 364.6993 c
156.7678 364.6993 156.2974 364.2287 156.2974 363.6484 c
156.2974 363.068 156.7678 362.5976 157.3482 362.5976 c
f
157.3482 363.6484 m
F
U
u
164.0037 361.1964 m
164.5841 361.1964 165.0546 361.6668 165.0546 362.2472 c
165.0546 362.8275 164.5841 363.2981 164.0037 363.2981 c
163.4234 363.2981 162.9529 362.8275 162.9529 362.2472 c
162.9529 361.6668 163.4234 361.1964 164.0037 361.1964 c
f
164.0037 362.2472 m
F
U
u
172.5859 363.8236 m
173.1663 363.8236 173.6368 364.294 173.6368 364.8744 c
173.6368 365.4548 173.1663 365.9253 172.5859 365.9253 c
172.0055 365.9253 171.5351 365.4548 171.5351 364.8744 c
171.5351 364.294 172.0055 363.8236 172.5859 363.8236 c
f
172.5859 364.8744 m
F
U
u
168.9078 352.9645 m
169.4882 352.9645 169.9587 353.435 169.9587 354.0153 c
169.9587 354.5957 169.4882 355.0662 168.9078 355.0662 c
168.3275 355.0662 167.857 354.5957 167.857 354.0153 c
167.857 353.435 168.3275 352.9645 168.9078 352.9645 c
f
168.9078 354.0153 m
F
U
u
183.445 361.3715 m
184.0253 361.3715 184.4959 361.842 184.4959 362.4223 c
184.4959 363.0027 184.0253 363.4732 183.445 363.4732 c
182.8646 363.4732 182.3942 363.0027 182.3942 362.4223 c
182.3942 361.842 182.8646 361.3715 183.445 361.3715 c
f
183.445 362.4223 m
F
U
u
180.6427 350.6876 m
181.223 350.6876 181.6936 351.158 181.6936 351.7384 c
181.6936 352.3188 181.223 352.7893 180.6427 352.7893 c
180.0623 352.7893 179.5919 352.3188 179.5919 351.7384 c
179.5919 351.158 180.0623 350.6876 180.6427 350.6876 c
f
180.6427 351.7384 m
F
U
u
190.4509 352.2639 m
191.0312 352.2639 191.5017 352.7344 191.5017 353.3147 c
191.5017 353.8951 191.0312 354.3656 190.4509 354.3656 c
189.8705 354.3656 189.4001 353.8951 189.4001 353.3147 c
189.4001 352.7344 189.8705 352.2639 190.4509 352.2639 c
f
190.4509 353.3147 m
F
U
u
191.3266 365.9253 m
191.9069 365.9253 192.3775 366.3958 192.3775 366.9762 c
192.3775 367.5565 191.9069 368.027 191.3266 368.027 c
190.7462 368.027 190.2758 367.5565 190.2758 366.9762 c
190.2758 366.3958 190.7462 365.9253 191.3266 365.9253 c
f
191.3266 366.9762 m
F
U
u
199.5585 371.0046 m
200.1388 371.0046 200.6094 371.475 200.6094 372.0554 c
200.6094 372.6358 200.1388 373.1063 199.5585 373.1063 c
198.9781 373.1063 198.5077 372.6358 198.5077 372.0554 c
198.5077 371.475 198.9781 371.0046 199.5585 371.0046 c
f
199.5585 372.0554 m
F
U
u
208.4909 373.9821 m
209.0713 373.9821 209.5418 374.4525 209.5418 375.0329 c
209.5418 375.6132 209.0713 376.0838 208.4909 376.0838 c
207.9106 376.0838 207.4401 375.6132 207.4401 375.0329 c
207.4401 374.4525 207.9106 373.9821 208.4909 373.9821 c
f
208.4909 375.0329 m
F
U
u
201.6602 361.3715 m
202.2406 361.3715 202.7111 361.842 202.7111 362.4223 c
202.7111 363.0027 202.2406 363.4732 201.6602 363.4732 c
201.0799 363.4732 200.6094 363.0027 200.6094 362.4223 c
200.6094 361.842 201.0799 361.3715 201.6602 361.3715 c
f
201.6602 362.4223 m
F
U
u
217.7737 363.2981 m
218.3541 363.2981 218.8246 363.7686 218.8246 364.3489 c
218.8246 364.9293 218.3541 365.3998 217.7737 365.3998 c
217.1933 365.3998 216.7229 364.9293 216.7229 364.3489 c
216.7229 363.7686 217.1933 363.2981 217.7737 363.2981 c
f
217.7737 364.3489 m
F
U
u
217.5986 373.9821 m
218.1789 373.9821 218.6494 374.4525 218.6494 375.0329 c
218.6494 375.6132 218.1789 376.0838 217.5986 376.0838 c
217.0182 376.0838 216.5477 375.6132 216.5477 375.0329 c
216.5477 374.4525 217.0182 373.9821 217.5986 373.9821 c
f
217.5986 375.0329 m
F
U
u
216.1974 383.7903 m
216.7777 383.7903 217.2483 384.2607 217.2483 384.8411 c
217.2483 385.4214 216.7777 385.892 216.1974 385.892 c
215.617 385.892 215.1466 385.4214 215.1466 384.8411 c
215.1466 384.2607 215.617 383.7903 216.1974 383.7903 c
f
216.1974 384.8411 m
F
U
u
222.8529 382.7394 m
223.4333 382.7394 223.9038 383.2098 223.9038 383.7902 c
223.9038 384.3705 223.4333 384.8411 222.8529 384.8411 c
222.2726 384.8411 221.8022 384.3705 221.8022 383.7902 c
221.8022 383.2098 222.2726 382.7394 222.8529 382.7394 c
f
222.8529 383.7902 m
F
U
u
228.6328 391.4967 m
229.2131 391.4967 229.6836 391.9672 229.6836 392.5475 c
229.6836 393.1279 229.2131 393.5984 228.6328 393.5984 c
228.0524 393.5984 227.582 393.1279 227.582 392.5475 c
227.582 391.9672 228.0524 391.4967 228.6328 391.4967 c
f
228.6328 392.5475 m
F
U
u
232.6611 381.6885 m
233.2415 381.6885 233.712 382.1589 233.712 382.7393 c
233.712 383.3197 233.2415 383.7902 232.6611 383.7902 c
232.0808 383.7902 231.6103 383.3197 231.6103 382.7393 c
231.6103 382.1589 232.0808 381.6885 232.6611 381.6885 c
f
232.6611 382.7393 m
F
U
u
236.3392 388.3441 m
236.9196 388.3441 237.3901 388.8145 237.3901 389.3949 c
237.3901 389.9752 236.9196 390.4458 236.3392 390.4458 c
235.7588 390.4458 235.2884 389.9752 235.2884 389.3949 c
235.2884 388.8145 235.7588 388.3441 236.3392 388.3441 c
f
236.3392 389.3949 m
F
U
u
290.6346 485.9006 m
291.215 485.9006 291.6855 486.3711 291.6855 486.9514 c
291.6855 487.5318 291.215 488.0023 290.6346 488.0023 c
290.0542 488.0023 289.5838 487.5318 289.5838 486.9514 c
289.5838 486.3711 290.0542 485.9006 290.6346 485.9006 c
f
290.6346 486.9514 m
F
U
u
283.1033 485.2001 m
283.6837 485.2001 284.1542 485.6705 284.1542 486.2509 c
284.1542 486.8312 283.6837 487.3017 283.1033 487.3017 c
282.5229 487.3017 282.0525 486.8312 282.0525 486.2509 c
282.0525 485.6705 282.5229 485.2001 283.1033 485.2001 c
f
283.1033 486.2509 m
F
U
u
266.8147 484.6746 m
267.3951 484.6746 267.8656 485.145 267.8656 485.7254 c
267.8656 486.3058 267.3951 486.7763 266.8147 486.7763 c
266.2343 486.7763 265.7639 486.3058 265.7639 485.7254 c
265.7639 485.145 266.2343 484.6746 266.8147 484.6746 c
f
266.8147 485.7254 m
F
U
u
270.6679 492.7313 m
271.2483 492.7313 271.7188 493.2018 271.7188 493.7821 c
271.7188 494.3625 271.2483 494.833 270.6679 494.833 c
270.0876 494.833 269.6171 494.3625 269.6171 493.7821 c
269.6171 493.2018 270.0876 492.7313 270.6679 492.7313 c
f
270.6679 493.7821 m
F
U
u
282.753 495.3585 m
283.3334 495.3585 283.8039 495.829 283.8039 496.4093 c
283.8039 496.9897 283.3334 497.4602 282.753 497.4602 c
282.1726 497.4602 281.7022 496.9897 281.7022 496.4093 c
281.7022 495.829 282.1726 495.3585 282.753 495.3585 c
f
282.753 496.4093 m
F
U
u
296.0642 492.9065 m
296.6445 492.9065 297.115 493.3769 297.115 493.9573 c
297.115 494.5377 296.6445 495.0082 296.0642 495.0082 c
295.4838 495.0082 295.0133 494.5377 295.0133 493.9573 c
295.0133 493.3769 295.4838 492.9065 296.0642 492.9065 c
f
296.0642 493.9573 m
F
U
u
292.7364 502.0141 m
293.3167 502.0141 293.7873 502.4845 293.7873 503.0649 c
293.7873 503.6453 293.3167 504.1158 292.7364 504.1158 c
292.156 504.1158 291.6856 503.6453 291.6856 503.0649 c
291.6856 502.4845 292.156 502.0141 292.7364 502.0141 c
f
292.7364 503.0649 m
F
U
u
299.9174 511.472 m
300.4977 511.472 300.9683 511.9424 300.9683 512.5228 c
300.9683 513.1032 300.4977 513.5737 299.9174 513.5737 c
299.337 513.5737 298.8666 513.1032 298.8666 512.5228 c
298.8666 511.9424 299.337 511.472 299.9174 511.472 c
f
299.9174 512.5228 m
F
U
u
314.8048 509.7205 m
315.3852 509.7205 315.8557 510.191 315.8557 510.7713 c
315.8557 511.3517 315.3852 511.8222 314.8048 511.8222 c
314.2244 511.8222 313.754 511.3517 313.754 510.7713 c
313.754 510.191 314.2244 509.7205 314.8048 509.7205 c
f
314.8048 510.7713 m
F
U
u
312.1776 516.7264 m
312.758 516.7264 313.2285 517.1968 313.2285 517.7772 c
313.2285 518.3576 312.758 518.8281 312.1776 518.8281 c
311.5972 518.8281 311.1268 518.3576 311.1268 517.7772 c
311.1268 517.1968 311.5972 516.7264 312.1776 516.7264 c
f
312.1776 517.7772 m
F
U
u
305.8723 502.7147 m
306.4527 502.7147 306.9232 503.1851 306.9232 503.7655 c
306.9232 504.3458 306.4527 504.8164 305.8723 504.8164 c
305.292 504.8164 304.8215 504.3458 304.8215 503.7655 c
304.8215 503.1851 305.292 502.7147 305.8723 502.7147 c
f
305.8723 503.7655 m
F
U
u
317.432 497.4603 m
318.0124 497.4603 318.4829 497.9307 318.4829 498.5111 c
318.4829 499.0915 318.0124 499.562 317.432 499.562 c
316.8516 499.562 316.3812 499.0915 316.3812 498.5111 c
316.3812 497.9307 316.8516 497.4603 317.432 497.4603 c
f
317.432 498.5111 m
F
U
u
322.8615 498.336 m
323.4419 498.336 323.9124 498.8065 323.9124 499.3868 c
323.9124 499.9672 323.4419 500.4377 322.8615 500.4377 c
322.2812 500.4377 321.8107 499.9672 321.8107 499.3868 c
321.8107 498.8065 322.2812 498.336 322.8615 498.336 c
f
322.8615 499.3868 m
F
U
u
319.7089 491.3302 m
320.2893 491.3302 320.7598 491.8006 320.7598 492.381 c
320.7598 492.9613 320.2893 493.4319 319.7089 493.4319 c
319.1286 493.4319 318.6581 492.9613 318.6581 492.381 c
318.6581 491.8006 319.1286 491.3302 319.7089 491.3302 c
f
319.7089 492.381 m
F
U
u
325.1385 502.5395 m
325.7188 502.5395 326.1893 503.01 326.1893 503.5903 c
326.1893 504.1707 325.7188 504.6412 325.1385 504.6412 c
324.5581 504.6412 324.0876 504.1707 324.0876 503.5903 c
324.0876 503.01 324.5581 502.5395 325.1385 502.5395 c
f
325.1385 503.5903 m
F
U
u
333.5455 506.5679 m
334.1258 506.5679 334.5964 507.0384 334.5964 507.6187 c
334.5964 508.199 334.1258 508.6696 333.5455 508.6696 c
332.9651 508.6696 332.4947 508.199 332.4947 507.6187 c
332.4947 507.0384 332.9651 506.5679 333.5455 506.5679 c
f
333.5455 507.6187 m
F
U
u
331.9692 498.6863 m
332.5495 498.6863 333.02 499.1567 333.02 499.7371 c
333.02 500.3175 332.5495 500.788 331.9692 500.788 c
331.3888 500.788 330.9184 500.3175 330.9184 499.7371 c
330.9184 499.1567 331.3888 498.6863 331.9692 498.6863 c
f
331.9692 499.7371 m
F
U
u
332.1443 490.9799 m
332.7247 490.9799 333.1952 491.4503 333.1952 492.0307 c
333.1952 492.611 332.7247 493.0816 332.1443 493.0816 c
331.5639 493.0816 331.0935 492.611 331.0935 492.0307 c
331.0935 491.4503 331.5639 490.9799 332.1443 490.9799 c
f
332.1443 492.0307 m
F
U
u
337.9241 496.9349 m
338.5045 496.9349 338.975 497.4053 338.975 497.9857 c
338.975 498.566 338.5045 499.0365 337.9241 499.0365 c
337.3438 499.0365 336.8733 498.566 336.8733 497.9857 c
336.8733 497.4053 337.3438 496.9349 337.9241 496.9349 c
f
337.9241 497.9857 m
F
U
u
338.7999 506.2176 m
339.3802 506.2176 339.8507 506.6881 339.8507 507.2684 c
339.8507 507.8488 339.3802 508.3193 338.7999 508.3193 c
338.2195 508.3193 337.7491 507.8488 337.7491 507.2684 c
337.7491 506.6881 338.2195 506.2176 338.7999 506.2176 c
f
338.7999 507.2684 m
F
U
u
338.0993 511.8223 m
338.6796 511.8223 339.1502 512.2927 339.1502 512.8731 c
339.1502 513.4535 338.6796 513.924 338.0993 513.924 c
337.5189 513.924 337.0485 513.4535 337.0485 512.8731 c
337.0485 512.2927 337.5189 511.8223 338.0993 511.8223 c
f
338.0993 512.8731 m
F
U
u
343.0034 512.8732 m
343.5837 512.8732 344.0543 513.3436 344.0543 513.924 c
344.0543 514.5043 343.5837 514.9749 343.0034 514.9749 c
342.423 514.9749 341.9526 514.5043 341.9526 513.924 c
341.9526 513.3436 342.423 512.8732 343.0034 512.8732 c
f
343.0034 513.924 m
F
U
u
346.6815 507.9691 m
347.2618 507.9691 347.7323 508.4395 347.7323 509.0199 c
347.7323 509.6002 347.2618 510.0708 346.6815 510.0708 c
346.1011 510.0708 345.6307 509.6002 345.6307 509.0199 c
345.6307 508.4395 346.1011 507.9691 346.6815 507.9691 c
f
346.6815 509.0199 m
F
U
u
323.5621 513.2235 m
324.1425 513.2235 324.613 513.6939 324.613 514.2743 c
324.613 514.8546 324.1425 515.3251 323.5621 515.3251 c
322.9818 515.3251 322.5113 514.8546 322.5113 514.2743 c
322.5113 513.6939 322.9818 513.2235 323.5621 513.2235 c
f
323.5621 514.2743 m
F
U
u
323.9124 519.7039 m
324.4928 519.7039 324.9633 520.1743 324.9633 520.7547 c
324.9633 521.335 324.4928 521.8056 323.9124 521.8056 c
323.3321 521.8056 322.8616 521.335 322.8616 520.7547 c
322.8616 520.1743 323.3321 519.7039 323.9124 519.7039 c
f
323.9124 520.7547 m
F
U
u
334.4212 527.06 m
335.0016 527.06 335.4721 527.5305 335.4721 528.1108 c
335.4721 528.6912 335.0016 529.1617 334.4212 529.1617 c
333.8408 529.1617 333.3704 528.6912 333.3704 528.1108 c
333.3704 527.5305 333.8408 527.06 334.4212 527.06 c
f
334.4212 528.1108 m
F
U
u
333.02 519.0033 m
333.6004 519.0033 334.0709 519.4737 334.0709 520.0541 c
334.0709 520.6345 333.6004 521.105 333.02 521.105 c
332.4397 521.105 331.9692 520.6345 331.9692 520.0541 c
331.9692 519.4737 332.4397 519.0033 333.02 519.0033 c
f
333.02 520.0541 m
F
U
u
339.8507 522.6814 m
340.4311 522.6814 340.9016 523.1518 340.9016 523.7322 c
340.9016 524.3125 340.4311 524.783 339.8507 524.783 c
339.2704 524.783 338.7999 524.3125 338.7999 523.7322 c
338.7999 523.1518 339.2704 522.6814 339.8507 522.6814 c
f
339.8507 523.7322 m
F
U
u
344.93 528.6363 m
345.5104 528.6363 345.9809 529.1068 345.9809 529.6872 c
345.9809 530.2675 345.5104 530.738 344.93 530.738 c
344.3496 530.738 343.8792 530.2675 343.8792 529.6872 c
343.8792 529.1068 344.3496 528.6363 344.93 528.6363 c
f
344.93 529.6872 m
F
U
u
348.4329 523.0317 m
349.0133 523.0317 349.4838 523.5021 349.4838 524.0825 c
349.4838 524.6628 349.0133 525.1334 348.4329 525.1334 c
347.8526 525.1334 347.3821 524.6628 347.3821 524.0825 c
347.3821 523.5021 347.8526 523.0317 348.4329 523.0317 c
f
348.4329 524.0825 m
F
U
u
345.6306 496.9349 m
346.2109 496.9349 346.6815 497.4053 346.6815 497.9857 c
346.6815 498.566 346.2109 499.0365 345.6306 499.0365 c
345.0502 499.0365 344.5798 498.566 344.5798 497.9857 c
344.5798 497.4053 345.0502 496.9349 345.6306 496.9349 c
f
345.6306 497.9857 m
F
U
u
340.5513 490.8047 m
341.1317 490.8047 341.6022 491.2752 341.6022 491.8555 c
341.6022 492.4359 341.1317 492.9064 340.5513 492.9064 c
339.971 492.9064 339.5005 492.4359 339.5005 491.8555 c
339.5005 491.2752 339.971 490.8047 340.5513 490.8047 c
f
340.5513 491.8555 m
F
U
u
334.0709 485.2001 m
334.6513 485.2001 335.1218 485.6705 335.1218 486.2509 c
335.1218 486.8312 334.6513 487.3017 334.0709 487.3017 c
333.4906 487.3017 333.0201 486.8312 333.0201 486.2509 c
333.0201 485.6705 333.4906 485.2001 334.0709 485.2001 c
f
334.0709 486.2509 m
F
U
u
348.9583 487.6521 m
349.5387 487.6521 350.0092 488.1225 350.0092 488.7029 c
350.0092 489.2832 349.5387 489.7538 348.9583 489.7538 c
348.378 489.7538 347.9076 489.2832 347.9076 488.7029 c
347.9076 488.1225 348.378 487.6521 348.9583 487.6521 c
f
348.9583 488.7029 m
F
U
u
343.1785 477.4936 m
343.7589 477.4936 344.2294 477.964 344.2294 478.5444 c
344.2294 479.1248 343.7589 479.5953 343.1785 479.5953 c
342.5982 479.5953 342.1277 479.1248 342.1277 478.5444 c
342.1277 477.964 342.5982 477.4936 343.1785 477.4936 c
f
343.1785 478.5444 m
F
U
u
333.8958 475.567 m
334.4761 475.567 334.9467 476.0374 334.9467 476.6178 c
334.9467 477.1982 334.4761 477.6687 333.8958 477.6687 c
333.3154 477.6687 332.845 477.1982 332.845 476.6178 c
332.845 476.0374 333.3154 475.567 333.8958 475.567 c
f
333.8958 476.6178 m
F
U
u
333.7206 468.2108 m
334.301 468.2108 334.7715 468.6813 334.7715 469.2617 c
334.7715 469.842 334.301 470.3125 333.7206 470.3125 c
333.1402 470.3125 332.6698 469.842 332.6698 469.2617 c
332.6698 468.6813 333.1402 468.2108 333.7206 468.2108 c
f
333.7206 469.2617 m
F
U
u
352.4613 505.6922 m
353.0417 505.6922 353.5122 506.1626 353.5122 506.743 c
353.5122 507.3233 353.0417 507.7938 352.4613 507.7938 c
351.8809 507.7938 351.4105 507.3233 351.4105 506.743 c
351.4105 506.1626 351.8809 505.6922 352.4613 505.6922 c
f
352.4613 506.743 m
F
U
u
359.6423 500.9632 m
360.2226 500.9632 360.6932 501.4337 360.6932 502.014 c
360.6932 502.5944 360.2226 503.0649 359.6423 503.0649 c
359.0619 503.0649 358.5915 502.5944 358.5915 502.014 c
358.5915 501.4337 359.0619 500.9632 359.6423 500.9632 c
f
359.6423 502.014 m
F
U
u
356.8399 493.6071 m
357.4203 493.6071 357.8908 494.0775 357.8908 494.6579 c
357.8908 495.2382 357.4203 495.7088 356.8399 495.7088 c
356.2596 495.7088 355.7891 495.2382 355.7891 494.6579 c
355.7891 494.0775 356.2596 493.6071 356.8399 493.6071 c
f
356.8399 494.6579 m
F
U
u
359.6423 511.9974 m
360.2226 511.9974 360.6932 512.4679 360.6932 513.0483 c
360.6932 513.6286 360.2226 514.0991 359.6423 514.0991 c
359.0619 514.0991 358.5915 513.6286 358.5915 513.0483 c
358.5915 512.4679 359.0619 511.9974 359.6423 511.9974 c
f
359.6423 513.0483 m
F
U
u
365.247 516.0258 m
365.8273 516.0258 366.2978 516.4962 366.2978 517.0766 c
366.2978 517.657 365.8273 518.1275 365.247 518.1275 c
364.6666 518.1275 364.1962 517.657 364.1962 517.0766 c
364.1962 516.4962 364.6666 516.0258 365.247 516.0258 c
f
365.247 517.0766 m
F
U
u
365.0718 507.0933 m
365.6522 507.0933 366.1227 507.5638 366.1227 508.1441 c
366.1227 508.7245 365.6522 509.195 365.0718 509.195 c
364.4915 509.195 364.021 508.7245 364.021 508.1441 c
364.021 507.5638 364.4915 507.0933 365.0718 507.0933 c
f
365.0718 508.1441 m
F
U
u
355.9642 522.5062 m
356.5446 522.5062 357.0151 522.9767 357.0151 523.557 c
357.0151 524.1374 356.5446 524.6079 355.9642 524.6079 c
355.3838 524.6079 354.9134 524.1374 354.9134 523.557 c
354.9134 522.9767 355.3838 522.5062 355.9642 522.5062 c
f
355.9642 523.557 m
F
U
u
355.6139 528.9866 m
356.1943 528.9866 356.6648 529.4571 356.6648 530.0375 c
356.6648 530.6178 356.1943 531.0883 355.6139 531.0883 c
355.0335 531.0883 354.5631 530.6178 354.5631 530.0375 c
354.5631 529.4571 355.0335 528.9866 355.6139 528.9866 c
f
355.6139 530.0375 m
F
U
u
364.1961 524.2577 m
364.7764 524.2577 365.247 524.7281 365.247 525.3085 c
365.247 525.8889 364.7764 526.3594 364.1961 526.3594 c
363.6157 526.3594 363.1453 525.8889 363.1453 525.3085 c
363.1453 524.7281 363.6157 524.2577 364.1961 524.2577 c
f
364.1961 525.3085 m
F
U
u
231.7854 429.1532 m
232.3658 429.1532 232.8363 429.6236 232.8363 430.204 c
232.8363 430.7843 232.3658 431.2549 231.7854 431.2549 c
231.205 431.2549 230.7346 430.7843 230.7346 430.204 c
230.7346 429.6236 231.205 429.1532 231.7854 429.1532 c
f
231.7854 430.204 m
F
U
0 To
1 0 0 1 363.875 439.25 0 Tp
TP
0 Tr
/_Times-Roman 9 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
9 0 Tl
0 Tc
0 Tw
(68% confidence interval on ) Tx 
/_Times-Italic 9 Tf
(a) Tx 
/_Times-Roman 6.5 Tf
-1.5 Ts
(2) Tx 
(\r) TX 
TO
241.4871 423.4856 m
241.4471 423.5055 L
240.9572 422.7657 240.4173 422.0358 239.7274 421.4659 c
239.5574 421.6059 L
240.2173 422.5657 240.8572 423.5455 241.4471 424.5554 c
241.847 424.5554 L
242.4169 423.5455 243.0568 422.5657 243.7067 421.5959 c
243.5467 421.4559 L
242.8868 422.0558 242.3269 422.7557 241.857 423.5055 c
241.817 423.4856 L
241.4871 423.4856 L
f
u
261.368 442.3831 m
261.7794 439.4968 L
264.8613 445.2196 L
264.8613 445.2196 L
258.6276 443.3782 L
261.368 442.3831 L
f
U
327.0844 529.5849 m
327.1043 529.6249 L
326.3645 530.1148 325.6346 530.6547 325.0647 531.3446 c
325.2047 531.5146 L
326.1645 530.8547 327.1443 530.2148 328.1542 529.6249 c
328.1542 529.225 L
327.1443 528.6551 326.1645 528.0152 325.1947 527.3653 c
325.0547 527.5253 L
325.6546 528.1852 326.3545 528.7451 327.1043 529.215 c
327.0844 529.255 L
327.0844 529.5849 L
f
216.7281 529.6474 m
216.7082 529.6874 L
217.448 530.1773 218.1779 530.7172 218.7478 531.4071 c
218.6078 531.5771 L
217.648 530.9172 216.6682 530.2773 215.6583 529.6874 c
215.6583 529.2875 L
216.6682 528.7176 217.648 528.0777 218.6178 527.4278 c
218.7578 527.5878 L
218.1579 528.2477 217.458 528.8076 216.7082 529.2775 c
216.7281 529.3175 L
216.7281 529.6474 L
f
0 To
1 0 0 1 243.25 531.125 0 Tp
TP
0 Tr
/_Times-Roman 9 Tf
0 Ts
(68% confidence\r) Tx 
T*
(interval on ) Tx 
/_Times-Italic 9 Tf
(a) Tx 
/_Times-Roman 6.5 Tf
-1.5 Ts
(1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 391.25 525.625 0 Tp
TP
0 Tr
/_Times-Roman 9 Tf
0 Ts
(68% confidence region\r) Tx 
T*
(on ) Tx 
/_Times-Italic 9 Tf
(a) Tx 
/_Times-Roman 6.5 Tf
-1.5 Ts
(1) Tx 
/_Times-Roman 9 Tf
0 Ts
( and ) Tx 
/_Times-Italic 9 Tf
(a) Tx 
/_Times-Roman 6.5 Tf
-1.5 Ts
(2) Tx 
/_Times-Roman 9 Tf
0 Ts
( jointly) Tx 
(\r) TX 
TO
353.2959 517.9121 m
353.2997 517.8676 L
354.1864 517.8337 355.0906 517.752 355.936 517.459 c
355.9049 517.241 L
354.7419 517.3057 353.5722 517.3429 352.4028 517.3218 c
352.1949 517.6634 L
352.7613 518.6752 353.2656 519.7313 353.7561 520.7906 c
353.9589 520.7267 L
353.7895 519.8512 353.4828 519.009 353.0866 518.2178 c
353.1244 518.1939 L
353.2959 517.9121 L
f
368.4776 482.7719 m
368.4376 482.7918 L
367.9477 482.052 367.4078 481.3221 366.7179 480.7522 c
366.5479 480.8922 L
367.2078 481.852 367.8477 482.8318 368.4376 483.8417 c
368.8375 483.8417 L
369.4074 482.8318 370.0473 481.852 370.6972 480.8822 c
370.5372 480.7422 L
369.8773 481.3421 369.3174 482.042 368.8475 482.7918 c
368.8075 482.7719 L
368.4776 482.7719 L
f
368.4776 400.9781 m
368.4376 400.9582 L
367.9477 401.698 367.4078 402.4279 366.7179 402.9978 c
366.5479 402.8578 L
367.2078 401.898 367.8477 400.9182 368.4376 399.9083 c
368.8375 399.9083 L
369.4074 400.9182 370.0473 401.898 370.6972 402.8678 c
370.5372 403.0078 L
369.8773 402.4079 369.3174 401.708 368.8475 400.9582 c
368.8075 400.9781 L
368.4776 400.9781 L
f
0 To
1 0 0 1 287.25 368 0 Tp
TP
0 Tr
(bias) Tx 
(\r) TX 
TO
u
0 To
1 0 0 1 427.25 416.25 0 Tp
TP
0 Tr
/_Times-Italic 9 Tf
(a) Tx 0 -40 Tk 
/_Times-Roman 6.5 Tf
-3 Ts
(\() Tx 0 -20 Tk 
/_Times-Italic 6.5 Tf
(i) Tx 0 -60 Tk 
/_Times-Roman 6.5 Tf
(\)1) Tx 
/_Times-Italic 6.5 Tf
( ) Tx 
/_Symbol 9 Tf
0 Ts
(- ) Tx 
/_Times-Italic 9 Tf
(a) Tx 
/_Times-Roman 6.5 Tf
-3 Ts
(\(0\)1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 432.125 419.875 0 Tp
TP
0 Tr
0 Ts
(\() Tx 
/_Times-Italic 6.5 Tf
(s) Tx 
/_Times-Roman 6.5 Tf
(\)) Tx 
(\r) TX 
TO
U
0 To
1 0 0 1 228.125 599.25 0 Tp
TP
0 Tr
/_Times-Italic 9 Tf
(a) Tx 0 -40 Tk 
/_Times-Roman 6.5 Tf
-3 Ts
(\() Tx 0 -20 Tk 
/_Times-Italic 6.5 Tf
(i) Tx 0 -80 Tk 
/_Times-Roman 6.5 Tf
(\)2) Tx 
/_Times-Italic 6.5 Tf
( ) Tx 
/_Symbol 9 Tf
0 Ts
(- ) Tx 
/_Times-Italic 9 Tf
(a) Tx 
/_Times-Roman 6.5 Tf
-3 Ts
(\(0\)2) Tx 
(\r) TX 
TO
0 To
1 0 0 1 233 602.875 0 Tp
TP
0 Tr
0 Ts
(\() Tx 
/_Times-Italic 6.5 Tf
(s) Tx 
/_Times-Roman 6.5 Tf
(\)) Tx 
(\r) TX 
TO
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 0 1439 a Fe(Figure)9 b(15.6.3.)26 b(Con\256dence)8
b(intervals)g(in)h(1)f(and)g(2)h(dimensions.)j(The)c(same)h(fraction)f(of)g
(measured)f(points)i(\(here)0 1476 y(68\045\))e(lies)i(\(i\))f(between)f(the)
h(two)g(vertical)g(lines,)h(\(ii\))g(between)e(the)g(two)i(horizontal)e
(lines,)h(\(iii\))h(within)f(the)g(ellipse.)83 1583 y Fj(Y)l(ou)18
b(might)g(suspect,)j(correctly)m(,)g(that)d(the)g(numbers)h(68.3)g(percent,)i
(95.4)d(percent,)0 1632 y(and)c(99.73)f(percent,)i(and)f(the)f(use)h(of)g
(ellipsoids,)f(have)h(some)g(connection)f(with)g(a)h(normal)0
1682 y(distribution)o(.)g(That)d(is)g(true)f(historically)m(,)g(but)g(not)g
(always)h(relevant)g(nowadays.)17 b(In)10 b(general,)0 1732
y(the)17 b(probability)d(distribution)g(of)j(the)g(parameters)h(will)e(not)g
(be)i(normal,)h(and)e(the)g(above)0 1782 y(numbers,)c(used)f(as)g(levels)g
(of)g(con\256dence,)h(are)g(purely)e(matters)h(of)g(convention.)83
1832 y(Figure)g(15.6.3)g(sketches)h(a)g(possible)f(probability)e(distributi)o
(on)f(for)j(the)h(case)h Fv(M)k Fu(=)c(2)p Fj(.)0 1881 y(Shown)7
b(are)i(three)f(dif)o(ferent)f(con\256dence)i(regions)f(which)f(might)g
(usefully)g(be)h(given,)g(all)g(at)g(the)0 1931 y(same)14 b(con\256dence)g
(level.)23 b(The)14 b(two)e(vertical)h(lines)f(enclose)i(a)f(band)g
(\(horizontal)e(inverval\))0 1981 y(which)d(represents)g(the)g(68)g(percent)g
(con\256dence)h(interval)e(for)g(the)h(variable)g Fv(a)1127
1987 y Fs(1)1154 1981 y Fj(without)e(regard)0 2031 y(to)14
b(the)g(value)g(of)g Fv(a)287 2037 y Fs(2)305 2031 y Fj(.)27
b(Similarly)13 b(the)h(horizontal)f(lines)g(enclose)i(a)g(68)f(percent)g
(con\256dence)0 2081 y(interval)f(for)h Fv(a)226 2087 y Fs(2)245
2081 y Fj(.)27 b(The)15 b(ellipse)e(shows)i(a)f(68)g(percent)h(con\256dence)g
(interval)e(for)h Fv(a)1247 2087 y Fs(1)1280 2081 y Fj(and)g
Fv(a)1376 2087 y Fs(2)0 2131 y Fj(jointly)m(.)f(Notice)c(that)f(to)h(enclose)
h(the)f(same)h(probability)d(as)j(the)f(two)g(bands,)g(the)g(ellipse)g(must)0
2180 y(necessarily)j(extend)f(outside)f(of)h(both)g(of)g(them)g(\(a)h(point)d
(we)j(will)e(return)h(to)g(below\).)0 2292 y Ff(Constant)j(Chi-Square)g
(Boundaries)h(as)e(Con\256dence)i(Limits)83 2398 y Fj(When)c(the)g(method)f
(used)i(to)e(estimate)h(the)g(parameters)h Fh(a)946 2405 y
Fs(\(0\))1001 2398 y Fj(is)f(chi-square)g(minimiza-)0 2448
y(tion,)f(as)i(in)e(the)h(previous)f(sections)h(of)f(this)g(chapter)n(,)i
(then)f(there)g(is)f(a)i(natural)e(choice)i(for)e(the)0 2497
y(shape)i(of)f(con\256dence)h(intervals,)f(whose)g(use)h(is)f(almost)g
(universal.)17 b(For)11 b(the)g(observed)h(data)0 2547 y(set)h
Fw(D)91 2554 y Fs(\(0\))136 2547 y Fj(,)h(the)e(value)h(of)g
Fv(\037)400 2532 y Fs(2)431 2547 y Fj(is)g(a)g(minimum)g(at)f
Fh(a)741 2554 y Fs(\(0\))786 2547 y Fj(.)23 b(Call)12 b(this)g(minimum)g
(value)h Fv(\037)1277 2532 y Fs(2)1277 2558 y(min)1334 2547
y Fj(.)23 b(If)p eop
%%Page: 694 6
bop 0 50 a Fj(694)422 b Fk(Chapter)10 b(15.)52 b(Modeling)10
b(of)g(Data)p 0 68 1395 2 v 0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore

@endspecial -26 1176 a @beginspecial 140 @llx 390 @lly 487
@urx 637 @ury 3470 @rwi @setspecial
%%BeginDocument: epsf/fig15x6x4.ps
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
/TX {pop} def
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def	% - cf flatness
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
[/_Symbol/Symbol 0 0 0 TZ
[/_Times-Italic/Times-Italic 0 0 1 TZ
[/_Times-Roman/Times-Roman 0 0 1 TZ
0 A
1 R
0 G
0 i 0 J 0 j 0.5 w 4 M []0 d
0 D
302 634.8093 m
302 392.3912 l
S
142.9413 508.9503 m
466.2987 508.9503 l
S
199.7008 608.7695 m
388.1793 608.7695 l
S
200.9408 593.5796 m
379.4994 593.5796 l
S
202.1808 574.9797 m
368.3395 574.9797 l
S
200.3208 542.815 m
408.6392 542.815 l
S
237.5205 478.2155 m
387.2493 478.2155 l
S
239.0705 445.0908 m
386.6293 445.0908 l
S
223.2606 427.7309 m
385.3893 427.7309 l
S
1 A
216.1307 412.231 m
384.4593 412.231 l
S
0 A
u
1 w
241.8115 446.5935 m
228.1613 456.8341 261.47 503.4529 288.779 530.761 c
316.0881 558.0691 356.1975 582.6968 366.1276 572.7662 c
376.0579 562.8357 352.3592 526.4468 325.0501 499.1387 c
297.741 471.8306 253.0454 438.1659 241.8115 446.5935 c
s
U
u
[4 3 ]0 d
239.2675 438.8386 m
214.1103 447.0815 250.0345 505.7242 283.0789 535.7632 c
316.1232 565.8024 359.0761 593.5129 371.0918 582.5892 c
383.1075 571.6656 368.1142 531.3457 336.8873 500.0485 c
305.9951 469.0866 262.527 431.2174 239.2675 438.8386 c
s
U
[]0 d
236.0192 429.5019 m
202.7887 441.9791 235.8576 503.9755 280.3516 543.8695 c
325.2759 584.1493 363.0094 601.5046 377.5485 589.4884 c
392.5634 577.0792 387.6149 541.8687 341.7406 493.1131 c
310.6101 460.0274 259.7452 420.5932 236.0192 429.5019 c
s
226.0473 416.2867 m
172.6479 440.2465 228.0233 524.5579 281.4161 568.4416 c
335.3251 612.7496 373.1652 614.4806 390.6121 601.2628 c
408.6299 587.6126 412.9317 544.1209 353.8427 482.2295 c
318.5772 445.2915 263.9835 399.2648 226.0473 416.2867 c
s
0 To
1 0 0 1 299 601.5 0 Tp
TP
-6.0029 0 Td
0 Tr
0 O
0 g
/_Times-Italic 9 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
2 Ta
0 Tq
9 0 Tl
0 Tc
0 Tw
(C) Tx 
(\r) TX 
TO
0 To
1 0 0 1 299 586 0 Tp
TP
-5.4976 0 Td
0 Tr
(B) Tx 
(\r) TX 
TO
0 To
1 0 0 1 299 567.5 0 Tp
TP
-5.4976 0 Td
0 Tr
(A) Tx 
(\r) TX 
TO
0 To
1 0 0 1 299 480.625 0 Tp
TP
-8.5746 0 Td
0 Tr
(Z) Tx 0 -150 Tk 
/_Symbol 9 Tf
(\242) Tx 
(\r) TX 
TO
0 To
1 0 0 1 304.5 533.5 0 Tp
TP
0 Tr
/_Times-Italic 9 Tf
0 Ta
(Z) Tx 
(\r) TX 
TO
0 To
1 0 0 1 313.75 414 0 Tp
TP
-9.3043 0 Td
0 Tr
2 Ta
(C) Tx 0 -120 Tk 
/_Symbol 9 Tf
(\242) Tx 
(\r) TX 
TO
0 To
1 0 0 1 473 617 0 Tp
TP
-40.504 0 Td
0 Tr
14 0 Tl
(Dc) Tx 0 -40 Tk 
/_Times-Roman 6.5 Tf
3 Ts
(2 ) Tx 
/_Times-Italic 9 Tf
0 Ts
(=) Tx 
/_Times-Italic 12 Tf
( ) Tx 
/_Times-Roman 9 Tf
(6.63) Tx 
(\r) TX 
TO
0 To
1 0 0 1 474 585 0 Tp
TP
-40.504 0 Td
0 Tr
/_Symbol 9 Tf
(Dc) Tx 0 -40 Tk 
/_Times-Roman 6.5 Tf
3 Ts
(2 ) Tx 
/_Times-Italic 9 Tf
0 Ts
(=) Tx 
/_Times-Italic 12 Tf
( ) Tx 
/_Times-Roman 9 Tf
(2.71) Tx 
(\r) TX 
TO
0 To
1 0 0 1 474.5 558 0 Tp
TP
-40.504 0 Td
0 Tr
/_Symbol 9 Tf
(Dc) Tx 0 -40 Tk 
/_Times-Roman 6.5 Tf
3 Ts
(2 ) Tx 
/_Times-Italic 9 Tf
0 Ts
(=) Tx 
/_Times-Italic 12 Tf
( ) Tx 
/_Times-Roman 9 Tf
(1.00) Tx 
(\r) TX 
TO
0 To
1 0 0 1 458 450 0 Tp
TP
-40.504 0 Td
0 Tr
/_Symbol 9 Tf
(Dc) Tx 0 -40 Tk 
/_Times-Roman 6.5 Tf
3 Ts
(2 ) Tx 
/_Times-Italic 9 Tf
0 Ts
(=) Tx 
/_Times-Italic 12 Tf
( ) Tx 
/_Times-Roman 9 Tf
(2.30) Tx 
(\r) TX 
TO
0 To
1 0 0 1 313.5 447 0 Tp
TP
-7.719 0 Td
0 Tr
/_Times-Italic 9 Tf
9 0 Tl
(A) Tx 
/_Symbol 9 Tf
(\242) Tx 
(\r) TX 
TO
0 To
1 0 0 1 314 429 0 Tp
TP
-8.529 0 Td
0 Tr
/_Times-Italic 9 Tf
(B) Tx 0 -90 Tk 
/_Symbol 9 Tf
(\242) Tx 
(\r) TX 
TO
1 R
0 G
0.5 w
427.375 618.625 m
422.375 617.75 403.7034 605.5518 399.375 598.75 c
S
429 586 m
417.5 582.5 391.5625 573.75 388.5 571.875 c
S
432 559.5 m
421.5 559.5 366.75 551.875 y
S
411.5 452 m
402 452.5 380.5 447.5 370.5 470 c
360.5 492.5 352.75 514 y
S
u
0 O
0 g
1 w
366.679 552.0372 m
366.6541 552.0742 L
367.3232 552.6569 367.9759 553.288 368.4504 554.0467 c
368.2893 554.1968 L
367.4244 553.4167 366.537 552.6537 365.6133 551.9364 c
365.6657 551.54 L
366.7417 551.1075 367.797 550.6017 368.8437 550.0847 c
368.9615 550.2617 L
368.2801 550.8372 367.5128 551.3004 366.7079 551.6679 c
366.7223 551.7101 L
366.679 552.0372 L
f
U
u
352.917 514.0909 m
352.9494 514.1217 L
353.635 513.5584 354.3655 513.0193 355.1923 512.6772 c
355.3137 512.8609 L
354.401 513.5845 353.5016 514.3332 352.6411 515.1253 c
352.2588 515.0078 L
352.0107 513.8751 351.6868 512.7505 351.3504 511.6326 c
351.5445 511.5458 L
351.999 512.3131 352.3287 513.1465 352.5576 514.0013 c
352.6017 513.994 L
352.917 514.0909 L
f
U
u
388.3523 571.9672 m
388.3173 571.9949 L
388.7781 572.7532 389.2086 573.5525 389.4305 574.4193 c
389.2314 574.5135 L
388.644 573.5078 388.0299 572.5116 387.3673 571.5478 c
387.5376 571.186 L
388.694 571.1004 389.853 570.9386 391.0073 570.7635 c
391.0658 570.9679 L
390.242 571.3095 389.3703 571.5181 388.4918 571.624 c
388.4928 571.6687 L
388.3523 571.9672 L
f
U
u
399.1742 598.6811 m
399.13 598.6871 L
399.1392 599.5744 399.1016 600.4814 398.85 601.3402 c
398.6308 601.3196 L
398.6388 600.1549 398.6191 598.9848 398.5411 597.8179 c
398.8722 597.5936 L
399.9104 598.1101 400.9897 598.5624 402.0717 599.0009 c
402.0177 599.2065 L
401.1349 599.0799 400.2789 598.8144 399.4693 598.4572 c
399.4474 598.4961 L
399.1742 598.6811 L
f
U
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 0 1239 a Fe(Figure)h(15.6.4.)39 b(Con\256dence)9
b(region)h(ellipses)h(corresponding)c(to)k(values)f(of)h(chi-square)e(lar)o
(ger)i(than)f(the)g(\256tted)0 1276 y(minimum.)j(The)8 b(solid)g(curves,)g
(with)h Fn(\001)p Fo(\037)507 1264 y Fm(2)535 1276 y Fn(=)h(1)p
Fo(:)p Fn(00)p Fo(;)5 b Fn(2)p Fo(:)p Fn(71)p Fo(;)t Fn(6)p
Fo(:)p Fn(63)j Fe(project)g(onto)f(one-dimensional)f(intervals)i
Fo(AA)1374 1264 y Fb(0)1386 1276 y Fe(,)0 1313 y Fo(B)r(B)58
1302 y Fb(0)68 1313 y Fe(,)g Fo(C)r(C)138 1302 y Fb(0)150 1313
y Fe(.)13 b(These)7 b(intervals)h(\320)h(not)e(the)h(ellipses)g(themselves)f
(\320)i(contain)e(68.3\045,)g(90\045,)g(and)h(99\045)f(of)h(normally)0
1351 y(distributed)h(data.)17 b(The)10 b(ellipse)f(that)h(contains)f
(68.3\045)g(of)g(normally)g(distributed)g(data)h(is)g(shown)f(dashed,)g(and)g
(has)0 1388 y Fn(\001)p Fo(\037)51 1376 y Fm(2)81 1388 y Fn(=)k(2)p
Fo(:)p Fn(30)p Fe(.)19 b(For)11 b(additional)f(numerical)g(values,)h(see)f
(accompanying)e(table.)0 1551 y Fj(the)h(vector)h Fh(a)f Fj(of)g(parameter)i
(values)e(is)g(perturbed)g(away)h(from)f Fh(a)953 1558 y Fs(\(0\))998
1551 y Fj(,)h(then)f Fv(\037)1125 1536 y Fs(2)1153 1551 y Fj(increases.)16
b(The)0 1601 y(region)11 b(within)g(which)g Fv(\037)376 1586
y Fs(2)407 1601 y Fj(increases)i(by)f(no)g(more)g(than)g(a)h(set)f(amount)g
Fu(\001)p Fv(\037)1147 1586 y Fs(2)1177 1601 y Fj(de\256nes)h(some)0
1651 y Fv(M)5 b Fj(-dimensional)11 b(con\256dence)i(region)e(around)h
Fh(a)733 1658 y Fs(\(0\))777 1651 y Fj(.)21 b(If)12 b Fu(\001)p
Fv(\037)909 1636 y Fs(2)940 1651 y Fj(is)g(set)g(to)g(be)g(a)h(lar)o(ge)f
(number)n(,)0 1700 y(this)e(will)f(be)i(a)g(big)f(region;)g(if)g(it)g(is)g
(small,)h(it)f(will)f(be)i(small.)17 b(Somewhere)12 b(in)e(between)h(there)0
1750 y(will)i(be)h(choices)g(of)g Fu(\001)p Fv(\037)380 1735
y Fs(2)412 1750 y Fj(that)f(cause)j(the)d(region)g(to)h(contain,)g(variously)
m(,)g(68)g(percent,)h(90)0 1800 y(percent,)d(etc.)19 b(of)11
b(probability)d(distribution)g(for)j Fh(a)p Fj(')n(s,)g(as)h(de\256ned)g
(above.)18 b(These)13 b(regions)d(are)0 1850 y(taken)k(as)h(the)f
(con\256dence)h(regions)f(for)g(the)g(parameters)h Fh(a)894
1857 y Fs(\(0\))939 1850 y Fj(.)83 1900 y(V)-5 b(ery)18 b(frequently)f(one)h
(is)f(interested)g(not)g(in)g(the)h(full)f Fv(M)5 b Fj(-dimensional)16
b(con\256dence)0 1949 y(region,)7 b(but)g(in)f(individual)f(con\256dence)j
(regions)e(for)h(some)h(smaller)f(number)g Fv(\027)i Fj(of)e(parameters.)0
1999 y(For)13 b(example,)i(one)f(might)e(be)i(interested)f(in)f(the)i
(con\256dence)g(interval)e(of)h(each)i(parameter)0 2049 y(taken)g(separately)
g(\(the)f(bands)g(in)g(Figure)g(15.6.3\),)i(in)e(which)g(case)i
Fv(\027)i Fu(=)e(1)p Fj(.)28 b(In)14 b(that)g(case,)0 2099
y(the)c(natural)g(con\256dence)i(regions)e(in)g(the)g Fv(\027)s
Fj(-dimensional)f(subspace)i(of)g(the)f Fv(M)5 b Fj(-dimensional)0
2149 y(parameter)13 b(space)h(are)e(the)g Fg(pr)n(ojections)g
Fj(of)g(the)f Fv(M)5 b Fj(-dimensional)11 b(regions)h(de\256ned)g(by)g
(\256xed)0 2199 y Fu(\001)p Fv(\037)61 2183 y Fs(2)88 2199
y Fj(into)c(the)h Fv(\027)s Fj(-dimensional)e(spaces)k(of)e(interest.)14
b(In)9 b(Figure)g(15.6.4,)g(for)g(the)g(case)h Fv(M)17 b Fu(=)12
b(2)p Fj(,)0 2248 y(we)17 b(show)e(regions)h(corresponding)e(to)i(several)h
(values)f(of)f Fu(\001)p Fv(\037)976 2233 y Fs(2)995 2248 y
Fj(.)32 b(The)17 b(one-dimensional)0 2298 y(con\256dence)g(interval)e(in)h
Fv(a)410 2304 y Fs(2)445 2298 y Fj(corresponding)f(to)h(the)g(region)f
(bounded)g(by)h Fu(\001)p Fv(\037)1215 2283 y Fs(2)1251 2298
y Fu(=)h(1)f Fj(lies)0 2348 y(between)j(the)f(lines)f Fv(A)i
Fj(and)f Fv(A)481 2333 y Fp(0)493 2348 y Fj(.)83 2398 y(Notice)i(that)g(the)h
(projection)e(of)h(the)g(higher)o(-dimensional)f(region)h(on)g(the)g(lower)o
(-)0 2448 y(dimension)13 b(space)h(is)g(used,)h(not)d(the)h(intersection.)24
b(The)14 b(intersection)f(would)f(be)i(the)f(band)0 2497 y(between)e
Fv(Z)j Fj(and)c Fv(Z)292 2482 y Fp(0)304 2497 y Fj(.)16 b(It)10
b(is)g Fg(never)i Fj(used.)k(It)10 b(is)g(shown)g(in)g(the)g(\256gure)h(only)
e(for)h(the)g(purpose)g(of)0 2547 y(making)h(this)e(cautionary)i(point,)e
(that)i(it)f(should)f(not)h(be)i(confused)e(with)g(the)h(projection.)p
eop
%%Page: 695 7
bop 178 50 a Fk(15.6)10 b(Con\256dence)f(Limits)i(on)f(Estimated)g(Model)g
(Parameters)220 b Fj(695)p 0 68 1395 2 v 0 143 a @beginspecial
@setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial 46 x Ff(Probability)14 b(Distribution)h(of)f
(Parameters)f(in)h(the)f(Normal)i(Case)83 291 y Fj(Y)l(ou)i(may)h(be)h
(wondering)d(why)h(we)h(have,)j(in)c(this)g(section)g(up)h(to)f(now)m(,)j
(made)e(no)0 341 y(connection)11 b(at)i(all)e(with)g(the)h(error)g(estimates)
h(that)e(come)i(out)f(of)f(the)h Fv(\037)1076 326 y Fs(2)1107
341 y Fj(\256tting)e(procedure,)0 391 y(most)19 b(notably)e(the)i(covariance)
h(matrix)e Fv(C)669 397 y Ft(ij)698 391 y Fj(.)41 b(The)19
b(reason)h(is)e(this:)31 b Fv(\037)1136 376 y Fs(2)1173 391
y Fj(minimization)0 441 y(is)18 b(a)g(useful)f(means)i(for)e(estimating)g
(parameters)i(even)f(if)g(the)f(measurement)i(errors)f(are)0
490 y(not)13 b(normally)g(distributed.)25 b(While)13 b(normally)h
(distributed)d(errors)j(are)h(required)f(if)f(the)h Fv(\037)1376
475 y Fs(2)0 540 y Fj(parameter)i(estimate)f(is)g(to)f(be)h(a)g(maximum)g
(likelihood)e(estimator)h(\()p Fw(x)p Fj(15.1\),)i(one)f(is)f(often)0
590 y(willing)h(to)h(give)g(up)h(that)f(property)f(in)h(return)g(for)h(the)f
(relative)h(convenience)g(of)g(the)f Fv(\037)1376 575 y Fs(2)0
640 y Fj(procedure.)21 b(Only)11 b(in)h(extreme)h(cases,)i(measurement)e
(error)f(distributions)d(with)i(very)i(lar)o(ge)0 690 y(\252tails,\272)j(is)e
Fv(\037)200 675 y Fs(2)233 690 y Fj(minimization)f(abandoned)h(in)f(favor)h
(of)g(more)h(robust)e(techniques,)i(as)g(will)0 739 y(be)20
b(discussed)f(in)g Fw(x)p Fj(15.7.)83 789 y(However)n(,)10
b(the)e(formal)h(covariance)g(matrix)g(that)f(comes)h(out)f(of)h(a)g
Fv(\037)1082 774 y Fs(2)1109 789 y Fj(minimization)e(has)0
839 y(a)h(clear)g(quantitative)e(interpretation)f(only)i(if)g(\(or)g(to)g
(the)g(extent)g(that\))g(the)g(measurement)i(errors)0 889 y(actually)g(are)g
(normally)f(distributed.)13 b(In)c(the)f(case)j(of)e Fg(non)p
Fj(normal)f(errors,)h(you)g(are)g(\252allowed\272)87 939 y
Fw(\017)21 b Fj(to)14 b(\256t)h(for)g(parameters)i(by)d(minimizing)g
Fv(\037)777 924 y Fs(2)87 989 y Fw(\017)21 b Fj(to)7 b(use)h(a)g(contour)f
(of)g(constant)g Fu(\001)p Fv(\037)642 973 y Fs(2)668 989 y
Fj(as)i(the)e(boundary)g(of)g(your)g(con\256dence)i(region)87
1038 y Fw(\017)21 b Fj(to)14 b(use)i(Monte)f(Carlo)g(simulation)e(or)i
(detailed)g(analytic)g(calculation)f(in)h(deter)o(-)129 1088
y(mining)10 b Fg(which)g Fj(contour)g Fu(\001)p Fv(\037)567
1073 y Fs(2)597 1088 y Fj(is)h(the)g(correct)h(one)f(for)g(your)f(desired)h
(con\256dence)129 1138 y(level)87 1188 y Fw(\017)21 b Fj(to)16
b(give)g(the)h(covariance)h(matrix)e Fv(C)686 1194 y Ft(ij)732
1188 y Fj(as)i(the)e(\252formal)h(covariance)h(matrix)f(of)129
1238 y(the)j(\256t.\272)0 1287 y(Y)l(ou)f(are)h Fg(not)f Fj(allowed)87
1337 y Fw(\017)i Fj(to)15 b(use)h(formulas)f(that)g(we)h(now)f(give)g(for)g
(the)h(case)h(of)e(normal)g(errors,)j(which)129 1387 y(establish)12
b(quantitative)g(relationships)g(among)h Fu(\001)p Fv(\037)910
1372 y Fs(2)928 1387 y Fj(,)i Fv(C)983 1393 y Ft(ij)1012 1387
y Fj(,)g(and)e(the)g(con\256dence)129 1437 y(level.)83 1487
y(Here)20 b(are)g(the)f(key)h(theorems)f(that)g(hold)f(when)h(\(i\))g(the)g
(measurement)i(errors)e(are)0 1537 y(normally)11 b(distributed,)g(and)h
(either)g(\(ii\))f(the)i(model)f(is)g(linear)g(in)f(its)h(parameters)h(or)f
(\(iii\))f(the)0 1586 y(sample)j(size)g(is)f(lar)o(ge)h(enough)f(that)g(the)g
(uncertainties)g(in)g(the)g(\256tted)g(parameters)h Fh(a)g
Fj(do)f(not)0 1636 y(extend)c(outside)f(a)h(region)f(in)h(which)f(the)h
(model)g(could)f(be)h(replaced)h(by)e(a)i(suitable)e(linearized)0
1686 y(model.)22 b([Note)12 b(that)g(condition)f(\(iii\))g(does)h(not)g
(preclude)h(your)e(use)i(of)g(a)g(nonlinear)e(routine)0 1736
y(like)16 b Fq(mqrfit)f Fj(to)g Fg(\256nd)h Fj(the)g(\256tted)g(parameters.])
83 1786 y Fg(Theor)n(em)g(A.)60 b Fv(\037)365 1771 y Fs(2)365
1797 y(min)439 1786 y Fj(is)17 b(distributed)e(as)j(a)f(chi-square)g
(distribution)d(with)i Fv(N)h Fw(\000)12 b Fv(M)0 1835 y Fj(degrees)h(of)e
(freedom,)i(where)f Fv(N)17 b Fj(is)12 b(the)f(number)h(of)f(data)h(points)f
(and)h Fv(M)k Fj(is)c(the)f(number)h(of)0 1885 y(\256tted)d(parameters.)16
b(This)10 b(is)f(the)g(basic)h(theorem)g(that)f(lets)g(you)g(evaluate)h(the)f
(goodness-of-\256t)0 1935 y(of)i(the)h(model,)g(as)h(discussed)f(above)g(in)f
Fw(x)p Fj(15.1.)20 b(W)m(e)12 b(list)f(it)g(\256rst)g(to)g(remind)h(you)f
(that)g(unless)0 1985 y(the)g(goodness-of-\256t)f(is)h(credible,)g(the)g
(whole)g(estimation)f(of)h(parameters)i(is)e(suspect.)83 2035
y Fg(Theor)n(em)j(B.)58 b Fj(If)14 b Fh(a)398 2020 y Ft(S)398
2048 y Fs(\()p Ft(j)r Fs(\))456 2035 y Fj(is)h(drawn)f(from)h(the)g(universe)
f(of)g(simulated)h(data)g(sets)g(with)0 2094 y(actual)f(parameters)i
Fh(a)330 2101 y Fs(\(0\))375 2094 y Fj(,)f(then)f(the)g(probability)d
(distribution)g(of)j Fv(\016)r Fh(a)h Fw(\021)g Fh(a)1126 2079
y Ft(S)1126 2108 y Fs(\()p Ft(j)r Fs(\))1180 2094 y Fw(\000)c
Fh(a)1243 2101 y Fs(\(0\))1302 2094 y Fj(is)j(the)0 2144 y(multivariate)j
(normal)g(distribution)130 2262 y Fv(P)6 b Fu(\()p Fv(\016)r
Fh(a)o Fu(\))12 b Fv(da)291 2268 y Fs(1)316 2262 y Fv(:)7 b(:)g(:)e(da)415
2268 y Ft(M)463 2262 y Fu(=)12 b Fj(const.)d Fw(\002)h Fu(exp)726
2203 y Fr(\022)757 2262 y Fw(\000)794 2234 y Fu(1)p 794 2252
21 2 v 794 2290 a(2)820 2262 y Fv(\016)r Fh(a)f Fw(\001)f Fu([)p
Fv(\013)p Fu(])g Fw(\001)h Fv(\016)r Fh(a)1011 2203 y Fr(\023)1060
2262 y Fv(da)1104 2268 y Fs(1)1129 2262 y Fv(:)e(:)g(:)e(da)1228
2268 y Ft(M)0 2389 y Fj(where)14 b Fu([)p Fv(\013)p Fu(])e
Fj(is)h(the)g(curvature)g(matrix)g(de\256ned)h(in)f(equation)f(\(15.5.8\).)83
2439 y Fg(Theor)n(em)i(C.)57 b Fj(If)14 b Fh(a)400 2424 y Ft(S)400
2452 y Fs(\()p Ft(j)r Fs(\))458 2439 y Fj(is)g(drawn)h(from)f(the)g(universe)
h(of)f(simulated)g(data)h(sets)g(with)0 2497 y(actual)e(parameters)g
Fh(a)327 2504 y Fs(\(0\))372 2497 y Fj(,)g(then)f(the)g(quantity)f
Fu(\001)p Fv(\037)752 2482 y Fs(2)783 2497 y Fw(\021)j Fv(\037)855
2482 y Fs(2)874 2497 y Fu(\()p Fh(a)910 2504 y Fs(\()p Ft(j)r
Fs(\))954 2497 y Fu(\))c Fw(\000)g Fv(\037)1048 2482 y Fs(2)1067
2497 y Fu(\()p Fh(a)1104 2504 y Fs(\(0\))1148 2497 y Fu(\))j
Fj(is)f(distributed)0 2547 y(as)19 b(a)f(chi-square)g(distributio)o(n)d(with)
i Fv(M)23 b Fj(degrees)18 b(of)g(freedom.)38 b(Here)19 b(the)e
Fv(\037)1220 2532 y Fs(2)1239 2547 y Fj(')n(s)h(are)g(all)p
eop
%%Page: 696 8
bop 0 50 a Fj(696)422 b Fk(Chapter)10 b(15.)52 b(Modeling)10
b(of)g(Data)p 0 68 1395 2 v 0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore

@endspecial 46 x Fj(evaluated)h(using)f(the)g(\256xed)h(\(actual\))f(data)h
(set)g Fw(D)732 196 y Fs(\(0\))777 189 y Fj(.)16 b(This)11
b(theorem)f(makes)i(the)f(connection)0 239 y(between)17 b(particular)e
(values)h(of)g Fu(\001)p Fv(\037)564 223 y Fs(2)599 239 y Fj(and)g(the)g
(fraction)f(of)h(the)g(probability)d(distribution)0 288 y(that)18
b(they)g(enclose)h(as)g(an)g Fv(M)5 b Fj(-dimensional)17 b(region,)j(i.e.,)i
(the)c(con\256dence)i(level)e(of)g(the)0 338 y Fv(M)5 b Fj(-dimensional)16
b(con\256dence)i(region.)83 388 y Fg(Theor)n(em)13 b(D.)54
b Fj(Suppose)12 b(that)g Fh(a)584 373 y Ft(S)584 401 y Fs(\()p
Ft(j)r Fs(\))639 388 y Fj(is)g(drawn)h(from)f(the)g(universe)g(of)g
(simulated)g(data)0 438 y(sets)k(\(as)g(above\),)h(that)d(its)h(\256rst)g
Fv(\027)i Fj(components)f Fv(a)771 444 y Fs(1)789 438 y Fv(;)7
b(:)g(:)g(:)e(;)i(a)904 444 y Ft(\027)939 438 y Fj(are)16 b(held)f(\256xed,)i
(and)f(that)f(its)0 488 y(remaining)c Fv(M)j Fw(\000)c Fv(\027)k
Fj(components)d(are)h(varied)g(so)f(as)h(to)f(minimize)h Fv(\037)1034
473 y Fs(2)1052 488 y Fj(.)19 b(Call)11 b(this)f(minimum)0
537 y(value)j Fv(\037)129 522 y Fs(2)129 548 y Ft(\027)150
537 y Fj(.)23 b(Then)14 b Fu(\001)p Fv(\037)343 522 y Fs(2)343
548 y Ft(\027)377 537 y Fw(\021)h Fv(\037)450 522 y Fs(2)450
548 y Ft(\027)481 537 y Fw(\000)10 b Fv(\037)549 522 y Fs(2)549
549 y(min)619 537 y Fj(is)j(distributed)e(as)j(a)f(chi-square)g(distribution)
d(with)0 587 y Fv(\027)15 b Fj(degrees)f(of)e(freedom.)24 b(If)12
b(you)g(consult)g(Figure)g(15.6.4,)i(you)e(will)g(see)i(that)e(this)g
(theorem)0 637 y(connects)e(the)f Fg(pr)n(ojected)g Fu(\001)p
Fv(\037)440 622 y Fs(2)468 637 y Fj(region)f(with)g(a)i(con\256dence)g
(level.)15 b(In)9 b(the)g(\256gure,)h(a)g(point)e(that)0 687
y(is)i(held)h(\256xed)f(in)h Fv(a)280 693 y Fs(2)309 687 y
Fj(and)g(allowed)f(to)g(vary)g(in)g Fv(a)714 693 y Fs(1)744
687 y Fj(minimizing)f Fv(\037)972 672 y Fs(2)1001 687 y Fj(will)h(seek)h(out)
f(the)g(ellipse)0 737 y(whose)i(top)g(or)g(bottom)f(edge)h(is)g(tangent)g(to)
g(the)g(line)f(of)h(constant)g Fv(a)1028 743 y Fs(2)1046 737
y Fj(,)i(and)e(is)g(therefore)g(the)0 786 y(line)i(that)f(projects)h(it)g
(onto)f(the)h(smaller)o(-dimensional)f(space.)83 836 y(As)k(a)h(\256rst)e
(example,)k(let)c(us)h(consider)g(the)f(case)j Fv(\027)h Fu(=)e(1)p
Fj(,)g(where)g(we)f(want)g(to)f(\256nd)0 886 y(the)g(con\256dence)g(interval)
f(of)h(a)g(single)f(parameter)n(,)k(say)d Fv(a)890 892 y Fs(1)909
886 y Fj(.)32 b(Notice)15 b(that)g(the)h(chi-square)0 936 y(distribution)t
(with)6 b Fv(\027)13 b Fu(=)f(1)7 b Fj(degree)h(of)f(freedom)g(is)g(the)g
(same)i(distributio)o(n)t(as)f(that)f(of)f(the)h(square)0 986
y(of)k(a)g(single)g(normally)f(distributed)f(quantity)m(.)16
b(Thus)11 b Fu(\001)p Fv(\037)852 971 y Fs(2)852 996 y Ft(\027)885
986 y Fv(<)h Fu(1)f Fj(occurs)h(68.3)f(percent)g(of)g(the)0
1036 y(time)e(\(1-)p Fv(\033)h Fj(for)f(the)g(normal)g(distribution)o(\),)e
Fu(\001)p Fv(\037)697 1021 y Fs(2)697 1046 y Ft(\027)729 1036
y Fv(<)12 b Fu(4)d Fj(occurs)g(95.4)g(percent)h(of)f(the)g(time)g(\(2-)p
Fv(\033)0 1085 y Fj(for)i(the)g(normal)g(distributio)o(n\),)e
Fu(\001)p Fv(\037)539 1070 y Fs(2)539 1096 y Ft(\027)572 1085
y Fv(<)j Fu(9)f Fj(occurs)h(99.73)f(percent)g(of)g(the)g(time)g(\(3-)p
Fv(\033)h Fj(for)f(the)0 1135 y(normal)g(distribution)o(\),)e(etc.)19
b(In)11 b(this)f(manner)i(you)e(\256nd)h(the)g Fu(\001)p Fv(\037)958
1120 y Fs(2)958 1145 y Ft(\027)990 1135 y Fj(that)f(corresponds)h(to)g(your)0
1185 y(desired)f(con\256dence)i(level.)k(\(Additional)8 b(values)i(are)h
(given)f(in)g(the)g(accompanying)h(table.\))83 1235 y(Let)i
Fv(\016)r Fh(a)g Fj(be)h(a)f(change)h(in)e(the)h(parameters)h(whose)f
(\256rst)g(component)g(is)f(arbitrary)m(,)i Fv(\016)r(a)1366
1241 y Fs(1)1384 1235 y Fj(,)0 1285 y(but)d(the)g(rest)h(of)f(whose)h
(components)f(are)i(chosen)e(to)g(minimize)h(the)f Fu(\001)p
Fv(\037)1100 1270 y Fs(2)1119 1285 y Fj(.)19 b(Then)12 b(Theorem)0
1334 y(D)j(applies.)28 b(The)15 b(value)g(of)f Fu(\001)p Fv(\037)495
1319 y Fs(2)528 1334 y Fj(is)h(given)f(in)g(general)h(by)534
1432 y Fu(\001)p Fv(\037)595 1415 y Fs(2)625 1432 y Fu(=)d
Fv(\016)r Fh(a)d Fw(\001)g Fu([)p Fv(\013)p Fu(])f Fw(\001)h
Fv(\016)r Fh(a)398 b Fu(\()p Fj(15.6.1)p Fu(\))0 1530 y Fj(which)16
b(follows)g(from)g(equation)g(\(15.5.8\))g(applied)g(at)h Fv(\037)877
1515 y Fs(2)877 1542 y(min)950 1530 y Fj(where)h Fv(\014)1092
1536 y Ft(k)1130 1530 y Fu(=)g(0)p Fj(.)34 b(Since)17 b Fv(\016)r
Fh(a)0 1580 y Fj(by)12 b(hypothesis)f(minimizes)h Fv(\037)455
1565 y Fs(2)486 1580 y Fj(in)f(all)h(but)g(its)f(\256rst)h(component,)h(the)f
(second)g(through)f Fv(M)5 b Fj(th)0 1630 y(components)19 b(of)g(the)g
(normal)f(equations)h(\(15.5.9\))f(continue)g(to)h(hold.)41
b(Therefore,)22 b(the)0 1680 y(solution)17 b(of)i(\(15.5.9\))g(is)409
1854 y Fv(\016)r Fh(a)12 b Fu(=)g([)p Fv(\013)p Fu(])557 1837
y Fp(\000)p Fs(1)609 1854 y Fw(\001)630 1745 y Fr(0)630 1818
y(B)630 1843 y(B)630 1870 y(@)674 1771 y Fv(c)673 1820 y Fu(0)678
1854 y Fj(.)678 1870 y(.)678 1887 y(.)673 1937 y Fu(0)701 1745
y Fr(1)701 1818 y(C)701 1843 y(C)701 1870 y(A)749 1854 y Fu(=)f([)p
Fv(C)s Fu(])d Fw(\001)878 1745 y Fr(0)878 1818 y(B)878 1843
y(B)878 1870 y(@)923 1771 y Fv(c)921 1820 y Fu(0)927 1854 y
Fj(.)927 1870 y(.)927 1887 y(.)921 1937 y Fu(0)949 1745 y Fr(1)949
1818 y(C)949 1843 y(C)949 1870 y(A)1259 1854 y Fu(\()p Fj(15.6.2)p
Fu(\))0 2027 y Fj(where)16 b Fv(c)g Fj(is)g(one)f(arbitrary)g(constant)g
(that)h(we)g(get)f(to)g(adjust)h(to)f(make)h(\(15.6.1\))g(give)f(the)0
2077 y(desired)e(left-hand)f(value.)23 b(Plugging)11 b(\(15.6.2\))i(into)e
(\(15.6.1\))i(and)g(using)f(the)g(fact)i(that)e Fu([)p Fv(C)s
Fu(])0 2127 y Fj(and)j Fu([)p Fv(\013)p Fu(])f Fj(are)h(inverse)g(matrices)h
(of)e(one)h(another)n(,)h(we)g(get)308 2225 y Fv(c)11 b Fu(=)h
Fv(\016)r(a)423 2231 y Fs(1)442 2225 y Fv(=C)493 2231 y Fs(11)610
2225 y Fj(and)83 b Fu(\001)p Fv(\037)814 2208 y Fs(2)814 2235
y Ft(\027)846 2225 y Fu(=)12 b(\()p Fv(\016)r(a)948 2231 y
Fs(1)967 2225 y Fu(\))983 2208 y Fs(2)1001 2225 y Fv(=C)1052
2231 y Fs(11)1259 2225 y Fu(\()p Fj(15.6.3)p Fu(\))0 2287 y
Fj(or)492 2350 y Fv(\016)r(a)534 2356 y Fs(1)564 2350 y Fu(=)g
Fw(\006)640 2312 y Fr(p)p 682 2312 82 2 v 38 x Fu(\001)p Fv(\037)743
2338 y Fs(2)743 2360 y Ft(\027)770 2311 y Fr(p)p 811 2311 65
2 v 811 2350 a Fv(C)841 2356 y Fs(11)1259 2350 y Fu(\()p Fj(15.6.4)p
Fu(\))83 2448 y Fj(At)19 b(last!)40 b(A)19 b(relation)f(between)i(the)e
(con\256dence)i(interval)e Fw(\006)p Fv(\016)r(a)1097 2454
y Fs(1)1135 2448 y Fj(and)h(the)g(formal)0 2497 y(standard)9
b(error)f Fv(\033)263 2503 y Fs(1)293 2497 y Fw(\021)337 2465
y(p)p 372 2465 V 32 x Fv(C)402 2503 y Fs(11)436 2497 y Fj(.)15
b(Not)9 b(unreasonably)m(,)g(we)g(\256nd)g(that)f(the)h(68)g(percent)g
(con\256dence)0 2547 y(interval)j(is)h Fw(\006)p Fv(\033)237
2553 y Fs(1)255 2547 y Fj(,)i(the)d(95)h(percent)g(con\256dence)h(interval)e
(is)h Fw(\006)p Fu(2)p Fv(\033)984 2553 y Fs(1)1003 2547 y
Fj(,)h(etc.)p eop
%%Page: 697 9
bop 178 50 a Fk(15.6)10 b(Con\256dence)f(Limits)i(on)f(Estimated)g(Model)g
(Parameters)220 b Fj(697)p 0 68 1395 2 v 0 143 a @beginspecial
@setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial 60 204 1275 3 v 60 284 3 80 v 152
261 a Fu(\001)p Fv(\037)213 246 y Fs(2)242 261 y Fj(as)11 b(a)g(Function)e
(of)h(Con\256dence)g(Level)h(and)f(Degrees)i(of)e(Freedom)p
1332 284 V 60 285 1275 2 v 60 343 3 59 v 262 343 2 59 v 786
324 a Fv(\027)p 1332 343 3 59 v 60 423 3 80 v 146 401 a(p)p
262 423 2 80 v 168 w Fj(1)154 b(2)g(3)g(4)g(5)g(6)p 1332 423
3 80 v 60 424 1275 2 v 60 482 3 59 v 114 464 a(68.3\045)p 262
482 2 59 v 92 w(1.00)102 b(2.30)g(3.53)g(4.72)g(5.89)g(7.04)p
1332 482 3 59 v 60 540 V 114 522 a(90\045)p 262 540 2 59 v
118 w(2.71)g(4.61)g(6.25)g(7.78)g(9.24)g(10.6)p 1332 540 3
59 v 60 599 V 114 580 a(95.4\045)p 262 599 2 59 v 87 w(4.00)g(6.17)g(8.02)g
(9.70)g(11.3)g(12.8)p 1332 599 3 59 v 60 657 V 114 638 a(99\045)p
262 657 2 59 v 118 w(6.63)g(9.21)g(11.3)g(13.3)g(15.1)g(16.8)p
1332 657 3 59 v 60 715 V 114 696 a(99.73\045)p 262 715 2 59
v 66 w(9.00)g(11.8)g(14.2)g(16.3)g(18.2)g(20.1)p 1332 715 3
59 v 60 773 V 114 754 a(99.99\045)p 262 773 2 59 v 66 w(15.1)g(18.4)g(21.1)g
(23.5)g(25.7)g(27.8)p 1332 773 3 59 v 60 775 1275 3 v 83 907
a(These)17 b(considerations)d(hold)g(not)g(just)h(for)f(the)i(individual)c
(parameters)17 b Fv(a)1219 913 y Ft(i)1232 907 y Fj(,)g(but)e(also)0
957 y(for)h(any)h(linear)f(combination)f(of)i(them:)27 b(If)531
1075 y Fv(b)11 b Fw(\021)617 1023 y Ft(M)604 1036 y Fr(X)604
1125 y Ft(k)q Fs(=1)672 1075 y Fv(c)690 1081 y Ft(i)703 1075
y Fv(a)725 1081 y Ft(i)751 1075 y Fu(=)g Fh(c)f Fw(\001)f Fh(a)395
b Fu(\()p Fj(15.6.5)p Fu(\))0 1191 y Fj(then)15 b(the)h(68)f(percent)g
(con\256dence)i(interval)d(on)i Fv(b)f Fj(is)538 1270 y Fv(\016)r(b)c
Fu(=)h Fw(\006)663 1232 y Fr(p)p 705 1232 153 2 v 38 x Fh(c)d
Fw(\001)g Fu([)p Fv(C)s Fu(])f Fw(\001)h Fh(c)402 b Fu(\()p
Fj(15.6.6)p Fu(\))83 1348 y Fj(However)n(,)16 b(these)e(simple,)h
(normal-sounding)d(numerical)i(relationships)e(do)i Fg(not)f
Fj(hold)0 1398 y(in)d(the)h(case)h Fv(\027)i(>)e Fu(1)296 1394
y Fc([3)r(])335 1398 y Fj(.)17 b(In)10 b(particular)n(,)h Fu(\001)p
Fv(\037)647 1383 y Fs(2)677 1398 y Fu(=)i(1)d Fj(is)h(not)f(the)g(boundary)m
(,)g(nor)h(does)g(it)e(project)0 1448 y(onto)k(the)h(boundary)m(,)g(of)g(a)g
(68.3)g(percent)g(con\256dence)h(region)e(when)h Fv(\027)j(>)e
Fu(1)p Fj(.)26 b(If)14 b(you)f(want)0 1498 y(to)j(calculate)h(not)e
(con\256dence)j(intervals)d(in)h(one)g(parameter)n(,)k(but)15
b(con\256dence)i(ellipses)f(in)0 1548 y(two)e(parameters)h(jointly)m(,)f(or)g
(ellipsoids)f(in)h(three,)i(or)e(higher)n(,)h(then)f(you)g(must)g(follow)f
(the)0 1597 y(following)d(prescription)h(for)h(implementing)g(Theorems)h(C)g
(and)f(D)h(above:)87 1692 y Fw(\017)21 b Fj(Let)8 b Fv(\027)i
Fj(be)f(the)f(number)g(of)f(\256tted)h(parameters)h(whose)f(joint)f
(con\256dence)i(region)e(you)129 1742 y(wish)h(to)f(display)m(,)i
Fv(\027)14 b Fw(\024)p Fv(M)5 b Fj(.)14 b(Call)8 b(these)h(parameters)h(the)e
(\252parameters)i(of)e(interest.\272)87 1792 y Fw(\017)21 b
Fj(Let)12 b Fv(p)f Fj(be)h(the)f(con\256dence)i(limit)d(desired,)i(e.g.,)h
Fv(p)f Fu(=)h(0)p Fv(:)p Fu(68)e Fj(or)g Fv(p)h Fu(=)h(0)p
Fv(:)p Fu(95)p Fj(.)87 1842 y Fw(\017)21 b Fj(Find)11 b Fu(\001)g
Fj(\(i.e.,)i Fu(\001)p Fv(\037)411 1827 y Fs(2)429 1842 y Fj(\))f(such)g
(that)f(the)g(probability)e(of)j(a)g(chi-square)g(variable)f(with)129
1892 y Fv(\027)i Fj(degrees)f(of)f(freedom)g(being)g(less)g(than)g
Fu(\001)g Fj(is)g Fv(p)p Fj(.)18 b(For)11 b(some)g(useful)g(values)g(of)g
Fv(p)129 1941 y Fj(and)h Fv(\027)s Fj(,)h Fu(\001)f Fj(is)h(given)f(in)g(the)
g(table.)22 b(For)12 b(other)g(values,)i(you)e(can)h(use)g(the)f(routine)129
1991 y Fq(gammq)h Fj(and)h(a)g(simple)g(root-\256nding)e(routine)g(\(e.g.,)k
(bisection\))d(to)h(\256nd)f Fu(\001)h Fj(such)129 2041 y(that)h
Fq(gammq)o Fu(\()p Fv(\027)s(=)p Fu(2)p Fv(;)d Fu(\001)p Fv(=)p
Fu(2\))17 b(=)g(1)11 b Fw(\000)h Fv(p)p Fj(.)87 2091 y Fw(\017)21
b Fj(T)m(ake)c(the)e Fv(M)h Fw(\002)c Fv(M)21 b Fj(covariance)16
b(matrix)g Fu([)p Fv(C)s Fu(])f(=)i([)p Fv(\013)p Fu(])944
2076 y Fp(\000)p Fs(1)1003 2091 y Fj(of)f(the)f(chi-square)h(\256t.)129
2141 y(Copy)f(the)h(intersection)f(of)h(the)h Fv(\027)h Fj(rows)e(and)h
(columns)f(corresponding)f(to)g(the)129 2191 y(parameters)e(of)f(interest)g
(into)f(a)i Fv(\027)f Fw(\002)f Fv(\027)j Fj(matrix)e(denoted)g
Fu([)p Fv(C)1031 2197 y Fs(pro)r(j)1092 2191 y Fu(])p Fj(.)87
2240 y Fw(\017)21 b Fj(Invert)8 b(the)h(matrix)f Fu([)p Fv(C)456
2246 y Fs(pro)r(j)518 2240 y Fu(])p Fj(.)14 b(\(In)9 b(the)g(one-dimensional)
f(case)i(this)e(was)i(just)e(taking)129 2290 y(the)15 b(reciprocal)h(of)g
(the)f(element)i Fv(C)672 2296 y Fs(11)707 2290 y Fj(.\))87
2340 y Fw(\017)k Fj(The)10 b(equation)f(for)h(the)f(elliptical)g(boundary)g
(of)g(your)g(desired)h(con\256dence)h(region)129 2390 y(in)j(the)g
Fv(\027)s Fj(-dimensional)f(subspace)i(of)f(interest)g(is)555
2469 y Fu(\001)d(=)h Fv(\016)r Fh(a)685 2451 y Fp(0)706 2469
y Fw(\001)d Fu([)p Fv(C)769 2475 y Fs(pro)r(j)830 2469 y Fu(])842
2451 y Fp(\000)p Fs(1)896 2469 y Fw(\001)f Fv(\016)r Fh(a)957
2451 y Fp(0)1259 2469 y Fu(\()p Fj(15.6.7)p Fu(\))129 2547
y Fj(where)k Fv(\016)r Fh(a)283 2532 y Fp(0)306 2547 y Fj(is)g(the)f
Fv(\027)s Fj(-dimensional)f(vector)h(of)h(parameters)h(of)e(interest.)p
eop
%%Page: 698 10
bop 0 50 a Fj(698)422 b Fk(Chapter)10 b(15.)52 b(Modeling)10
b(of)g(Data)p 0 68 1395 2 v 0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore

@endspecial 154 964 a @beginspecial 187 @llx 373 @lly 448
@urx 569 @ury 2610 @rwi @setspecial
%%BeginDocument: epsf/fig15x6x5.ps
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
/TX {pop} def
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def	% - cf flatness
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
[/_Symbol/Symbol 0 0 0 TZ
[/_Times-Bold/Times-Bold 0 0 1 TZ
[/_Times-Italic/Times-Italic 0 0 1 TZ
[/_Times-Roman/Times-Roman 0 0 1 TZ
0 A
0 R
0 G
0 i 0 J 0 j 0.5 w 4 M []0 d
0 D
200.01 557.1843 m
200.01 375.1702 l
S
427.4044 385.5287 m
189.6515 385.5287 l
S
u
1.5 w
299.5732 522.7622 m
339.427 548.5945 386.5865 550.9767 400.415 529.6424 c
414.4546 507.9823 395.2493 467.692 353.8688 440.87 c
312.4883 414.048 267.0667 412.8229 253.027 434.483 c
238.9874 456.1431 258.1927 495.9402 299.5732 522.7622 c
s
1 w [3 2 ]0 d
326.4744 482.0627 m
S
U
1.5 w []0 d
326.4744 482.0627 m
S
1 w
351.4317 444.8588 m
326.4744 482.0627 l
396.1278 526.8385 l
S
0.5 w
384.25 455.25 m
394.375 455.25 l
S
0 To
1 0 0 1 389.375 458.75 0 Tp
TP
-2.25 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Roman 9 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 Tq
11 0 Tl
0 Tc
0 Tw
(1\r) Tx 
-2.7364 -11 Td
/_Times-Italic 9 Tf
(w) Tx 0 -80 Tk 
/_Times-Roman 6.5 Tf
-1.5 Ts
(2) Tx 
(\r) TX 
TO
0 To
1 0 0 1 317.5 465 0 Tp
TP
0 Tr
/_Times-Bold 9 Tf
0 Ts
0 Ta
(V) Tx 
/_Times-Roman 6.5 Tf
-1.5 Ts
(\(2\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 326.5 496.75 0 Tp
TP
0 Tr
/_Times-Bold 9 Tf
0 Ts
(V) Tx 
/_Times-Roman 6.5 Tf
-1.5 Ts
(\(1\)) Tx 
(\r) TX 
TO
0 To
0.8431 0.5377 -0.5377 0.8431 284.7335 518.407 0 Tp
TP
0 Tr
/_Symbol 9 Tf
0 Ts
(Dc) Tx 
/_Symbol 6.5 Tf
3 Ts
(2) Tx 
/_Symbol 9 Tf
0 Ts
( = 1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 197.375 560.25 0 Tp
TP
0 Tr
/_Times-Italic 9 Tf
(a) Tx 
/_Times-Roman 6.5 Tf
-1.5 Ts
(2) Tx 
(\r) TX 
TO
0 To
1 0 0 1 430.5 383.5 0 Tp
TP
0 Tr
/_Times-Italic 9 Tf
0 Ts
(a) Tx 
/_Times-Roman 6.5 Tf
-1.5 Ts
(1) Tx 
(\r) TX 
TO
u
351.1947 445.2491 m
348.2827 445.1064 L
353.6961 441.5086 L
353.6961 441.5086 L
352.4389 447.8858 L
351.1947 445.2491 L
f
U
u
335.8197 468.1241 m
332.9077 467.9814 L
338.3211 464.3836 L
338.3211 464.3836 L
337.0639 470.7608 L
335.8197 468.1241 L
f
U
u
347.7518 495.691 m
347.8521 492.7773 L
351.5285 498.1376 L
351.5285 498.1376 L
345.1337 496.9736 L
347.7518 495.691 L
f
U
0 R
0 G
2 w
347.5 495.625 m
326.4744 482.0627 l
335.8125 468.1875 l
S
u
0 O
0 g
1 w
395.9393 526.691 m
396.0396 523.7773 L
399.716 529.1376 L
399.716 529.1376 L
393.3212 527.9736 L
395.9393 526.691 L
f
U
u
1 g
381.75 449.75 m
381.75 460.5 L
363 460.5 L
363 449.75 L
381.75 449.75 L
f
0 R
0 G
372.375 455.875 m
S
U
0 To
1 0 0 1 359 452 0 Tp
TP
0 Tr
0 O
0 g
/_Times-Roman 9 Tf
0 Ts
9 0 Tl
(length) Tx 
(\r) TX 
TO
1 g
389.5 509.75 m
389.5 524.5 L
377.75 524.5 L
377.75 509.75 L
389.5 509.75 L
f
381.5 517.125 m
F
0 To
1 0 0 1 354.25 516.5 0 Tp
TP
0 Tr
0 g
(length) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
379.5 519.75 m
388.125 519.75 l
S
0 To
1 0 0 1 384.125 523.25 0 Tp
TP
-2.25 0 Td
0 Tr
0 O
0 g
1 w
1 Ta
11 0 Tl
(1\r) Tx 
-2.3765 -11 Td
/_Times-Italic 9 Tf
(w) Tx 
/_Times-Roman 6.5 Tf
-1.5 Ts
(1) Tx 
(\r) TX 
TO
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 0 1026 a Fe(Figure)g(15.6.5.)34 b(Relation)10
b(of)g(the)g(con\256dence)e(region)h(ellipse)h Fn(\001)p Fo(\037)832
1014 y Fm(2)861 1026 y Fn(=)i(1)e Fe(to)g(quantities)f(computed)f(by)i
(singular)0 1064 y(value)d(decomposition.)j(The)e(vectors)f
Fd(V)484 1071 y Fm(\()p Fl(i)p Fm(\))529 1064 y Fe(are)h(unit)f(vectors)g
(along)g(the)h(principal)f(axes)g(of)h(the)g(con\256dence)e(region.)0
1101 y(The)k(semi-axes)f(have)g(lengths)h(equal)f(to)h(the)g(reciprocal)f(of)
i(the)f(singular)f(values)g Fo(w)1024 1106 y Fl(i)1038 1101
y Fe(.)18 b(If)11 b(the)f(axes)f(are)h(all)h(scaled)0 1138
y(by)g(some)h(constant)e(factor)i Fo(\013)p Fe(,)h Fn(\001)p
Fo(\037)435 1127 y Fm(2)465 1138 y Fe(is)f(scaled)f(by)h(the)g(factor)f
Fo(\013)805 1127 y Fm(2)822 1138 y Fe(.)83 1223 y Fj(If)k(you)f(are)i
(confused)f(at)g(this)f(point,)h(you)g(may)g(\256nd)g(it)f(helpful)g(to)g
(compare)i(Figure)0 1273 y(15.6.4)e(and)h(the)f(accompanying)h(table,)h
(considering)d(the)h(case)i Fv(M)21 b Fu(=)15 b(2)g Fj(with)e
Fv(\027)18 b Fu(=)d(1)g Fj(and)0 1323 y Fv(\027)i Fu(=)e(2)p
Fj(.)27 b(Y)l(ou)13 b(should)g(be)h(able)g(to)g(verify)f(the)h(following)d
(statements:)23 b(\(i\))13 b(The)h(horizontal)0 1372 y(band)i(between)g
Fv(C)i Fj(and)e Fv(C)408 1357 y Fp(0)435 1372 y Fj(contains)f(99)h(percent)g
(of)f(the)h(probability)d(distribution)o(,)i(so)h(it)0 1422
y(is)g(a)g(con\256dence)h(limit)d(on)i Fv(a)448 1428 y Fs(2)482
1422 y Fj(alone)g(at)g(this)f(level)h(of)f(con\256dence.)33
b(\(ii\))15 b(Ditto)f(the)i(band)0 1472 y(between)h Fv(B)j
Fj(and)d Fv(B)316 1457 y Fp(0)346 1472 y Fj(at)g(the)g(90)g(percent)g
(con\256dence)h(level.)35 b(\(iii\))16 b(The)i(dashed)f(ellipse,)0
1522 y(labeled)10 b(by)g Fu(\001)p Fv(\037)243 1507 y Fs(2)273
1522 y Fu(=)i(2)p Fv(:)p Fu(30)p Fj(,)d(contains)h(68.3)g(percent)h(of)e(the)
i(probability)c(distribution,)g(so)k(it)e(is)0 1572 y(a)k(con\256dence)g
(region)f(for)g Fv(a)425 1578 y Fs(1)456 1572 y Fj(and)g Fv(a)550
1578 y Fs(2)581 1572 y Fj(jointly)m(,)g(at)g(this)f(level)i(of)f
(con\256dence.)0 1664 y Ff(Con\256dence)j(Limits)f(from)g(Singular)h(V)n
(alue)f(Decomposition)83 1754 y Fj(When)7 b(you)f(have)i(obtained)e(your)g
Fv(\037)603 1739 y Fs(2)628 1754 y Fj(\256t)h(by)f(singular)g(value)h
(decomposition)e(\()p Fw(x)q Fj(15.4\),)i(the)0 1804 y(information)f(about)i
(the)g(\256t')n(s)f(formal)h(errors)g(comes)h(packaged)g(in)e(a)i(somewhat)g
(dif)o(ferent,)f(but)0 1853 y(generally)j(more)h(convenient,)g(form.)19
b(The)12 b(columns)f(of)g(the)h(matrix)f Fh(V)g Fj(are)i(an)f(orthonormal)0
1903 y(set)19 b(of)f Fv(M)23 b Fj(vectors)18 b(that)g(are)h(the)f(principal)f
(axes)j(of)e(the)g Fu(\001)p Fv(\037)980 1888 y Fs(2)1017 1903
y Fu(=)h Fj(constant)f(ellipsoids.)0 1953 y(W)m(e)c(denote)g(the)g(columns)g
(as)g Fh(V)491 1960 y Fs(\(1\))543 1953 y Fv(:)7 b(:)g(:)e
Fh(V)628 1960 y Fs(\()p Ft(M)s Fs(\))691 1953 y Fj(.)26 b(The)15
b(lengths)e(of)g(those)h(axes)h(are)g(inversely)0 2003 y(proportional)7
b(to)i(the)g(corresponding)f(singular)g(values)h Fv(w)852 2009
y Fs(1)878 2003 y Fv(:)e(:)g(:)e(w)963 2009 y Ft(M)1000 2003
y Fj(;)k(see)h(Figure)f(15.6.5.)15 b(The)0 2053 y(boundaries)g(of)g(the)h
(ellipsoids)e(are)i(thus)f(given)g(by)292 2121 y Fu(\001)p
Fv(\037)353 2104 y Fs(2)383 2121 y Fu(=)c Fv(w)457 2104 y Fs(2)456
2132 y(1)476 2121 y Fu(\()p Fh(V)522 2128 y Fs(\(1\))576 2121
y Fw(\001)d Fv(\016)r Fh(a)p Fu(\))653 2104 y Fs(2)681 2121
y Fu(+)i Fw(\001)d(\001)g(\001)g Fu(+)j Fv(w)853 2104 y Fs(2)852
2132 y Ft(M)889 2121 y Fu(\()p Fh(V)935 2128 y Fs(\()p Ft(M)s
Fs(\))1007 2121 y Fw(\001)e Fv(\016)r Fh(a)p Fu(\))1084 2104
y Fs(2)1259 2121 y Fu(\()p Fj(15.6.8)p Fu(\))0 2190 y Fj(which)13
b(is)h(the)g(justi\256cation)e(for)h(writing)f(equation)g(\(15.4.18\))i
(above.)26 b(Keep)14 b(in)f(mind)h(that)0 2240 y(it)g(is)g
Fg(much)h Fj(easier)g(to)f(plot)f(an)i(ellipsoid)e(given)h(a)h(list)f(of)g
(its)g(vector)g(principal)f(axes,)k(than)0 2290 y(given)g(its)g(matrix)g
(quadratic)h(form!)83 2339 y(The)12 b(formula)e(for)h(the)g(covariance)g
(matrix)g Fu([)p Fv(C)s Fu(])f Fj(in)g(terms)h(of)g(the)g(columns)g
Fh(V)1236 2346 y Fs(\()p Ft(i)p Fs(\))1287 2339 y Fj(is)489
2453 y Fu([)p Fv(C)s Fu(])f(=)612 2401 y Ft(M)600 2414 y Fr(X)603
2502 y Ft(i)p Fs(=1)686 2425 y Fu(1)p 671 2443 50 2 v 671 2481
a Fv(w)702 2467 y Fs(2)701 2493 y Ft(i)726 2453 y Fh(V)756
2460 y Fs(\()p Ft(i)p Fs(\))805 2453 y Fw(\012)f Fh(V)876 2460
y Fs(\()p Ft(i)p Fs(\))1259 2453 y Fu(\()p Fj(15.6.9)p Fu(\))0
2547 y Fj(or)n(,)i(in)e(components,)p eop
%%Page: 699 11
bop 442 50 a Fk(15.7)20 b(Robust)10 b(Estimation)484 b Fj(699)p
0 68 1395 2 v 0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial
479 223 a Fv(C)509 229 y Ft(j)r(k)556 223 y Fu(=)612 171 y
Ft(M)600 184 y Fr(X)603 272 y Ft(i)p Fs(=1)686 195 y Fu(1)p
671 214 50 2 v 671 252 a Fv(w)702 237 y Fs(2)701 263 y Ft(i)726
223 y Fv(V)750 229 y Ft(j)r(i)779 223 y Fv(V)803 229 y Ft(k)q(i)1238
223 y Fu(\()p Fj(15.6.10)p Fu(\))0 445 y Fc(CITED)13 b(REFERENCES)g(AND)f
(FUR)o(THER)i(READING:)0 494 y(Efron,)19 b(B.)f(1982,)h Fa(The)g(Jackknife,)f
(the)g(Bootstrap,)i(and)f(Other)f(Resampling)i(Plans)f Fc(\(Philadelph)q(ia)q
(:)80 536 y(S.I.A.M.\).)d([1])0 586 y(Efron,)c(B.,)f(and)h(T)o(ibshirani,)i
(R.)d(1986,)i Fa(Statistical)f(Science)g Fc(vol.)f(1,)h(pp.)f(54\26177.)j
([2])0 635 y(A)o(vni,)f(Y)l(.)e(1976,)j Fa(Astrophysical)e(Journal)p
Fc(,)i(vol.)e(210,)h(pp.)g(642\261646.)i([3])0 685 y(Lampton,)d(M.,)d
(Margon,)i(M.,)f(and)g(Bowyer)n(,)h(S.)f(1976,)h Fa(Astrophysical)g(Journal)p
Fc(,)g(vol.)f(208,)h(pp.)g(177\261190.)0 735 y(Brownlee,)i(K.A.)d(1965,)i
Fa(Statistical)g(Theory)f(and)h(Methodology)p Fc(,)h(2nd)e(ed.)g(\(New)g(Y)m
(ork:)f(Wiley\).)0 785 y(Martin,)i(B.R.)g(1971,)h Fa(Statistics)e(for)h
(Physicists)e Fc(\(New)h(Y)m(ork:)h(Academic)f(Press\).)0 1028
y Fi(15.7)38 b(Robust)22 b(Estimation)83 1152 y Fj(The)10 b(concept)g(of)f
Fg(r)n(obustness)g Fj(has)h(been)g(mentioned)f(in)f(passing)h(several)h
(times)g(already)m(.)0 1202 y(In)g Fw(x)q Fj(14.1)g(we)h(noted)e(that)h(the)g
(median)h(was)g(a)g(more)g(robust)e(estimator)h(of)g(central)h(value)f(than)0
1252 y(the)h(mean;)h(in)f Fw(x)p Fj(14.6)g(it)f(was)i(mentioned)f(that)f
(rank)h(correlation)f(is)h(more)h(robust)e(than)g(linear)0
1302 y(correlation.)29 b(The)16 b(concept)g(of)f(outlier)e(points)h(as)i
(exceptions)f(to)g(a)h(Gaussian)f(model)g(for)0 1352 y(experimental)h(error)g
(was)h(discussed)f(in)g Fw(x)p Fj(15.1.)83 1402 y(The)h(term)f
(\252robust\272)g(was)h(coined)f(in)g(statistics)f(by)h(G.E.P)-5
b(.)18 b(Box)d(in)h(1953.)32 b(V)-5 b(arious)0 1451 y(de\256nitions)12
b(of)h(greater)h(or)f(lesser)i(mathematical)f(rigor)e(are)j(possible)d(for)h
(the)h(term,)h(but)d(in)0 1501 y(general,)g(referring)f(to)g(a)g(statistical)
g(estimator)n(,)g(it)g(means)h(\252insensitive)f(to)g(small)g(departures)0
1551 y(from)e(the)g(idealized)h(assumptions)f(for)g(which)g(the)g(estimator)g
(is)g(optimized.\272)1159 1547 y Fc([1,2)r(])1235 1551 y Fj(The)h(word)0
1601 y(\252small\272)16 b(can)f(have)h(two)e(dif)o(ferent)g(interpretations,)
g(both)g(important:)22 b(either)14 b(fractionally)0 1651 y(small)e
(departures)g(for)g(all)f(data)i(points,)e(or)h(else)h(fractionally)d(lar)o
(ge)j(departures)f(for)f(a)i(small)0 1700 y(number)f(of)f(data)h(points.)19
b(It)11 b(is)h(the)f(latter)h(interpretation,)e(leading)h(to)g(the)h(notion)e
(of)h(outlier)0 1750 y(points,)h(that)g(is)g(generally)h(the)f(most)g
(stressful)g(for)g(statistical)g(procedures.)83 1800 y(Statisticians)7
b(have)i(developed)f(various)f(sorts)h(of)g(robust)f(statistical)g
(estimators.)14 b(Many)m(,)0 1850 y(if)g(not)f(most,)j(can)f(be)g(grouped)e
(in)h(one)g(of)g(three)h(categories.)83 1900 y Fg(M-estimates)d
Fj(follow)f(from)i(maximum-likelihood)e(ar)o(guments)i(very)g(much)g(as)h
(equa-)0 1949 y(tions)8 b(\(15.1.5\))i(and)f(\(15.1.7\))g(followed)g(from)g
(equation)g(\(15.1.3\).)14 b(M-estimates)c(are)h(usually)0
1999 y(the)18 b(most)f(relevant)h(class)g(for)f(model-\256tting,)h(that)f
(is,)j(estimation)c(of)i(parameters.)38 b(W)m(e)0 2049 y(therefore)14
b(consider)g(these)h(estimates)g(in)e(some)i(detail)f(below)m(.)83
2099 y Fg(L-estimates)20 b Fj(are)h(\252linear)f(combinations)f(of)h(order)g
(statistics.\272)45 b(These)22 b(are)f(most)0 2149 y(applicable)c(to)f
(estimations)h(of)f(central)h(value)g(and)h(central)f(tendency)m(,)i(though)d
(they)g(can)0 2199 y(occasionally)21 b(be)h(applied)f(to)h(some)g(problems)f
(in)h(estimation)e(of)i(parameters.)51 b(T)m(wo)0 2248 y(\252typical\272)13
b(L-estimates)h(will)e(give)g(you)h(the)g(general)g(idea.)24
b(They)13 b(are)h(\(i\))e(the)h(median,)i(and)0 2298 y(\(ii\))d
Fg(T)n(ukey')-5 b(s)12 b(trimean)p Fj(,)h(de\256ned)h(as)f(the)g(weighted)f
(average)i(of)f(the)f(\256rst,)i(second,)g(and)f(third)0 2348
y(quartile)d(points)g(in)h(a)h(distribution)o(,)e(with)g(weights)h(1/4,)g
(1/2,)g(and)g(1/4,)h(respectively)m(.)83 2398 y Fg(R-estimates)k
Fj(are)g(estimates)g(based)h(on)e(rank)h(tests.)31 b(For)16
b(example,)i(the)e(equality)e(or)0 2448 y(inequality)d(of)h(two)g
(distribution)o(s)e(can)k(be)f(estimated)f(by)h(the)f Fg(W)n(ilcoxon)f(test)h
Fj(of)g(computing)0 2497 y(the)19 b(mean)i(rank)e(of)h(one)f(distribution)d
(in)j(a)h(combined)g(sample)g(of)f(both)g(distributio)o(ns.)0
2547 y(The)14 b(Kolmogorov-Smirnov)d(statistic)h(\(equation)g(14.3.6\))h(and)
h(the)f(Spearman)i(rank-order)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
