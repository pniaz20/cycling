%!PS-Adobe-2.0
%%Creator: dvips 5.47 Copyright 1986-91 Radical Eye Software
%%Pages: 6 1
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Roman Helvetica-Oblique Helvetica-BoldOblique
%%+ Times-Italic Helvetica
%%EndComments
%%BeginProcSet: tex.pro
/TeXDict 200 dict def TeXDict begin /N /def load def /B{bind def}N /S /exch
load def /X{S N}B /TR /translate load N /isls false N /vsize 10 N /@rigin{
isls{[0 1 -1 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
Resolution VResolution vsize neg mul TR matrix currentmatrix dup dup 4 get
round 4 exch put dup dup 5 get round 5 exch put setmatrix}N /@letter{/vsize 10
N}B /@landscape{/isls true N /vsize -1 N}B /@a4{/vsize 10.6929133858 N}B /@a3{
/vsize 15.5531 N}B /@ledger{/vsize 16 N}B /@legal{/vsize 13 N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0 0]N
/FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn begin
/FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X array
/BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo setfont}2
array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx FMat N df-tail}
B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{pop nn dup definefont
setfont}B /ch-width{ch-data dup length 5 sub get}B /ch-height{ch-data dup
length 4 sub get}B /ch-xoff{128 ch-data dup length 3 sub get sub}B /ch-yoff{
ch-data dup length 2 sub get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B
/ch-image{ch-data dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0
N /rw 0 N /rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S
dup /base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0
ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{ch-image}
imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn /base get cc ctr
put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1 sub dup 2 index S get sf
div put}if put /ctr ctr 1 add N}B /I{cc 1 add D}B /bop{userdict /bop-hook
known{bop-hook}if /SI save N @rigin 0 0 moveto}N /eop{clear SI restore
showpage userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if /VResolution X /Resolution X 1000 div /DVImag X /IE 256
array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for}N /p /show load N
/RMat[1 0 0 -1 0 0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X
/rulex X V}B /V statusdict begin /product where{pop product dup length 7 ge{0
7 getinterval(Display)eq}{pop false}ifelse}{false}ifelse end{{gsave TR -.1 -.1
TR 1 1 scale rulex ruley false RMat{BDot}imagemask grestore}}{{gsave TR -.1
-.1 TR rulex ruley scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /a{
moveto}B /delta 0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{
S p tail}B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B
/j{3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w
}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{clear SS restore}B end
%%EndProcSet
%%BeginProcSet: texps.pro
TeXDict begin /rf{655360 div mul Resolution mul 7227 div /PixPerEm X findfont
dup length 1 add dict /nn X{1 index /FID ne{nn 3 1 roll put}{pop pop}ifelse}
forall 256 dict begin nn /Encoding get 0 1 255{2 copy get 3 index 2 index get
1000 mul PixPerEm div def pop}for pop pop nn /Metrics currentdict put end
/fontname X /nn dup nn definefont[PixPerEm 0 0 PixPerEm neg 0 0]makefont N
fontname{/foo setfont}2 array copy cvx N fontname load 0 nn put}N
/ObliqueSlant{dup sin S cos div neg}B
/SlantFont{/foo X[1 0 foo 1 0 0] TransFont}N
/ExtendFont{/foo X 3 2 roll[S{foo div}forall]3 1 roll[foo 0 0 1 0 0]
TransFont}N
/ExpandFont{/foo X 3 2 roll[S{foo div}forall]3 1 roll[foo 0 0 foo 0 0]
TransFont}N
/TransFont{S findfont S makefont dup length dict /nn X{1 index
/FID ne{nn 3 1 roll put}{pop pop}ifelse}forall dup nn definefont pop}N end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N /vs
792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP false N /BBcalc false N
/p 3 def}B /@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{
@scaleunit div /vsc X}B /@hsize{/hs X /CLIP true N}B /@vsize{/vs X /CLIP true
N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{10 div /rwi X}
B /@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X /BBcalc true N}B
/magscale true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{md begin /letter{}N /note{}N /legal{}N /od{txpose 1 0 mtx
defaultmatrix dtransform S atan/pa X newpath clippath mark{transform{
itransform moveto}}{transform{itransform lineto}}{6 -2 roll transform 6 -2
roll transform 6 -2 roll transform{itransform 6 2 roll itransform 6 2 roll
itransform 6 2 roll curveto}}{{closepath}}pathforall newpath counttomark array
astore /gc xdf pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{
PaintBlack}if}N /txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR
pop 1 -1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0 TR}if
yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR pop pop 270
rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip not
and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg sub neg 0 TR}if yflip xflip
not and{TR pop pop 270 rotate ppr 2 get ppr 0 get neg sub neg 0 S TR}if}
ifelse scaleby96{ppr aload pop 4 -1 roll add 2 div 3 1 roll add 2 div 2 copy
TR .96 dup scale neg S neg S TR}if}N /cp{pop pop showpage pm restore}N end}if}
if}N /normalscale{Resolution 72 div VResolution 72 div neg scale magscale{
DVImag dup scale}if}N /psfts{S 65536 div N}N /startTexFig{/psf$SavedState save
N userdict maxlength dict begin /magscale false def normalscale currentpoint
TR /psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx psf$llx
sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy scale psf$cx
psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR /showpage{}N
/erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{psf$llx psf$lly
psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2 roll moveto 6 -1 roll
S lineto S lineto S lineto closepath clip newpath moveto}N /endTexFig{end
psf$SavedState restore}N /@beginspecial{SDict begin /SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults}N /@setspecial{CLIP{newpath 0 0
moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR
hsc vsc scale ang rotate BBcalc{rwi urx llx sub div dup scale llx neg lly neg
TR}if /showpage{}N /erasepage{}N /copypage{}N newpath}N /@endspecial{grestore
clear SpecialSave restore end}N /@defspecial{SDict begin}N /@fedspecial{end}B
/li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{/SaveX currentpoint /SaveY X N 1
setlinecap newpath}N /st{stroke SaveX SaveY moveto}N /fil{fill SaveX SaveY
moveto}N /ellipse{/endangle X /startangle X /yrad X /xrad X /savematrix matrix
currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc savematrix
setmatrix}N end
%%EndProcSet
TeXDict begin 1000 300 300 @start /Fa [ 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 12 18 18 30
22 7 11 11 13 19 9 11 9 9 18 18 18 18 18 18 18 18 18 18 9 9
19 19 19 18 34 22 22 24 24 22 20 26 24 9 17 22 18 28 24 26
22 26 24 22 20 24 22 31 22 22 20 9 9 9 16 18 7 18 18 17 18
18 9 18 18 7 7 17 7 28 18 18 18 18 11 17 9 18 17 24 17 17 17
11 9 11 19 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 11 18 18 6 18 18 18 18 6 11 18 11 11 17
17 0 18 18 18 9 0 18 12 7 11 11 18 33 33 0 20 0 11 11 11 11
11 11 11 11 0 11 11 0 11 11 11 33 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 33 0 12 0 0 0 0 18 26 33 12 0 0 0 0 0 30 0 0 0 9 0 0
7 20 31 20 0 0 0 0 ] /Helvetica-Oblique 1000 524288 rf /Fb
1 113 df<00000000060000000006000000000E000000000C000000001C000000001800000000
3800000000300000000070000000006000000000E000000000C000000001C00000000180000000
03800000000300000000070000000006000000000E000000000C000000001C0000000018000000
0038000000003000000000700008000060001C0000E0003C0000C000CE0001C0000E000180000E
0003800007000300000700070000038006000003800E000001C00C000001C01C000001E0180000
00E038000000E0300000007070000000706000000038E000000038C00000001DC00000001D8000
00001F800000000F000000000F000000000600000027327C812A>112 D
E /Fc [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 9 9 12 18 18 30 22 7 11 11 13 19 9 11 9 9 18 18
18 18 18 18 18 18 18 18 9 9 19 19 19 18 34 22 22 24 24 22 20
26 24 9 17 22 18 28 24 26 22 26 24 22 20 24 22 31 22 22 20
9 9 9 16 18 7 18 18 17 18 18 9 18 18 7 7 17 7 28 18 18 18 18
11 17 9 18 17 24 17 17 17 11 9 11 19 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 11 18 18 6 18
18 18 18 6 11 18 11 11 17 17 0 18 18 18 9 0 18 12 7 11 11 18
33 33 0 20 0 11 11 11 11 11 11 11 11 0 11 11 0 11 11 11 33
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 33 0 12 0 0 0 0 18 26 33 12
0 0 0 0 0 30 0 0 0 9 0 0 7 20 31 20 0 0 0 0 ] /Helvetica 1000
524288 rf /Fd [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 14 17 24 28 28 44 36 14 17 17 19 29 14
17 14 14 28 28 28 28 28 28 28 28 28 28 17 17 29 29 29 30 49
36 36 36 36 33 30 39 36 14 28 36 30 41 36 39 33 39 36 33 30
36 33 47 33 33 30 17 14 17 29 28 14 28 30 28 30 28 17 30 30
14 14 28 14 44 30 30 30 30 19 28 17 30 28 39 28 28 25 19 14
19 29 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 17 28 28 8 28 28 28 28 12 25 28 17 17 30 30 0
28 28 28 14 0 28 17 14 25 25 28 50 50 0 30 0 17 17 17 17 17
17 17 17 0 17 17 0 17 17 17 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 50 0 18 0 0 0 0 30 39 50 18 0 0 0 0 0 44 0 0 0 14 0 0 14
30 47 30 0 0 0 0 ] /Helvetica-BoldOblique 1000 786432 rf /Fe
[ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 8 11 14 17 17 28 26 11 11 11 17 22 8 11 8 9 17 17 17
17 17 17 17 17 17 17 11 11 22 22 22 17 31 20 20 22 24 20 20
24 24 11 15 22 18 28 22 24 20 24 20 17 18 24 20 28 20 18 18
13 9 13 14 17 11 17 17 15 17 15 9 17 17 9 9 15 9 24 17 17 17
17 13 13 9 17 15 22 15 15 13 13 9 13 18 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 13 17 17 6
17 17 17 17 7 18 17 11 11 17 17 0 17 17 17 8 0 17 12 11 18
18 17 30 33 0 17 0 11 11 11 11 11 11 11 11 0 11 11 0 11 11
11 30 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 30 0 9 0 0 0 0 18 24
31 10 0 0 0 0 0 22 0 0 0 9 0 0 9 17 22 17 0 0 0 0 ] /Times-Italic
1000 524288 rf /Ff [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 8 11 14 17 17 28 26 11 11 11 17 19
8 11 8 9 17 17 17 17 17 17 17 17 17 17 9 9 19 19 19 15 31 24
22 22 24 20 18 24 24 11 13 24 20 30 24 24 18 24 22 18 20 24
24 31 24 24 20 11 9 11 16 17 11 15 17 15 17 15 11 17 17 9 9
17 9 26 17 17 17 17 11 13 9 17 17 24 17 17 15 16 7 16 18 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 11 17 17 6 17 17 17 17 6 15 17 11 11 18 18 0 17 17 17
8 0 15 12 11 15 15 17 33 33 0 15 0 11 11 11 11 11 11 11 11
0 11 11 0 11 11 11 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 30 0
9 0 0 0 0 20 24 30 10 0 0 0 0 0 22 0 0 0 9 0 0 9 17 24 17 0
0 0 0 ] /Times-Roman 1000 524288 rf /Fg [ 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 10 14 17 21 21
35 32 14 14 14 21 28 10 14 10 12 21 21 21 21 21 21 21 21 21
21 14 14 28 28 28 21 38 25 25 28 30 25 25 30 30 14 18 28 23
35 28 30 25 30 25 21 23 30 25 35 25 23 23 16 12 16 18 21 14
21 21 18 21 18 12 21 21 12 12 18 12 30 21 21 21 21 16 16 12
21 18 28 18 18 16 17 11 17 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 16 21 21 7 21 21 21 21
9 23 21 14 14 21 21 0 21 21 21 10 0 22 15 14 23 23 21 37 42
0 21 0 14 14 14 14 14 14 14 14 0 14 14 0 14 14 14 37 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 37 0 11 0 0 0 0 23 30 39 13 0 0 0
0 0 28 0 0 0 12 0 0 12 21 28 21 0 0 0 0 ] /Times-Italic 1000
655360 rf /Fh [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 17 21 30 35 35 55 45 17 21 21 24 36 17
21 17 17 35 35 35 35 35 35 35 35 35 35 21 21 36 36 36 38 61
45 45 45 45 42 38 48 45 17 35 45 38 52 45 48 42 48 45 42 38
45 42 59 42 42 38 21 17 21 36 35 17 35 38 35 38 35 21 38 38
17 17 35 17 55 38 38 38 38 24 35 21 38 35 48 35 35 31 24 17
24 36 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 21 35 35 10 35 35 35 35 15 31 35 21 21 38 38
0 35 35 35 17 0 35 22 17 31 31 35 62 62 0 38 0 21 21 21 21
21 21 21 21 0 21 21 0 21 21 21 62 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 62 0 23 0 0 0 0 38 48 62 23 0 0 0 0 0 55 0 0 0 17 0 0
17 38 59 38 0 0 0 0 ] /Helvetica-BoldOblique 1000 983040 rf
/Fi 1 7 df<003000003000003000003000003000003000003000003000003000003000003000
FFFFFCFFFFFC003000003000003000003000003000003000003000003000003000FFFFFCFFFFFC
16187E961B>6 D E /Fj [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 10 10 13 21 21 33 25 8 12 12 15
22 10 12 10 10 21 21 21 21 21 21 21 21 21 21 10 10 22 22 22
21 38 25 25 27 27 25 23 29 27 10 19 25 21 31 27 29 25 29 27
25 23 27 25 35 25 25 23 10 10 10 18 21 8 21 21 19 21 21 10
21 21 8 8 19 8 31 21 21 21 21 12 19 10 21 19 27 19 19 19 12
10 12 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 12 21 21 6 21 21 21 21 7 12 21 12 12 19 19
0 21 21 21 10 0 20 13 8 12 12 21 37 37 0 23 0 12 12 12 12 12
12 12 12 0 12 12 0 12 12 12 37 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 37 0 14 0 0 0 0 21 29 37 14 0 0 0 0 0 33 0 0 0 10 0 0 8
23 35 23 0 0 0 0 ] /Helvetica-Oblique 1000 589824 rf /Fk [
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 10 14 17 21 21 35 32 14 14 14 21 23 10 14 10 12 21 21 21
21 21 21 21 21 21 21 12 12 23 23 23 18 38 30 28 28 30 25 23
30 30 14 16 30 25 37 30 30 23 30 28 23 25 30 30 39 30 30 25
14 12 14 19 21 14 18 21 18 21 18 14 21 21 12 12 21 12 32 21
21 21 21 14 16 12 21 21 30 21 21 18 20 8 20 22 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 14
21 21 7 21 21 21 21 7 18 21 14 14 23 23 0 21 21 21 10 0 19
15 14 18 18 21 42 42 0 18 0 14 14 14 14 14 14 14 14 0 14 14
0 14 14 14 42 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 37 0 11 0 0 0
0 25 30 37 13 0 0 0 0 0 28 0 0 0 12 0 0 12 21 30 21 0 0 0 0
] /Times-Roman 1000 655360 rf /Fl 3 108 df<40E04003037D820A>58
D<003F0001C1C00300E00600700C0030180038380038700038700038700038E00070E00070E000
70E000E0E000C06001C071C3803A26001C3C0007F0400030400030C0003180003F80001F00000E
00151A7E931A>81 D<3E0006000C000C000C000C001800187018B819383230340038003E006300
631063106310C320C1C00D147E9312>107 D E /Fm 7 57 df<00600000600000600000600000
6000006000006000006000006000006000FFFFF0FFFFF000600000600000600000600000600000
600000600000600000600000600014167E9119>43 D<0C001C00EC000C000C000C000C000C000C
000C000C000C000C000C000C000C000C000C00FFC00A137D9211>49 D<1F0060C06060F070F030
603000700070006000C001C00180020004000810101020207FE0FFE00C137E9211>I<0FC03070
7038703870380038003000E00FC0007000380018001C601CF01CF018E03860701FC00E137F9211
>I<006000E000E00160026006600C600860106020606060C060FFFC0060006000600060006003
FC0E137F9211>I<07C00C201070207060006000C000CF00D0C0E060C020C030C030C030403060
20206010C00F000C137E9211>54 D<0FC0003000084008600870083C103F600F800FE031F06078
C01CC00CC00CC00C601830300FC00E137F9211>56 D E /Fn 2 50 df<00000400000004000000
020000000100FFFFFFE0FFFFFFE0000001000000020000000400000004001B0A7E8B21>33
D<0F001E003BC061806060804040310040801A0020800E0020800E0020800E0020800B00204011
80404020C0C030C07B800F001E001B0D7E8C21>49 D E /Fo 18 123 df<0300070007000F003F
00F700470007000700070007000700070007000700070007000700070007000700FFF0FFF00C17
7C9614>49 D<0FC03FF07838701CE01EE00EE00E400E000E001E001C003C007800F001E003C007
800F001E003C0E700EFFFEFFFE0F177E9614>I<1FC0007FF000707800203C00001C00001C0007
FC001FFC007C1C00F01C00E01C00E01C00E01C00707C003FFF800F8F8011107E8F14>97
D<FC0000FC00001C00001C00001C00001C00001C00001CF8001FFE001F0F001E07801C03801C03
C01C01C01C01C01C01C01C01C01C03C01E03801E07801F0F001FFE001CF8001217809614>I<03
F80FFC3C1C78087000F000E000E000E000E000F0007000780E3C1E0FFC03F00F107E8F14>I<00
7E00007E00000E00000E00000E00000E00000E0007CE001FFE003C3E00781E00700E00F00E00E0
0E00E00E00E00E00E00E00F00E00701E00781E003C3E001FFFC007CFC012177F9614>I<07E01F
F83C3C781C701EF00EE00EFFFEFFFEE000F0007000780E3C1E0FFC03F00F107E8F14>I<007C01
FE03CE0384038003800380FFFEFFFE038003800380038003800380038003800380038003800380
7FFC7FFC0F177F9614>I<03000780078003000000000000000000FF80FF800380038003800380
03800380038003800380038003800380FFFEFFFE0F187D9714>105 D<FF80FF80038003800380
0380038003800380038003800380038003800380038003800380038003800380FFFEFFFE0F177E
9614>108 D<FC7800FDFE001F8F001E07001E07001C07001C07001C07001C07001C07001C0700
1C07001C07001C0700FF9FE0FF9FE01310808F14>110 D<FCF800FFFE001F0F001E07801C0380
1C03C01C01C01C01C01C01C01C01C01C03C01E03801E07801F0F001FFE001CF8001C00001C0000
1C00001C00001C00001C0000FF8000FF80001218808F14>112 D<FF0F80FF3FC007F1C007C080
07C000078000070000070000070000070000070000070000070000070000FFFC00FFFC00121080
8F14>114 D<0FD87FF8E078C038C038F0007F803FF007FC001EE00EE006F006F81CFFF8CFE00F
107E8F14>I<07000700070007000700FFFCFFFC07000700070007000700070007000700070E07
0E070E079E03FC00F00F157F9414>I<FC3F00FC3F001C07001C07001C07001C07001C07001C07
001C07001C07001C07001C07001C0F001E1F000FFFE003E7E01310808F14>I<FE7F80FE7F801E
38000E780007700007E00003E00001C00003C00003E0000770000E78000E38001C1C00FF7F80FF
7F8011107F8F14>120 D<7FFF7FFF700E701C7038007000E001C0038007000E001C0738077007
FFFFFFFF10107F8F14>122 D E /Fp 41 122 df<000703C70FC70C401C001C001C001C001C00
FFC7FFC71C071C071C071C071C071C071C071C071C071C071C071C071C071018809713>12
D<E0E0E0604040C003077D960A>39 D<E0E0E0604040C003077D820A>44
D<FF80FF80090280880C>I<E0E0E003037D820A>I<00700000F80000F80001DC00019C00018C00
038E00038E000306000707000707000E03800E03800C03801FFFC01FFFC03801E03800E03800E0
700070700070600070E0003815177F9618>65 D<FFF000FFFC00E01E00E00700E00380E00380E0
0380E00380E00700E01E00FFFC00FFFC00E01F00E00780E00180E001C0E001C0E001C0E001C0E0
0380E00F00FFFE00FFF80012177D9618>I<00FF0003FFC00F83C01E00C01C0000380000700000
700000E00000E00000E00000E00000E00000E00000E000007000007000003800001C00401E00C0
0F81C003FF8000FE0012177E9617>I<FFFEFFFEE000E000E000E000E000E000E000E000FFF8FF
F8E000E000E000E000E000E000E000E000E000E000E0000F177D9614>70
D<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E003177D960A>73
D<F8001FF8001FE80017EC0037EC0037EE0077E60067E60067E700E7E300C7E381C7E381C7E181
87E1C387E1C387E0C307E0E707E0E707E06607E06607E03C07E03C07E03C0718177D961F>77
D<F801C0F801C0EC01C0EC01C0E601C0E601C0E701C0E301C0E381C0E181C0E1C1C0E0C1C0E0E1
C0E061C0E071C0E031C0E039C0E019C0E019C0E00DC0E00DC0E007C0E007C012177D9619>I<01
FC0007FF000F07801C01C03800E03800E0700070700070E00038E00038E00038E00038E00038E0
0038E000387000707000703800E03800E01C01C00F078007FF0001FC0015177E961A>I<FFF000
FFFC00E01E00E00700E00380E00380E00380E00380E00380E00700E01E00FFFC00FFF000E00000
E00000E00000E00000E00000E00000E00000E00000E00000E0000011177D9617>I<FFF000FFFC
00E01E00E00700E00380E00380E00380E00380E00700E01E00FFFC00FFF000E07000E03000E038
00E01C00E01C00E00E00E00E00E00700E00380E00380E001C012177D9617>82
D<07E01FF8383C600CC00CC000C000E00070007E003FE00FF001F8001C000E000600060006C006
E00CF8387FF00FC00F177E9614>I<FFFFF8FFFFF8007000007000007000007000007000007000
007000007000007000007000007000007000007000007000007000007000007000007000007000
00700000700015177F9618>I<E00380E00380E00380E00380E00380E00380E00380E00380E003
80E00380E00380E00380E00380E00380E00380E00380E00380E00380700700780F003C1E001FFC
0007F00011177D9618>I<1FC07FE0707040380038003801F81FF87E38F038E038E038F0787FF8
3FB80D0F7F8E11>97 D<E000E000E000E000E000E000E000E000E7C0FFE0F870E038E038E01CE0
1CE01CE01CE01CE038E038F0F0FFE0E7800E177E9612>I<07E01FF8381870007000E000E000E0
00E000E0007000700838381FF807E00D0F7F8E10>I<001C001C001C001C001C001C001C001C07
9C1FFC3C3C701C701CE01CE01CE01CE01CE01C701C703C387C1FFC0F9C0E177F9612>I<0F801F
E0387070306038E018FFF8FFF8E000E0006000700038181FF807E00D0F7F8E10>I<03E007E00C
201C001C001C001C001C00FF80FF801C001C001C001C001C001C001C001C001C001C001C001C00
1C000B1780960B>I<0F9F1FFF38F0707070707070707038E03FC06F80600070007FF03FF87FFC
701EE00EE00EE00E783C3FF80FE010167F8E12>I<E000E000E000E000E000E000E000E000E7E0
EFF0F878F038E038E038E038E038E038E038E038E038E038E038E0380D177E9612>I<E0E0E000
0000000000E0E0E0E0E0E0E0E0E0E0E0E0E0E0E003187E9708>I<E000E000E000E000E000E000
E000E000E0F8E1F0E3E0E3C0E780EF00FE00FF00FF80F380E1C0E1E0E0E0E0F0E0780D177E9611
>107 D<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E003177E9608>I<E7E1F8EFF3FC
F87E1EF03C0EE0380EE0380EE0380EE0380EE0380EE0380EE0380EE0380EE0380EE0380EE0380E
170F7E8E1C>I<E7E0EFF0F878F038E038E038E038E038E038E038E038E038E038E038E0380D0F
7E8E12>I<07C01FF03838701C701CE00EE00EE00EE00EE00E701C701C3C781FF007C00F0F7F8E
12>I<E7C0FFE0F870E038E038E01CE01CE01CE01CE01CE038E038F0F0FFE0E780E000E000E000
E000E000E0000E157E8E12>I<E380EF80FC00F800F000F000E000E000E000E000E000E000E000
E000E000090F7E8E0C>114 D<1F007FC0E0C0E000E000F0007F003F800FC001E080E0C0E0E1C0
7FC01F000B0F7F8E0E>I<3800380038003800FF80FF8038003800380038003800380038003800
3800380038401FC01F000A137F920D>I<E038E038E038E038E038E038E038E038E038E038E038
E038E0F87FF83F380D0F7E8E12>I<E038E038E03870707070707038E038E038E01CC01DC00D80
0D800F8007000E0F7F8E10>I<E0F038E0F838E0D838E09838719C70719C70718C70310C603B0C
E03B0EE03B06E01A06C01A06C01E07C00E0380160F7F8E18>I<701C783838701C700EE007C003
80038007C00EE00C601C703838701CF01E0F0F808E10>I<E038E038703870707070386038E018
E01CC01CC00DC00D800580070007000700060006008C00FC00F8000E157F8E10>I
E /Fq 70 126 df<60F0F0F0F0F0F0F0F0F0F0F00000000060F0F0600414799312>33
D<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E060C00B097D9312>I<0E700E700E700E70FFFEFFFE7F
FE0E700E700E701CE01CE07FFEFFFEFFFE1CE01CE01CE01CE01CE00F147F9312>I<0F001F8039
C039C039C039C03BBE3BBE3F781E701C703EF07EE0EFE0E7C0E7C4E3CEF7EE7FFC3C380F147F93
12>38 D<018007800F001E003C00380078007000F000E000E000E000E000E000E000E000F00070
00780038003C001E000F000780018009197B9612>40 D<C000F00078003C001E000E000F000700
07800380038003800380038003800380078007000F000E001E003C007800F000C00009197D9612
>I<070007000700E738FFF87FF01FC01FC07FF0FFF8E7380700070007000D0E7E9012>I<038003
800380038003800380FFFEFFFEFFFE0380038003800380038003800F0F7F9112>I<307C7C3C0C
1C38F0E006097A8312>I<FFF8FFF8FFF80D037E8B12>I<60F0F0600404798312>I<0018003800
380070007000E000E001C001C001C003800380070007000E000E001C001C001C00380038007000
7000E000E000C0000D1A7E9612>I<07C00FE01C703838701C701CE00EE00EE00EE00EE00EE00E
E00EE01E701C701C38381C700FE007C00F147F9312>I<030007000F001F00FF00F70007000700
07000700070007000700070007000700070007007FF07FF00C147E9312>I<0F803FE070F0F078
E038E038403800380078007000F001E003C007800F001E0038387038FFF8FFF80D147E9312>I<
0FE03FF0783C701C701C001C003C007807F007F0003C001C000E000EE00EE00EE01CF83C3FF00F
C00F147F9312>I<00F001F00370037006700E700C701C70387038707070E070FFFEFFFE007000
700070007003FE03FE0F147F9312>I<7FF07FF07000700070007000700070007F807FE060F000
7800384038E038E038E07070F03FC01F000D147E9312>I<01F007F81E3C3C1C781C7000F000E7
C0FFF0F83CF01CF01EE00EE00EF00E701E781C3C3C1FF007C00F147F9312>I<60F0F060000000
00000060F0F060040E798D12>58 D<3078783000000000000030787838183830F0C005137A8D12
>I<0038007801F003E00F801F003C00F800F000F8003C001F000F8003E001F0007800380D117E
9212>I<FFFEFFFE7FFE0000000000007FFEFFFEFFFE0F097F8E12>I<4000E000F0007C003E000F
8007C001E000F8007800F801E007C00F803E007C00F000E00040000D137E9312>I<1FC07FF0F0
78E038E07800F003E007800700070007000700000000000000000006000F000F0006000D147E93
12>I<038007C007C006C006C00EE00EE00EE00EE00C601C701C701C701FF01FF0383838383838
FEFEFEFE0F147F9312>65 D<FFC0FFF038783838381C381C381E380E380E380E380E380E380E38
0E381C381C38383878FFF0FFC00F147F9312>68 D<FFFEFFFE380E380E380E3800380038E038E0
3FE03FE038E038E03800380E380E380E380EFFFEFFFE0F147F9312>I<07981FF83CF838787038
7038F038E000E000E000E1FEE1FEE038F0387038707838783CF81FF807B80F147F9312>71
D<FFF8FFF80700070007000700070007000700070007000700070007000700070007000700FFF8
FFF80D147E9312>73 D<0FF80FF800E000E000E000E000E000E000E000E000E000E000E000E000
E040E0E0E0F1E07FC03F000D147E9312>I<FE3F80FE3F803A2E003A2E003B6E003B6E003B6E00
3B6E003B6E003B6E003BEE0039CE0039CE00380E00380E00380E00380E00380E00FE3F80FE3F80
1114809312>77 D<FEFEFEFE3A383A383B383B383B383B383B383B3839B839B839B839B839B839
B838B838B8FEF8FEF80F147F9312>I<FF80FFE038F03878383838383838387838F03FE03FE038
F0387038703870387038773877FE3FFE1C10147F9312>82 D<1F303FF070F0E0F0E070E070F000
F0007F003FE00FF000F000780038E038E038F078F070FFE0CF800D147E9312>I<FFFEFFFEE38E
E38EE38E03800380038003800380038003800380038003800380038003801FF01FF00F147F9312
>I<FE3F80FE3F80380E00380E00380E00380E00380E00380E00380E00380E00380E00380E0038
0E00380E00380E003C1E001C1C001E3C000FF80003E0001114809312>I<FCFCFCFC1C701CE00E
E00FE00FC007C007800380078007C00FC00EE01EE01C701C703838FEFEFEFE0F147F9312>88
D<FFC0FFC0E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000
E000E000E000E000E000FFC0FFC00A1A7A9612>91 D<FFC0FFC001C001C001C001C001C001C001
C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C0FFC0FFC00A1A7F96
12>93 D<FFF8FFF8FFF80D037E7F12>95 D<3F807FE070F0207000700FF03FF07870F070E070E0
70F0F07FFE1F3E0F0E7E8D12>97 D<FC00FC001C001C001C001C001DF01FF81F1E1E0E1C0F1C07
1C071C071C071C0F1E0E1F1C1FF81DE01014809312>I<07F01FF838387010F000E000E000E000
E000F000703838781FF007E00D0E7E8D12>I<01F801F8003800380038003807B81FF838787078
F038E038E038E038E038F038707878F81FFF0FBF10147F9312>I<07801FE038F07078F038E038
FFF8FFF8E000F000703838781FF007C00D0E7E8D12>I<007E01FF03C7038203800380FFFEFFFE
03800380038003800380038003800380038003807FFC7FFC1014809312>I<0F9E1FFF38E77070
70707070707038E03FC07F8070003FE03FF87FFCF01EE00EE00EE00EF01E783C3FF80FE010167F
8D12>I<FC0000FC00001C00001C00001C00001C00001CF0001FF8001F1C001E1C001C1C001C1C
001C1C001C1C001C1C001C1C001C1C001C1C00FF9F80FF9F801114809312>I<06000F000F0006
00000000000000FF00FF000700070007000700070007000700070007000700FFF8FFF80D157D94
12>I<00C001E001E000C00000000000003FE03FE000E000E000E000E000E000E000E000E000E0
00E000E000E000E000E000E041E0E1C0FF807E000B1C7E9412>I<FC0000FC00001C00001C0000
1C00001C00001FFF001FFF001C78001CF0001DE0001FC0001FE0001FE0001EF0001C78001C3C00
1C3C00FF3F80FF3F801114809312>I<FF80FF8003800380038003800380038003800380038003
80038003800380038003800380FFFEFFFE0F147F9312>I<FB8E00FFFF803EFB803CF38038E380
38E38038E38038E38038E38038E38038E38038E380FEFBE0FEFBE0130E818D12>I<FCF000FFF8
001F1C001E1C001C1C001C1C001C1C001C1C001C1C001C1C001C1C001C1C00FF9F80FF9F80110E
808D12>I<0F803FE038E07070E038E038E038E038E038F078707038E03FE00F800D0E7E8D12>I<
FDF0FFF81F1E1E0E1C0F1C071C071C071C071C0F1E0E1F1C1FF81DE01C001C001C001C001C00FF
80FF801015808D12>I<079C001FFC00387C00703C00F01C00E01C00E01C00E01C00E01C00F01C
00703C00387C001FFC00079C00001C00001C00001C00001C00001C0000FF8000FF8011157F8D12
>I<FE7CFEFE0FCE0F840F000E000E000E000E000E000E000E00FFF0FFF00F0E7F8D12>I<1FF07F
F0E070C070E000FF003FE00FF00078E018E018F038FFF0DFC00D0E7E8D12>I<0E000E000E000E
00FFF8FFF80E000E000E000E000E000E000E000E380E380E7807F003C00D127F9112>I<FCFC00
FCFC001C1C001C1C001C1C001C1C001C1C001C1C001C1C001C1C001C1C001C3C000FFF8007DF80
110E808D12>I<FEFEFEFE38383C781C701C701C700EE00EE00EE006C007C007C003800F0E7F8D
12>I<FEFEFEFE701C701C301838383BB83FF83FF83AB838B81CF01CF01CF00F0E7F8D12>I<FCFE
FCFE1CF00EE00FC007C00380078007C00EE01EF01C70FEFEFEFE0F0E7F8D12>I<FEFEFEFE3C38
1C381C701C700E700E600E6006E006E003C003C003C0038003800380778077007E003C000F157F
8D12>I<7FFC7FFC7038707000E001C0038007000E001C1C381C701CFFFCFFFC0E0E7F8D12>I<00
F803F80780070007000700070007000700070007000F00FE00FE000F0007000700070007000700
070007000700078003F800F80D1A7E9612>I<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0
E0E0E0E0E0E0031A799612>I<F800FE000F0007000700070007000700070007000700078003F8
03F80780070007000700070007000700070007000F00FE00F8000D1A7E9612>I
E /Fr 6 121 df<FFFFFF80FFFFFF8019027D8A20>0 D<C00060E000E07001C03803801C07000E
0E00071C0003B80001F00000E00000E00001F00003B800071C000E0E001C07003803807001C0E0
00E0C0006013147A9320>2 D<07C000201FE000203FF80020783C0060E01F00E0C00783C08003
FF808000FF0080007C000000000007C000201FE000203FF80020783C0060E01F00E0C00783C080
03FF808000FF0080007C001B137E9320>25 D<C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0
C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C002297B9E0C>106 D<00000000C000000001
C0000000018000000003800000000300000000070000000006000000000E000000000C00000000
1C0000000018000000003800000000300000000070000000006000000000E000000000C0000000
01C0000000018000000003800000000300000C000700003C000600004E000E00008E000C000007
001C0000070018000003803800000380300000038070000001C060000001C0E0000000E0C00000
00E1C0000000718000000073800000003B000000003F000000001E000000001E000000000C0000
00000C000000222A7E8123>112 D<1F00308070406060E0E0E0E0E040E0006000700030001800
1C003300718061C0E0C0E0E0E0E0E0E060E070C031C0198007000300018001C000C000E040E0E0
E0E0E0C0C041C021801F000B257D9C12>120 D E /Fs 14 110 df<004000800100020006000C
000C0018001800300030007000600060006000E000E000E000E000E000E000E000E000E000E000
E000E000600060006000700030003000180018000C000C00060002000100008000400A2A7D9E10
>40 D<800040002000100018000C000C000600060003000300038001800180018001C001C001C0
01C001C001C001C001C001C001C001C001C0018001800180038003000300060006000C000C0018
0010002000400080000A2A7E9E10>I<0006000000060000000600000006000000060000000600
0000060000000600000006000000060000000600000006000000060000FFFFFFE0FFFFFFE00006
000000060000000600000006000000060000000600000006000000060000000600000006000000
06000000060000000600001B1C7E9720>43 D<03C00C301818300C300C700E60066006E007E007
E007E007E007E007E007E007E007E007E007E007E00760066006700E300C300C18180C3007E010
1D7E9B15>48 D<030007003F00C700070007000700070007000700070007000700070007000700
07000700070007000700070007000700070007000F80FFF80D1C7C9B15>I<07C01830201C400C
400EF00FF80FF807F8077007000F000E000E001C001C00380070006000C00180030006010C0118
0110023FFE7FFEFFFE101C7E9B15>I<00F0030C06040C0E181E301E300C700070006000E3E0E4
30E818F00CF00EE006E007E007E007E007E007600760077006300E300C18180C3003E0101D7E9B
15>54 D<03E00C301008200C20066006600660067006780C3E083FB01FE007F007F818FC307E60
1E600FC007C003C003C003C00360026004300C1C1007E0101D7E9B15>56
D<7FFFFFC0FFFFFFE0000000000000000000000000000000000000000000000000000000000000
0000FFFFFFE07FFFFFC01B0C7E8F20>61 D<FEFEC0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0
C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0FEFE07297C9E0C>91 D<FEFE060606060606060606
06060606060606060606060606060606060606060606060606060606FEFE0729809E0C>93
D<18003C003C0018000000000000000000000000000000FC001C001C001C001C001C001C001C00
1C001C001C001C001C001C001C001C001C00FF80091D7F9C0C>105 D<FC001C001C001C001C00
1C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C
001C001C001C00FF80091D7F9C0C>108 D<FC7E07E0001C838838001D019018001E01E01C001C
01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C00
1C01C01C001C01C01C001C01C01C001C01C01C001C01C01C00FF8FF8FF8021127F9124>I
E /Ft 8 121 df<01F807000C0018003800300070007FC0E000E000E000E000E0006000600030
0018600F800D127E9111>15 D<60F0F06004047C830C>58 D<60F0F0701010101020204080040C
7C830C>I<00030003000700060006000E000C001C0018001800380030003000700060006000E0
00C000C001C001800380030003000700060006000E000C000C001C001800180038003000700060
006000E000C000C00010297E9E15>61 D<01F007080C0818043808300870307FC0E000E000E000
E000E000E0046008601030600F800E127E9113>101 D<0001E0000630000E78000CF0001C6000
1C00001C00001C00003C0000380000380003FFC000380000380000700000700000700000700000
700000E00000E00000E00000E00000E00001C00001C00001C00001C00001C00001800003800003
8000630000F30000F60000E4000078000015257E9C14>I<381F81F04E20C6184640E81C4680F0
1C8F00F01C8E00E01C0E00E01C0E00E01C1C01C0381C01C0381C01C0381C01C070380380713803
8071380380E1380380E2700700643003003820127E9124>109 D<07878008C84010F0C020F1E0
20E3C040E18000E00000E00001C00001C00001C00001C000638080F38080F38100E5810084C600
78780013127E9118>120 D E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300
TeXDict begin 
%%EndSetup
%%Page: 354 1
bop 0 50 a Fk(354)194 b Fj(Chapter)10 b(9.)52 b(Root)11 b(Finding)f(and)f
(Nonlinear)i(Sets)f(of)g(Equations)p 0 68 1395 2 v 0 143 a
@beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial 37 x Fq(#include)15
b(<math.h>)0 218 y(#define)g(JMAX)h(40)296 b Fp(Maximum)14
b(allo)o(w)o(ed)f(numb)q(er)g(of)f(bisections.)0 293 y Fq(float)k
(rtbis\(floa)o(t)f(\(*func\)\(f)o(loa)o(t\),)f(float)i(x1,)g(float)g(x2,)h
(float)f(xacc\))0 330 y Fp(Using)d(bisection,)f(\014nd)h(the)f(ro)q(ot)g(of)g
(a)h(function)f Fo(func)f Fp(kno)o(wn)i(to)f(lie)i(b)q(et)o(w)o(een)e
Fo(x1)g Fp(and)h Fo(x2)o Fp(.)k(The)c(ro)q(ot,)0 367 y(returned)h(as)f
Fo(rtbis)n Fp(,)h(will)h(b)q(e)e(re\014ned)h(until)g(its)g(accuracy)f(is)g
Fi(\006)p Fo(xacc)o Fp(.)0 405 y Fq({)66 442 y(void)k(nrerror\(c)o(har)d
(error_text)o([]\))o(;)66 479 y(int)j(j;)66 517 y(float)f(dx,f,fmid,x)o(mid)o
(,rt)o(b;)66 591 y(f=\(*func\)\(x)o(1\);)66 629 y(fmid=\(*func)o(\)\(x)o
(2\);)66 666 y(if)h(\(f*fmid)e(>=)i(0.0\))g(nrerror\(")o(Roo)o(t)e(must)h(be)
h(bracketed)d(for)j(bisection)d(in)j(rtbis"\);)66 703 y(rtb)g(=)g(f)h(<)f
(0.0)f(?)i(\(dx=x2-x1)o(,x1)o(\))d(:)i(\(dx=x1-x2,)o(x2\))o(;)100
b Fp(Orient)8 b(the)g(sea)o(rch)f(so)g(that)g Fq(f>0)1041 741
y Fp(lies)13 b(at)f Fq(x+dx)o Fp(.)-1157 b Fq(for)17 b(\(j=1;j<=JM)o(AX;)o
(j++)o(\))e({)133 778 y(fmid=\(*fun)o(c\)\()o(xm)o(id=)o(rtb)o(+\(d)o(x)g(*=)
h(0.5\)\);)229 b Fp(Bisection)12 b(lo)q(op.)133 816 y Fq(if)17
b(\(fmid)f(<=)h(0.0\))f(rtb=xmid;)133 853 y(if)h(\(fabs\(dx\))d(<)j(xacc)g
(||)g(fmid)f(==)h(0.0\))f(return)f(rtb;)66 890 y(})66 928 y(nrerror\("To)o(o)
g(many)h(bisections)e(in)j(rtbis"\);)66 965 y(return)f(0.0;)719
b Fp(Never)12 b(get)g(here.)0 1002 y Fq(})0 1328 y Fh(9.2)17
b(Secant)i(Method,)i(False)g(Position)f(Method,)104 1402 y(and)h(Ridders')h
(Method)83 1527 y Fk(For)17 b(functions)f(that)g(are)i(smooth)f(near)h(a)g
(root,)g(the)f(methods)g(known)f(respectively)0 1577 y(as)d
Fg(false)f(position)e Fk(\(or)i Fg(r)n(egula)g(falsi)p Fk(\))f(and)h
Fg(secant)g(method)g Fk(generally)g(conver)o(ge)h(faster)g(than)0
1627 y(bisection.)28 b(In)15 b(both)f(of)g(these)i(methods)e(the)h(function)f
(is)g(assumed)i(to)f(be)g(approximately)0 1677 y(linear)9 b(in)h(the)f(local)
h(region)f(of)g(interest,)h(and)f(the)h(next)f(improvement)g(in)h(the)f(root)
g(is)g(taken)h(as)0 1726 y(the)h(point)f(where)i(the)g(approximating)d(line)i
(crosses)i(the)e(axis.)19 b(After)11 b(each)i(iteration)d(one)h(of)0
1776 y(the)f(previous)g(boundary)f(points)g(is)h(discarded)h(in)f(favor)g(of)
g(the)g(latest)g(estimate)h(of)f(the)g(root.)83 1826 y(The)i
Fg(only)g Fk(dif)o(ference)g(between)g(the)f(methods)h(is)f(that)g(secant)i
(retains)e(the)h(most)f(recent)0 1876 y(of)16 b(the)g(prior)f(estimates)i
(\(Figure)f(9.2.1;)j(this)c(requires)h(an)h(arbitrary)e(choice)i(on)f(the)g
(\256rst)0 1926 y(iteration\),)8 b(while)g(false)h(position)e(retains)h(that)
h(prior)e(estimate)i(for)g(which)f(the)h(function)e(value)0
1975 y(has)15 b(opposite)e(sign)h(from)g(the)g(function)f(value)i(at)f(the)h
(current)f(best)g(estimate)h(of)f(the)h(root,)0 2025 y(so)e(that)g(the)f(two)
h(points)f(continue)g(to)g(bracket)i(the)e(root)h(\(Figure)f(9.2.2\).)24
b(Mathematically)m(,)0 2075 y(the)14 b(secant)g(method)g(conver)o(ges)g(more)
h(rapidly)d(near)i(a)h(root)e(of)g(a)i(suf)o(\256ciently)e(continuous)0
2125 y(function.)j(Its)11 b(order)g(of)g(conver)o(gence)h(can)g(be)f(shown)g
(to)g(be)g(the)g(\252golden)g(ratio\272)g Fs(1)p Ft(:)p Fs(618)c
Ft(:)g(:)g(:)s Fk(,)0 2175 y(so)22 b(that)448 2279 y Fs(lim)434
2307 y Fl(k)q Fn(!1)526 2279 y Fr(j)o Ft(\017)554 2285 y Fl(k)q
Fm(+1)617 2279 y Fr(j)11 b(\031)h Fk(const)c Fr(\002)i(j)o
Ft(\017)850 2285 y Fl(k)871 2279 y Fr(j)882 2259 y Fm(1)p Fl(:)p
Fm(618)1279 2279 y Fs(\()p Fk(9.2.1)q Fs(\))0 2398 y Fk(The)h(secant)g
(method)f(has,)h(however)n(,)g(the)f(disadvantage)g(that)f(the)h(root)g(does)
g(not)f(necessarily)0 2448 y(remain)k(bracketed.)23 b(For)13
b(functions)e(that)h(are)i Fg(not)e Fk(suf)o(\256ciently)g(continuous,)g(the)
g(algorithm)0 2497 y(can)19 b(therefore)f(not)g(be)h(guaranteed)f(to)g
(conver)o(ge:)31 b(Local)19 b(behavior)f(might)f(send)i(it)e(of)o(f)0
2547 y(towards)j(in\256nity)m(.)p eop
%%Page: 355 2
bop 106 50 a Fj(9.2)10 b(Secant)g(Method,)g(False)g(Position)g(Method,)g(and)
g(Ridders')g(Method)147 b Fk(355)p 0 68 1395 2 v 0 143 a @beginspecial
@setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial 177 1206 a @beginspecial 227 @llx
286 @lly 477 @urx 540 @ury 2500 @rwi @setspecial
%%BeginDocument: epsf/fig9x2x1.ps
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
/TX {pop} def
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def	% - cf flatness
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
[/_Times-Italic/Times-Italic 0 0 1 TZ
[/_Times-Roman/Times-Roman 0 0 1 TZ
0 A
u
0 R
0 G
0 i 0 J 0 j 0.5 w 4 M []0 d
0 D
351.0019 531.5475 m
351.0019 288.8577 L
S
351.1339 410.2027 m
S
U
u
229.7889 410.0707 m
472.4787 410.0707 L
S
351.1339 410.2027 m
S
U
2 w
439.2408 533.1304 m
417.0823 526.7995 347.9683 499.3648 316.8407 441.8579 C
310.5096 431.8338 299.4303 407.0371 289.4063 397.013 C
275.1614 382.2406 248.2544 360.082 241.9234 324.206 C
239.8131 312.599 239.8131 308.9061 235.5923 295.7163 c
S
1 w [2.5 2 ]0 d
239.2308 312.8756 m
424.9358 528.4998 l
S
[]0 d
322.9078 445.4735 m
322.9078 410 l
S
0 To
1.4741 0 0 1.4741 347.3546 518.0913 0 Tp
TP
-9.0798 0 Td
0 Tr
0 O
0 g
/_Times-Italic 6.1053 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
2 Ta
0 Tq
6.1053 0 Tl
0 Tc
0 Tw
(f) Tx 0 -100 Tk 
/_Times-Roman 6.1053 Tf
(\() Tx 
/_Times-Italic 6.1053 Tf
(x) Tx 
/_Times-Roman 6.1053 Tf
(\)) Tx 
(\r) TX 
TO
0 To
1.4741 0 0 1.4741 421.6819 531.7797 0 Tp
TP
-1.5263 0 Td
0 Tr
1 Ta
(2) Tx 
(\r) TX 
TO
0 To
1.4741 0 0 1.4741 319.4135 455.3616 0 Tp
TP
-1.5263 0 Td
0 Tr
(3) Tx 
(\r) TX 
TO
0 To
1.4741 0 0 1.4741 259.8682 371.9542 0 Tp
TP
-1.5263 0 Td
0 Tr
(4) Tx 
(\r) TX 
TO
0 To
1.4741 0 0 1.4741 246.0094 303.0512 0 Tp
TP
-1.5263 0 Td
0 Tr
(1) Tx 
(\r) TX 
TO
0 To
1.4741 0 0 1.4741 465.1954 399.2554 0 Tp
TP
-1.3549 0 Td
0 Tr
/_Times-Italic 6.1053 Tf
(x) Tx 
(\r) TX 
TO
u
424.0286 525.7592 m
425.2712 525.7592 426.2786 526.7666 426.2786 528.0092 c
426.2786 529.2518 425.2712 530.2592 424.0286 530.2592 c
422.786 530.2592 421.7786 529.2518 421.7786 528.0092 c
421.7786 526.7666 422.786 525.7592 424.0286 525.7592 c
f
424.0286 528.0092 m
F
U
u
322.7786 449.8842 m
324.0212 449.8842 325.0286 450.8916 325.0286 452.1342 c
325.0286 453.3768 324.0212 454.3842 322.7786 454.3842 c
321.536 454.3842 320.5286 453.3768 320.5286 452.1342 c
320.5286 450.8916 321.536 449.8842 322.7786 449.8842 c
f
322.7786 452.1342 m
F
U
u
266.4036 370.7592 m
267.6462 370.7592 268.6536 371.7666 268.6536 373.0092 c
268.6536 374.2518 267.6462 375.2592 266.4036 375.2592 c
265.161 375.2592 264.1536 374.2518 264.1536 373.0092 c
264.1536 371.7666 265.161 370.7592 266.4036 370.7592 c
f
266.4036 373.0092 m
F
U
u
240.1536 311.7592 m
241.3962 311.7592 242.4036 312.7666 242.4036 314.0092 c
242.4036 315.2518 241.3962 316.2592 240.1536 316.2592 c
238.911 316.2592 237.9036 315.2518 237.9036 314.0092 c
237.9036 312.7666 238.911 311.7592 240.1536 311.7592 c
f
240.1536 314.0092 m
F
U
u
u
1 g
0 R
0 G
0.5 w
266.4661 407.8217 m
267.7087 407.8217 268.7161 408.8291 268.7161 410.0717 c
268.7161 411.3143 267.7087 412.3217 266.4661 412.3217 c
265.2235 412.3217 264.2161 411.3143 264.2161 410.0717 c
264.2161 408.8291 265.2235 407.8217 266.4661 407.8217 c
b
266.4661 410.0717 m
B
U
264.2501 410.1002 m
268.6876 410.1002 l
S
U
u
u
0 O
1 g
322.9661 407.8217 m
324.2087 407.8217 325.2161 408.8291 325.2161 410.0717 c
325.2161 411.3143 324.2087 412.3217 322.9661 412.3217 c
321.7235 412.3217 320.7161 411.3143 320.7161 410.0717 c
320.7161 408.8291 321.7235 407.8217 322.9661 407.8217 c
b
322.9661 410.0717 m
B
U
320.7501 410.1002 m
325.1876 410.1002 l
S
U
u
0 O
0 g
1 w
322.9692 444.2549 m
325.4615 442.7422 L
322.9918 448.7546 L
322.9918 448.7546 L
320.4617 442.7674 L
322.9692 444.2549 L
f
U
u
266.4678 381.4327 m
263.9689 382.9345 L
266.4648 376.9329 L
266.4648 376.9329 L
268.9688 382.9312 L
266.4678 381.4327 L
f
U
0 R
0 G
266.4562 379.5481 m
266.4562 410.0049 l
S
[2.5 2 ]0 d
266.4562 410.0049 m
424.2759 528.2428 l
S
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 0 1268 a Ff(Figure)10 b(9.2.1.)35 b(Secant)9 b(method.)17
b(Extrapolation)9 b(or)h(interpolation)f(lines)g(\(dashed\))g(are)h(drawn)f
(through)f(the)i(two)0 1305 y(most)h(recently)f(evaluated)g(points,)i
(whether)e(or)i(not)e(they)h(bracket)f(the)h(function.)21 b(The)11
b(points)g(are)g(numbered)e(in)0 1343 y(the)15 b(order)f(that)h(they)f(are)h
(used.)177 2412 y @beginspecial 180 @llx 286 @lly 430 @urx
540 @ury 2500 @rwi @setspecial
%%BeginDocument: epsf/fig9x2x2.ps
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
/TX {pop} def
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def	% - cf flatness
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
[/_Times-Italic/Times-Italic 0 0 1 TZ
[/_Times-Roman/Times-Roman 0 0 1 TZ
0 A
u
0 R
0 G
0 i 0 J 0 j 0.5 w 4 M []0 d
0 D
306.6777 537.2747 m
306.6777 299.4682 L
S
306.2484 418.3715 m
S
U
u
187.5598 418.5861 m
425.3664 418.5861 L
S
306.4631 418.1568 m
S
U
2 w
185.6281 291.7416 m
197.6471 310.6286 200.2227 320.0724 204.5154 339.8179 c
208.8079 359.5637 219.11 402.4891 242.2895 422.2348 c
265.4693 441.9805 284.7857 457.8629 289.0783 461.7261 c
293.3708 465.5894 296.3756 468.5941 299.3805 474.1744 c
302.3852 479.7546 305.6677 482.8244 311.3995 487.4813 c
318.2677 493.0616 347.4569 520.1046 384.8019 530.4067 c
S
369.3487 524.8264 m
S
1 w [2.5 2 ]0 d
202.7984 331.233 m
256.8842 418.3715 l
278.3827 452.5688 l
S
201.9399 330.3744 m
370.6366 525.2557 l
S
[]0 d
256.9921 428.6656 m
257.0815 428.6656 256.9921 418.1494 y
S
278.4363 446.3461 m
278.5257 446.3461 278.4363 420.9619 y
S
0 To
1.4308 0 0 1.4308 303.2066 524.1457 0 Tp
TP
-9.3546 0 Td
0 Tr
0 O
0 g
/_Times-Italic 6.2901 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
2 Ta
0 Tq
6.2901 0 Tl
0 Tc
0 Tw
(f) Tx 0 -100 Tk 
/_Times-Roman 6.2901 Tf
(\() Tx 
/_Times-Italic 6.2901 Tf
(x) Tx 
/_Times-Roman 6.2901 Tf
(\)) Tx 
(\r) TX 
TO
0 To
1.4308 0 0 1.4308 420.8224 407.5771 0 Tp
TP
-2.7918 0 Td
0 Tr
/_Times-Italic 6.2901 Tf
(x) Tx 
(\r) TX 
TO
0 To
1.4308 0 0 1.4308 251.0283 435.4707 0 Tp
TP
-1.5725 0 Td
0 Tr
/_Times-Roman 6.2901 Tf
1 Ta
(4) Tx 
(\r) TX 
TO
0 To
1.4308 0 0 1.4308 272.4427 452.785 0 Tp
TP
-1.5725 0 Td
0 Tr
(3) Tx 
(\r) TX 
TO
0 To
1.4308 0 0 1.4308 371.5664 530.3 0 Tp
TP
-1.5725 0 Td
0 Tr
(2) Tx 
(\r) TX 
TO
0 To
1.4308 0 0 1.4308 206.8438 319.8945 0 Tp
TP
-1.5725 0 Td
0 Tr
(1) Tx 
(\r) TX 
TO
u
202.4612 328.6976 m
203.7038 328.6976 204.7112 329.705 204.7112 330.9476 c
204.7112 332.1902 203.7038 333.1976 202.4612 333.1976 c
201.2186 333.1976 200.2112 332.1902 200.2112 330.9476 c
200.2112 329.705 201.2186 328.6976 202.4612 328.6976 c
f
202.4612 330.9476 m
F
U
u
257.0237 432.2601 m
258.2663 432.2601 259.2737 433.2675 259.2737 434.5101 c
259.2737 435.7527 258.2663 436.7601 257.0237 436.7601 c
255.7811 436.7601 254.7737 435.7527 254.7737 434.5101 c
254.7737 433.2675 255.7811 432.2601 257.0237 432.2601 c
f
257.0237 434.5101 m
F
U
u
278.4612 450.3226 m
279.7038 450.3226 280.7112 451.33 280.7112 452.5726 c
280.7112 453.8152 279.7038 454.8226 278.4612 454.8226 c
277.2186 454.8226 276.2112 453.8152 276.2112 452.5726 c
276.2112 451.33 277.2186 450.3226 278.4612 450.3226 c
f
278.4612 452.5726 m
F
U
u
370.8362 523.3226 m
372.0788 523.3226 373.0862 524.33 373.0862 525.5726 c
373.0862 526.8152 372.0788 527.8226 370.8362 527.8226 c
369.5936 527.8226 368.5862 526.8152 368.5862 525.5726 c
368.5862 524.33 369.5936 523.3226 370.8362 523.3226 c
f
370.8362 525.5726 m
F
U
u
1 g
0 R
0 G
0.5 w
257.0237 416.3851 m
258.2663 416.3851 259.2737 417.3925 259.2737 418.6351 c
259.2737 419.8777 258.2663 420.8851 257.0237 420.8851 c
255.7811 420.8851 254.7737 419.8777 254.7737 418.6351 c
254.7737 417.3925 255.7811 416.3851 257.0237 416.3851 c
b
257.0237 418.6351 m
B
U
254.8078 418.6011 m
254.8703 418.6011 259.2453 418.6011 y
S
u
0 O
1 g
278.3362 416.3851 m
279.5788 416.3851 280.5862 417.3925 280.5862 418.6351 c
280.5862 419.8777 279.5788 420.8851 278.3362 420.8851 c
277.0936 420.8851 276.0862 419.8777 276.0862 418.6351 c
276.0862 417.3925 277.0936 416.3851 278.3362 416.3851 c
b
278.3362 418.6351 m
B
U
276.1203 418.6011 m
276.1828 418.6011 280.5578 418.6011 y
S
u
0 O
0 g
1 w
257.0057 427.2749 m
259.5047 425.7731 L
257.0088 431.7747 L
257.0088 431.7747 L
254.5048 425.7765 L
257.0057 427.2749 L
f
U
u
278.3807 444.8999 m
280.8797 443.3981 L
278.3838 449.3997 L
278.3838 449.3997 L
275.8798 443.4015 L
278.3807 444.8999 L
f
U
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 0 2474 a(Figure)c(9.2.2.)41 b(False)12 b(position)e(method.)20
b(Interpolation)10 b(lines)h(\(dashed\))e(are)i(drawn)f(through)g(the)h(most)
g(recent)0 2512 y(points)c Fe(that)h(bracket)f(the)g(r)o(oot)p
Ff(.)k(In)d(this)g(example,)f(point)g(1)h(thus)f(remains)h(\252active\272)e
(for)i(many)f(steps.)12 b(False)c(position)0 2549 y(conver)o(ges)h(less)j
(rapidly)e(than)h(the)g(secant)f(method,)h(but)g(it)h(is)f(more)g(certain.)p
eop
%%Page: 356 3
bop 0 50 a Fk(356)189 b Fj(Chapter)11 b(9.)55 b(Root)10 b(Finding)g(and)g
(Nonlinear)g(Sets)g(of)h(Equations)p 0 68 1395 2 v 0 143 a
@beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial 174 1143 a @beginspecial
228 @llx 328 @lly 479 @urx 567 @ury 2510 @rwi @setspecial
%%BeginDocument: epsf/fig9x2x3.ps
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
/TX {pop} def
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def	% - cf flatness
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
[/_Times-Italic/Times-Italic 0 0 1 TZ
[/_Times-Roman/Times-Roman 0 0 1 TZ
0 A
u
0 R
0 G
0 i 0 J 0 j 0.5 w 4 M []0 d
0 D
475.2113 356.3579 m
241.2502 356.3579 L
S
358.2308 369.5182 m
S
358.7182 559.1242 m
358.7182 330.0373 L
S
U
1 w
231.9893 344.1726 m
262.6967 344.1726 391.8626 344.1726 417.6958 344.1726 c
439.1423 344.1726 459.6139 355.8704 459.6139 391.9394 c
459.6139 428.0084 459.6139 563.0234 y
S
[2.5 2 ]0 d
244.2308 343.8662 m
459.7951 554.0689 l
S
254.898 344.1726 m
459.6139 554.2501 l
S
265.7181 344.1726 m
459.5545 553.975 459.5545 554.0969 v
S
0.5 w []0 d
253.8566 356.352 m
259.4728 356.352 l
S
253.8566 356.352 m
259.5634 356.352 l
S
263.9114 356.352 m
269.6182 356.352 l
S
274.1474 356.352 m
279.8541 356.352 l
S
0 To
1.4493 0 0 1.4493 464.6543 551.0202 0 Tp
TP
0 Tr
0 O
0 g
1 w
/_Times-Roman 6.2097 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
6.2097 0 Tl
0 Tc
0 Tw
(2) Tx 
(\r) TX 
TO
0 To
1.4493 0 0 1.4493 355.0514 546.0345 0 Tp
TP
-9.235 0 Td
0 Tr
/_Times-Italic 6.2097 Tf
2 Ta
(f) Tx 0 -100 Tk 
/_Times-Roman 6.2097 Tf
(\() Tx 
/_Times-Italic 6.2097 Tf
(x) Tx 
/_Times-Roman 6.2097 Tf
(\)) Tx 
(\r) TX 
TO
0 To
1.4493 0 0 1.4493 244.2547 330.2729 0 Tp
TP
-1.5524 0 Td
0 Tr
1 Ta
(1) Tx 
(\r) TX 
TO
0 To
1.4493 0 0 1.4493 255.1248 330.2729 0 Tp
TP
-1.5524 0 Td
0 Tr
(3) Tx 
(\r) TX 
TO
0 To
1.4493 0 0 1.4493 265.9948 330.2729 0 Tp
TP
-1.5524 0 Td
0 Tr
(4) Tx 
(\r) TX 
TO
0 To
1.4493 0 0 1.4493 467.9062 345.2972 0 Tp
TP
-1.3781 0 Td
0 Tr
/_Times-Italic 6.2097 Tf
(x) Tx 
(\r) TX 
TO
u
244.3126 341.9092 m
245.5552 341.9092 246.5626 342.9166 246.5626 344.1592 c
246.5626 345.4018 245.5552 346.4092 244.3126 346.4092 c
243.07 346.4092 242.0626 345.4018 242.0626 344.1592 c
242.0626 342.9166 243.07 341.9092 244.3126 341.9092 c
f
244.3126 344.1592 m
F
U
u
255.0001 341.9092 m
256.2427 341.9092 257.2501 342.9166 257.2501 344.1592 c
257.2501 345.4018 256.2427 346.4092 255.0001 346.4092 c
253.7575 346.4092 252.7501 345.4018 252.7501 344.1592 c
252.7501 342.9166 253.7575 341.9092 255.0001 341.9092 c
f
255.0001 344.1592 m
F
U
u
265.6876 341.9092 m
266.9302 341.9092 267.9376 342.9166 267.9376 344.1592 c
267.9376 345.4018 266.9302 346.4092 265.6876 346.4092 c
264.445 346.4092 263.4376 345.4018 263.4376 344.1592 c
263.4376 342.9166 264.445 341.9092 265.6876 341.9092 c
f
265.6876 344.1592 m
F
U
1 g
0 R
0 G
0.5 w
251.6591 340.3127 m
B
u
u
257.0001 354.0342 m
258.2427 354.0342 259.2501 355.0416 259.2501 356.2842 c
259.2501 357.5268 258.2427 358.5342 257.0001 358.5342 c
255.7575 358.5342 254.7501 357.5268 254.7501 356.2842 c
254.7501 355.0416 255.7575 354.0342 257.0001 354.0342 c
b
257.0001 356.2842 m
B
U
254.7216 356.3752 m
259.2216 356.3752 l
S
U
u
u
0 O
1 g
266.8126 354.0342 m
268.0552 354.0342 269.0626 355.0416 269.0626 356.2842 c
269.0626 357.5268 268.0552 358.5342 266.8126 358.5342 c
265.57 358.5342 264.5626 357.5268 264.5626 356.2842 c
264.5626 355.0416 265.57 354.0342 266.8126 354.0342 c
b
266.8126 356.2842 m
B
U
264.5341 356.3752 m
269.0341 356.3752 l
S
U
u
u
0 O
1 g
277.0001 354.0342 m
278.2427 354.0342 279.2501 355.0416 279.2501 356.2842 c
279.2501 357.5268 278.2427 358.5342 277.0001 358.5342 c
275.7575 358.5342 274.7501 357.5268 274.7501 356.2842 c
274.7501 355.0416 275.7575 354.0342 277.0001 354.0342 c
b
277.0001 356.2842 m
B
U
274.7216 356.3752 m
279.2216 356.3752 l
S
U
u
0 O
0 g
1 w
459.5626 551.7842 m
460.8052 551.7842 461.8126 552.7916 461.8126 554.0342 c
461.8126 555.2768 460.8052 556.2842 459.5626 556.2842 c
458.32 556.2842 457.3126 555.2768 457.3126 554.0342 c
457.3126 552.7916 458.32 551.7842 459.5626 551.7842 c
f
459.5626 554.0342 m
F
U
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 0 1205 a Ff(Figure)g(9.2.3.)39 b(Example)9 b(where)h(both)g(the)
h(secant)f(and)f(false)i(position)f(methods)f(will)j(take)e(many)f
(iterations)i(to)0 1243 y(arrive)e(at)g(the)g(true)g(root.)15
b(This)9 b(function)f(would)g(be)h(dif)o(\256cult)h(for)f(many)f(other)g
(root-\256nding)g(methods.)83 1350 y Fk(False)16 b(position,)e(since)h(it)g
(sometimes)g(keeps)h(an)f(older)g(rather)f(than)h(newer)g(function)0
1400 y(evaluation,)e(has)g(a)g(lower)g(order)f(of)g(conver)o(gence.)24
b(Since)13 b(the)g(newer)g(function)e(value)i(will)0 1450 y
Fg(sometimes)e Fk(be)g(kept,)g(the)g(method)g(is)g(often)f(superlinear)n(,)h
(but)f(estimation)h(of)f(its)h(exact)g(order)0 1500 y(is)20
b(not)g(so)g(easy)m(.)83 1550 y(Here)15 b(are)g(sample)f(implementations)f
(of)h(these)g(two)g(related)g(methods.)26 b(While)13 b(these)0
1599 y(methods)h(are)i(standard)e(textbook)f(fare,)k Fg(Ridders')c(method)p
Fk(,)i(described)g(below)m(,)h(or)e Fg(Br)n(ent')-5 b(s)0 1649
y(method)p Fk(,)9 b(in)g(the)g(next)g(section,)g(are)h(almost)g(always)f
(better)g(choices.)16 b(Figure)8 b(9.2.3)i(shows)f(the)0 1699
y(behavior)j(of)g(secant)h(and)f(false-position)f(methods)h(in)g(a)h(dif)o
(\256cult)e(situation.)0 1800 y Fq(#include)k(<math.h>)0 1837
y(#define)g(MAXIT)h(30)338 b Fp(Set)11 b(to)g(the)h(maximum)h(allo)o(w)o(ed)f
(numb)q(er)g(of)f(iterations.)0 1912 y Fq(float)16 b(rtflsp\(flo)o(at)e
(\(*func\)\(flo)o(at\))o(,)g(float)i(x1,)h(float)f(x2,)g(float)g(xacc\))0
1949 y Fp(Using)11 b(the)g(false)f(p)q(osition)h(metho)q(d,)f(\014nd)i(the)e
(ro)q(ot)h(of)f(a)h(function)g Fo(func)e Fp(kno)o(wn)j(to)e(lie)i(b)q(et)o(w)
o(een)e Fo(x1)g Fp(and)0 1987 y Fo(x2)o Fp(.)18 b(The)13 b(ro)q(ot,)f
(returned)h(as)f Fo(rtflsp)n Fp(,)h(is)g(re\014ned)g(until)h(its)e(accuracy)h
(is)g Fi(\006)p Fo(xacc)n Fp(.)0 2024 y Fq({)66 2062 y(void)k(nrerror\(c)o
(har)d(error_text)o([]\))o(;)66 2099 y(int)j(j;)66 2136 y(float)f
(fl,fh,xl,xh)o(,sw)o(ap,)o(dx)o(,de)o(l,f)o(,rt)o(f;)66 2211
y(fl=\(*func\)\()o(x1\))o(;)66 2248 y(fh=\(*func\)\()o(x2\))o(;)287
b Fp(Be)12 b(sure)g(the)h(interval)g(b)o(rack)o(ets)f(a)g(ro)q(ot.)66
2286 y Fq(if)17 b(\(fl*fh)f(>)h(0.0\))f(nrerror\("Ro)o(ot)e(must)j(be)f
(bracketed)f(in)i(rtflsp"\);)66 2323 y(if)g(\(fl)g(<)g(0.0\))f({)290
b Fp(Identify)12 b(the)f(limits)h(so)f(that)g Fq(xl)f Fp(co)o(rresp)q(onds)g
(to)h(the)g(lo)o(w)681 2360 y(side.)-614 b Fq(xl=x1;)133 2398
y(xh=x2;)66 2435 y(})18 b(else)e({)133 2473 y(xl=x2;)133 2510
y(xh=x1;)133 2547 y(swap=fl;)p eop
%%Page: 357 4
bop 106 50 a Fj(9.2)10 b(Secant)g(Method,)g(False)g(Position)g(Method,)g(and)
g(Ridders')g(Method)147 b Fk(357)p 0 68 1395 2 v 0 143 a @beginspecial
@setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial 133 180 a Fq(fl=fh;)133 218 y(fh=swap;)66
255 y(})66 293 y(dx=xh-xl;)66 330 y(for)17 b(\(j=1;j<=MA)o(XIT)o(;j+)o(+\))d
({)131 b Fp(F)o(alse)14 b(p)q(osition)f(lo)q(op.)133 367 y
Fq(rtf=xl+dx*)o(fl/)o(\(f)o(l-f)o(h\);)114 b Fp(Increment)12
b(with)h(resp)q(ect)e(to)h(latest)g(value.)133 405 y Fq(f=\(*func\)\()o(rtf)o
(\);)133 442 y(if)17 b(\(f)g(<)g(0.0\))f({)241 b Fp(Replace)13
b(app)o(rop)o(riate)h(limit.)199 479 y Fq(del=xl-rtf;)199 517
y(xl=rtf;)199 554 y(fl=f;)133 591 y(})j(else)f({)199 629 y(del=xh-rtf;)199
666 y(xh=rtf;)199 703 y(fh=f;)133 741 y(})133 778 y(dx=xh-xl;)133
816 y(if)h(\(fabs\(del\))d(<)j(xacc)f(||)h(f)h(==)e(0.0\))h(return)e(rtf;)113
b Fp(Convergence.)66 853 y Fq(})66 890 y(nrerror\("Ma)o(xim)o(um)14
b(number)i(of)h(iterations)d(exceeded)h(in)i(rtflsp"\);)66
928 y(return)f(0.0;)359 b Fp(Never)14 b(get)f(here.)0 965 y
Fq(})0 1222 y(#include)i(<math.h>)0 1259 y(#define)g(MAXIT)h(30)338
b Fp(Maximum)14 b(allo)o(w)o(ed)e(numb)q(er)h(of)f(iterations.)0
1334 y Fq(float)k(rtsec\(floa)o(t)f(\(*func\)\(f)o(loa)o(t\),)f(float)i(x1,)g
(float)g(x2,)h(float)f(xacc\))0 1372 y Fp(Using)c(the)g(secant)f(metho)q(d,)g
(\014nd)i(the)e(ro)q(ot)h(of)f(a)h(function)g Fo(func)f Fp(thought)g(to)h
(lie)g(b)q(et)o(w)o(een)g Fo(x1)f Fp(and)i Fo(x2)o Fp(.)0 1409
y(The)g(ro)q(ot,)g(returned)g(as)g Fo(rtsec)n Fp(,)g(is)h(re\014ned)f(until)h
(its)f(accuracy)g(is)g Fi(\006)p Fo(xacc)o Fp(.)0 1446 y Fq({)66
1484 y(void)k(nrerror\(c)o(har)d(error_text)o([]\))o(;)66 1521
y(int)j(j;)66 1558 y(float)f(fl,f,dx,swa)o(p,x)o(l,r)o(ts)o(;)66
1633 y(fl=\(*func\)\()o(x1\))o(;)66 1670 y(f=\(*func\)\(x)o(2\);)66
1708 y(if)h(\(fabs\(fl\))e(<)i(fabs\(f\)\))e({)113 b Fp(Pick)16
b(the)f(b)q(ound)h(with)g(the)f(smaller)h(function)f(value)h(as)681
1745 y(the)d(most)g(recent)f(guess.)-887 b Fq(rts=x1;)133 1782
y(xl=x2;)133 1820 y(swap=fl;)133 1857 y(fl=f;)133 1895 y(f=swap;)66
1932 y(})18 b(else)e({)133 1969 y(xl=x1;)133 2007 y(rts=x2;)66
2044 y(})66 2081 y(for)h(\(j=1;j<=MA)o(XIT)o(;j+)o(+\))d({)131
b Fp(Secant)13 b(lo)q(op.)133 2119 y Fq(dx=\(xl-rts)o(\)*f)o(/\()o(f-f)o
(l\);)114 b Fp(Increment)12 b(with)h(resp)q(ect)e(to)h(latest)g(value.)133
2156 y Fq(xl=rts;)133 2193 y(fl=f;)133 2231 y(rts)k(+=)h(dx;)133
2268 y(f=\(*func\)\()o(rts)o(\);)133 2306 y(if)g(\(fabs\(dx\))d(<)j(xacc)g
(||)g(f)g(==)g(0.0\))f(return)g(rts;)70 b Fp(Convergence.)66
2343 y Fq(})66 2380 y(nrerror\("Ma)o(xim)o(um)14 b(number)i(of)h(iterations)d
(exceeded)h(in)i(rtsec"\);)66 2418 y(return)f(0.0;)359 b Fp(Never)14
b(get)f(here.)0 2455 y Fq(})p eop
%%Page: 358 5
bop 0 50 a Fk(358)189 b Fj(Chapter)11 b(9.)55 b(Root)10 b(Finding)g(and)g
(Nonlinear)g(Sets)g(of)h(Equations)p 0 68 1395 2 v 0 143 a
@beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial 46 x Fd(Ridders')j(Method)83
287 y Fk(A)j(powerful)f(variant)h(on)g(false)g(position)f(is)g(due)i(to)e
(Ridders)1046 283 y Fc([1)r(])1085 287 y Fk(.)36 b(When)17
b(a)h(root)e(is)0 337 y(bracketed)g(between)f Ft(x)354 343
y Fm(1)388 337 y Fk(and)g Ft(x)487 343 y Fm(2)505 337 y Fk(,)i(Ridders')d
(method)h(\256rst)g(evaluates)g(the)g(function)f(at)h(the)0
387 y(midpoint)e Ft(x)189 393 y Fm(3)223 387 y Fs(=)i(\()p
Ft(x)310 393 y Fm(1)340 387 y Fs(+)c Ft(x)407 393 y Fm(2)425
387 y Fs(\))p Ft(=)p Fs(2)p Fk(.)28 b(It)15 b(then)f(factors)g(out)g(that)g
(unique)g(exponential)f(function)0 437 y(which)i(turns)f(the)h(residual)f
(function)g(into)f(a)j(straight)e(line.)29 b(Speci\256cally)m(,)17
b(it)d(solves)h(for)f(a)0 487 y(factor)19 b Ft(e)135 471 y
Fl(Q)184 487 y Fk(that)g(gives)393 584 y Ft(f)t Fs(\()p Ft(x)457
590 y Fm(1)477 584 y Fs(\))9 b Fr(\000)g Fs(2)p Ft(f)t Fs(\()p
Ft(x)628 590 y Fm(3)647 584 y Fs(\))p Ft(e)682 567 y Fl(Q)720
584 y Fs(+)h Ft(f)t Fs(\()p Ft(x)826 590 y Fm(2)845 584 y Fs(\))p
Ft(e)880 567 y Fm(2)p Fl(Q)937 584 y Fs(=)i(0)277 b(\()p Fk(9.2.2)q
Fs(\))0 681 y Fk(This)13 b(is)g(a)h(quadratic)e(equation)g(in)h
Ft(e)548 666 y Fl(Q)576 681 y Fk(,)i(which)d(can)i(be)g(solved)e(to)h(give)
265 810 y Ft(e)284 793 y Fl(Q)325 810 y Fs(=)373 781 y Ft(f)t
Fs(\()p Ft(x)437 787 y Fm(3)457 781 y Fs(\))c(+)g Fk(sign)p
Fs([)p Ft(f)t Fs(\()p Ft(x)669 787 y Fm(2)688 781 y Fs(\)])716
745 y Fb(p)p 757 745 368 2 v 757 781 a Ft(f)t Fs(\()p Ft(x)821
787 y Fm(3)840 781 y Fs(\))856 769 y Fm(2)884 781 y Fr(\000)g
Ft(f)t Fs(\()p Ft(x)989 787 y Fm(1)1009 781 y Fs(\))p Ft(f)t
Fs(\()p Ft(x)1089 787 y Fm(2)1108 781 y Fs(\))p 373 800 751
2 v 699 838 a Ft(f)t Fs(\()p Ft(x)763 844 y Fm(2)782 838 y
Fs(\))1279 810 y(\()p Fk(9.2.3)q Fs(\))0 931 y Fk(Now)h(the)g(false)h
(position)d(method)i(is)h(applied,)f(not)f(to)h(the)g(values)h
Ft(f)t Fs(\()p Ft(x)1050 937 y Fm(1)1069 931 y Fs(\))p Ft(;)c(f)t
Fs(\()p Ft(x)1168 937 y Fm(3)1187 931 y Fs(\))p Ft(;)g(f)t
Fs(\()p Ft(x)1286 937 y Fm(2)1305 931 y Fs(\))p Fk(,)k(but)0
981 y(to)f(the)h(values)g Ft(f)t Fs(\()p Ft(x)286 987 y Fm(1)306
981 y Fs(\))p Ft(;)c(f)t Fs(\()p Ft(x)405 987 y Fm(3)423 981
y Fs(\))p Ft(e)458 966 y Fl(Q)487 981 y Ft(;)g(f)t Fs(\()p
Ft(x)570 987 y Fm(2)589 981 y Fs(\))p Ft(e)624 966 y Fm(2)p
Fl(Q)669 981 y Fk(,)12 b(yielding)d(a)i(new)g(guess)h(for)e(the)h(root,)f
Ft(x)1284 987 y Fm(4)1303 981 y Fk(.)17 b(The)0 1031 y(overall)c(updating)f
(formula)h(\(incorporating)e(the)i(solution)f(9.2.3\))h(is)293
1151 y Ft(x)317 1157 y Fm(4)346 1151 y Fs(=)f Ft(x)414 1157
y Fm(3)442 1151 y Fs(+)d(\()p Ft(x)523 1157 y Fm(3)551 1151
y Fr(\000)h Ft(x)617 1157 y Fm(1)635 1151 y Fs(\))656 1123
y Fk(sign)o Fs([)p Ft(f)t Fs(\()p Ft(x)801 1129 y Fm(1)820
1123 y Fs(\))f Fr(\000)h Ft(f)t Fs(\()p Ft(x)951 1129 y Fm(2)970
1123 y Fs(\)])p Ft(f)t Fs(\()p Ft(x)1062 1129 y Fm(3)1081 1123
y Fs(\))p 656 1141 442 2 v 672 1150 a Fb(p)p 714 1150 368 2
v 35 x Ft(f)t Fs(\()p Ft(x)778 1191 y Fm(3)797 1185 y Fs(\))813
1173 y Fm(2)841 1185 y Fr(\000)f Ft(f)t Fs(\()p Ft(x)946 1191
y Fm(1)966 1185 y Fs(\))p Ft(f)t Fs(\()p Ft(x)1046 1191 y Fm(2)1065
1185 y Fs(\))1279 1151 y(\()p Fk(9.2.4)q Fs(\))83 1278 y Fk(Equation)k
(\(9.2.4\))g(has)h(some)g(very)g(nice)g(properties.)24 b(First,)14
b Ft(x)1038 1284 y Fm(4)1070 1278 y Fk(is)f(guaranteed)h(to)f(lie)0
1328 y(in)i(the)h(interval)f Fs(\()p Ft(x)298 1334 y Fm(1)316
1328 y Ft(;)7 b(x)359 1334 y Fm(2)377 1328 y Fs(\))p Fk(,)18
b(so)e(the)g(method)f(never)h(jumps)g(out)f(of)g(its)h(brackets.)32
b(Second,)0 1377 y(the)12 b(conver)o(gence)h(of)f(successive)i(applications)d
(of)h(equation)f(\(9.2.4\))h(is)g Fg(quadratic)p Fk(,)g(that)g(is,)0
1427 y Ft(m)i Fs(=)g(2)f Fk(in)f(equation)f(\(9.1.4\).)22 b(Since)13
b(each)h(application)d(of)i(\(9.2.4\))f(requires)g(two)g(function)0
1477 y(evaluations,)20 b(the)e(actual)g(order)g(of)g(the)g(method)g(is)823
1443 y Fr(p)p 858 1443 21 2 v 34 x Fs(2)p Fk(,)i(not)e(2;)j(but)d(this)f(is)h
(still)f(quite)0 1527 y(respectably)9 b(superlinear:)k(the)8
b(number)h(of)f(signi\256cant)f(digits)g(in)h(the)h(answer)g(approximately)0
1577 y Fg(doubles)h Fk(with)f(each)j(two)e(function)f(evaluations.)15
b(Third,)10 b(taking)g(out)f(the)i(function')n(s)d(\252bend\272)0
1626 y(via)k(exponential)f(\(that)h(is,)h(ratio\))e(factors,)j(rather)e(than)
g(via)g(a)h(polynomial)e(technique)h(\(e.g.,)0 1676 y(\256tting)i(a)h
(parabola\),)i(turns)e(out)f(to)h(give)f(an)i(extraordinarily)d(robust)h
(algorithm.)29 b(In)15 b(both)0 1726 y(reliability)7 b(and)j(speed,)h
(Ridders')d(method)h(is)h(generally)f(competitive)g(with)f(the)i(more)g
(highly)0 1776 y(developed)d(and)f(better)h(established)f(\(but)g(more)h
(complicated\))g(method)g(of)f(V)-5 b(an)8 b(W)n(ijngaarden,)0
1826 y(Dekker)n(,)19 b(and)d(Brent,)h(which)f(we)g(next)g(discuss.)0
1912 y Fq(#include)f(<math.h>)0 1949 y(#include)g("nrutil.h")0
1987 y(#define)g(MAXIT)h(60)0 2024 y(#define)f(UNUSED)h(\(-1.11e30)o(\))0
2099 y(float)g(zriddr\(flo)o(at)e(\(*func\)\(flo)o(at\))o(,)g(float)i(x1,)h
(float)f(x2,)g(float)g(xacc\))0 2136 y Fp(Using)d(Ridders')g(metho)q(d,)h
(return)f(the)g(ro)q(ot)f(of)h(a)g(function)h Fo(func)d Fp(kno)o(wn)j(to)f
(lie)h(b)q(et)o(w)o(een)e Fo(x1)h Fp(and)h Fo(x2)o Fp(.)0 2174
y(The)f(ro)q(ot,)e(returned)i(as)f Fo(zriddr)m Fp(,)h(will)h(b)q(e)e
(re\014ned)h(to)f(an)g(app)o(ro)o(ximate)h(accuracy)f Fo(xacc)o
Fp(.)0 2211 y Fq({)66 2248 y(int)17 b(j;)66 2286 y(float)f(ans,fh,fl,f)o(m,f)
o(new)o(,s)o(,xh)o(,xl)o(,xm)o(,xn)o(ew)o(;)66 2360 y(fl=\(*func\)\()o(x1\))o
(;)66 2398 y(fh=\(*func\)\()o(x2\))o(;)66 2435 y(if)h(\(\(fl)g(>)g(0.0)f(&&)h
(fh)g(<)h(0.0\))e(||)h(\(fl)f(<)i(0.0)e(&&)h(fh)g(>)g(0.0\)\))f({)133
2473 y(xl=x1;)133 2510 y(xh=x2;)133 2547 y(ans=UNUSED)o(;)471
b Fp(Any)8 b(highly)h(unlik)o(ely)h(value,)f(to)e(simplify)i(logic)861
2585 y(b)q(elo)o(w.)p eop
%%Page: 359 6
bop 275 50 a Fj(9.3)10 b(V)o(an)g(Wijngaarden\261Dekker)o(\261Brent)f(Method)
316 b Fk(359)p 0 68 1395 2 v 0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore

@endspecial 133 180 a Fq(for)16 b(\(j=1;j<=MAX)o(IT;)o(j++)o(\))f({)199
218 y(xm=0.5*\(xl+)o(xh\))o(;)199 255 y(fm=\(*func\)\()o(xm\))o(;)334
b Fp(First)13 b(of)f(t)o(w)o(o)f(function)i(evaluations)f(p)q(er)h(it-)861
293 y(eration.)-774 b Fq(s=sqrt\(fm*f)o(m-f)o(l*f)o(h\))o(;)199
330 y(if)17 b(\(s)g(==)g(0.0\))f(return)g(ans;)199 367 y(xnew=xm+\(xm)o(-xl)o
(\)*\()o(\(f)o(l)f(>=)i(fh)g(?)g(1.0)f(:)i(-1.0\)*fm/s)o(\);)69
b Fp(Up)q(dating)12 b(fo)o(rmula.)199 405 y Fq(if)17 b(\(fabs\(xnew-)o(ans)o
(\))d(<=)j(xacc\))f(return)g(ans;)199 442 y(ans=xnew;)199 479
y(fnew=\(*func)o(\)\(a)o(ns\))o(;)281 b Fp(Second)13 b(of)h(t)o(w)o(o)f
(function)h(evaluations)g(p)q(er)861 517 y(iteration.)-795
b Fq(if)17 b(\(fnew)f(==)h(0.0\))f(return)g(ans;)199 554 y(if)h
(\(SIGN\(fm,fn)o(ew\))d(!=)j(fm\))f({)143 b Fp(Bo)q(okk)o(eeping)10
b(to)g(k)o(eep)h(the)f(ro)q(ot)g(b)o(rack)o(eted)861 591 y(on)j(next)g
(iteration.)-853 b Fq(xl=xm;)266 629 y(fl=fm;)266 666 y(xh=ans;)266
703 y(fh=fnew;)199 741 y(})18 b(else)e(if)h(\(SIGN\(fl,)o(fne)o(w\))d(!=)j
(fl\))g({)266 778 y(xh=ans;)266 816 y(fh=fnew;)199 853 y(})h(else)e(if)h
(\(SIGN\(fh,)o(fne)o(w\))d(!=)j(fh\))g({)266 890 y(xl=ans;)266
928 y(fl=fnew;)199 965 y(})h(else)e(nrerror\("n)o(ev)o(er)e(get)j(here."\);)
199 1002 y(if)g(\(fabs\(xh-xl)o(\))e(<=)h(xacc\))g(return)g(ans;)133
1040 y(})133 1077 y(nrerror\("z)o(rid)o(dr)e(exceed)i(maximum)f(iterations)o
("\))o(;)66 1114 y(})66 1152 y(else)i({)133 1189 y(if)g(\(fl)f(==)h(0.0\))f
(return)g(x1;)133 1227 y(if)h(\(fh)f(==)h(0.0\))f(return)g(x2;)133
1264 y(nrerror\("r)o(oot)e(must)i(be)h(bracketed)d(in)j(zriddr."\);)66
1301 y(})66 1339 y(return)f(0.0;)539 b Fp(Never)13 b(get)f(here.)0
1376 y Fq(})0 1589 y Fc(CITED)h(REFERENCES)g(AND)f(FUR)o(THER)i(READING:)0
1639 y(Ralston,)d(A.,)f(and)h(Rabinowitz,)h(P)l(.)d(1978,)j
Fa(A)d(First)h(Course)g(in)g(Numerical)h(Analysis)p Fc(,)f(2nd)h(ed.)g(\(New)
e(Y)m(ork:)80 1680 y(McGraw-Hill\),)15 b Fr(x)p Fc(8.3.)0 1730
y(Ostrowski,)d(A.M.)g(1966,)i Fa(Solutions)h(of)e(Equations)h(and)g(Systems)d
(of)h(Equation)q(s)p Fc(,)i(2nd)g(ed.)f(\(New)f(Y)m(ork:)80
1771 y(Academic)i(Press\),)f(Chapter)j(12.)0 1821 y(Ridders,)9
b(C.J.F)l(.)g(1979,)h Fa(IEEE)f(T)n(ransactions)g(on)g(Circuits)f(and)h
(Systems)p Fc(,)f(vol.)g(CAS-26,)i(pp.)f(979\261980.)i([1])0
2074 y Fh(9.3)17 b(V)n(an)g(W)o(ijngaarden\261Dekker\261Brent)e(Method)83
2199 y Fk(While)g(secant)h(and)g(false)f(position)f(formally)g(conver)o(ge)i
(faster)g(than)f(bisection,)h(one)0 2248 y(\256nds)11 b(in)g(practice)g
(pathological)f(functions)g(for)g(which)h(bisection)f(conver)o(ges)i(more)f
(rapidly)m(.)0 2298 y(These)e(can)f(be)g(choppy)m(,)g(discontinuous)d
(functions,)i(or)g(even)h(smooth)f(functions)f(if)h(the)g(second)0
2348 y(derivative)i(changes)i(sharply)e(near)h(the)g(root.)k(Bisection)9
b(always)h(halves)h(the)e(interval,)h(while)0 2398 y(secant)15
b(and)e(false)h(position)e(can)i(sometimes)h(spend)f(many)g(cycles)g(slowly)f
(pulling)e(distant)0 2448 y(bounds)j(closer)i(to)f(a)h(root.)29
b(Ridders')15 b(method)g(does)h(a)f(much)h(better)f(job,)h(but)f(it)g(too)f
(can)0 2497 y(sometimes)g(be)f(fooled.)23 b(Is)13 b(there)g(a)h(way)f(to)f
(combine)h(superlinear)g(conver)o(gence)h(with)e(the)0 2547
y(sureness)20 b(of)f(bisection?)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
