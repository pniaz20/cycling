%!PS-Adobe-2.0
%%Creator: dvips 5.47 Copyright 1986-91 Radical Eye Software
%%Pages: 6 1
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Roman Helvetica-Oblique Helvetica Helvetica-BoldOblique
%%+ Times-Italic
%%EndComments
%%BeginProcSet: tex.pro
/TeXDict 200 dict def TeXDict begin /N /def load def /B{bind def}N /S /exch
load def /X{S N}B /TR /translate load N /isls false N /vsize 10 N /@rigin{
isls{[0 1 -1 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
Resolution VResolution vsize neg mul TR matrix currentmatrix dup dup 4 get
round 4 exch put dup dup 5 get round 5 exch put setmatrix}N /@letter{/vsize 10
N}B /@landscape{/isls true N /vsize -1 N}B /@a4{/vsize 10.6929133858 N}B /@a3{
/vsize 15.5531 N}B /@ledger{/vsize 16 N}B /@legal{/vsize 13 N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0 0]N
/FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn begin
/FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X array
/BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo setfont}2
array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx FMat N df-tail}
B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{pop nn dup definefont
setfont}B /ch-width{ch-data dup length 5 sub get}B /ch-height{ch-data dup
length 4 sub get}B /ch-xoff{128 ch-data dup length 3 sub get sub}B /ch-yoff{
ch-data dup length 2 sub get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B
/ch-image{ch-data dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0
N /rw 0 N /rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S
dup /base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0
ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{ch-image}
imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn /base get cc ctr
put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1 sub dup 2 index S get sf
div put}if put /ctr ctr 1 add N}B /I{cc 1 add D}B /bop{userdict /bop-hook
known{bop-hook}if /SI save N @rigin 0 0 moveto}N /eop{clear SI restore
showpage userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if /VResolution X /Resolution X 1000 div /DVImag X /IE 256
array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for}N /p /show load N
/RMat[1 0 0 -1 0 0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X
/rulex X V}B /V statusdict begin /product where{pop product dup length 7 ge{0
7 getinterval(Display)eq}{pop false}ifelse}{false}ifelse end{{gsave TR -.1 -.1
TR 1 1 scale rulex ruley false RMat{BDot}imagemask grestore}}{{gsave TR -.1
-.1 TR rulex ruley scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /a{
moveto}B /delta 0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{
S p tail}B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B
/j{3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w
}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{clear SS restore}B end
%%EndProcSet
%%BeginProcSet: texps.pro
TeXDict begin /rf{655360 div mul Resolution mul 7227 div /PixPerEm X findfont
dup length 1 add dict /nn X{1 index /FID ne{nn 3 1 roll put}{pop pop}ifelse}
forall 256 dict begin nn /Encoding get 0 1 255{2 copy get 3 index 2 index get
1000 mul PixPerEm div def pop}for pop pop nn /Metrics currentdict put end
/fontname X /nn dup nn definefont[PixPerEm 0 0 PixPerEm neg 0 0]makefont N
fontname{/foo setfont}2 array copy cvx N fontname load 0 nn put}N
/ObliqueSlant{dup sin S cos div neg}B
/SlantFont{/foo X[1 0 foo 1 0 0] TransFont}N
/ExtendFont{/foo X 3 2 roll[S{foo div}forall]3 1 roll[foo 0 0 1 0 0]
TransFont}N
/ExpandFont{/foo X 3 2 roll[S{foo div}forall]3 1 roll[foo 0 0 foo 0 0]
TransFont}N
/TransFont{S findfont S makefont dup length dict /nn X{1 index
/FID ne{nn 3 1 roll put}{pop pop}ifelse}forall dup nn definefont pop}N end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N /vs
792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP false N /BBcalc false N
/p 3 def}B /@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{
@scaleunit div /vsc X}B /@hsize{/hs X /CLIP true N}B /@vsize{/vs X /CLIP true
N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{10 div /rwi X}
B /@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X /BBcalc true N}B
/magscale true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{md begin /letter{}N /note{}N /legal{}N /od{txpose 1 0 mtx
defaultmatrix dtransform S atan/pa X newpath clippath mark{transform{
itransform moveto}}{transform{itransform lineto}}{6 -2 roll transform 6 -2
roll transform 6 -2 roll transform{itransform 6 2 roll itransform 6 2 roll
itransform 6 2 roll curveto}}{{closepath}}pathforall newpath counttomark array
astore /gc xdf pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{
PaintBlack}if}N /txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR
pop 1 -1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0 TR}if
yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR pop pop 270
rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip not
and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg sub neg 0 TR}if yflip xflip
not and{TR pop pop 270 rotate ppr 2 get ppr 0 get neg sub neg 0 S TR}if}
ifelse scaleby96{ppr aload pop 4 -1 roll add 2 div 3 1 roll add 2 div 2 copy
TR .96 dup scale neg S neg S TR}if}N /cp{pop pop showpage pm restore}N end}if}
if}N /normalscale{Resolution 72 div VResolution 72 div neg scale magscale{
DVImag dup scale}if}N /psfts{S 65536 div N}N /startTexFig{/psf$SavedState save
N userdict maxlength dict begin /magscale false def normalscale currentpoint
TR /psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx psf$llx
sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy scale psf$cx
psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR /showpage{}N
/erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{psf$llx psf$lly
psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2 roll moveto 6 -1 roll
S lineto S lineto S lineto closepath clip newpath moveto}N /endTexFig{end
psf$SavedState restore}N /@beginspecial{SDict begin /SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults}N /@setspecial{CLIP{newpath 0 0
moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR
hsc vsc scale ang rotate BBcalc{rwi urx llx sub div dup scale llx neg lly neg
TR}if /showpage{}N /erasepage{}N /copypage{}N newpath}N /@endspecial{grestore
clear SpecialSave restore end}N /@defspecial{SDict begin}N /@fedspecial{end}B
/li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{/SaveX currentpoint /SaveY X N 1
setlinecap newpath}N /st{stroke SaveX SaveY moveto}N /fil{fill SaveX SaveY
moveto}N /ellipse{/endangle X /startangle X /yrad X /xrad X /savematrix matrix
currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc savematrix
setmatrix}N end
%%EndProcSet
TeXDict begin 1000 300 300 @start /Fa [ 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 10 14 17 21 21
35 32 14 14 14 21 28 10 14 10 12 21 21 21 21 21 21 21 21 21
21 14 14 28 28 28 21 38 25 25 28 30 25 25 30 30 14 18 28 23
35 28 30 25 30 25 21 23 30 25 35 25 23 23 16 12 16 18 21 14
21 21 18 21 18 12 21 21 12 12 18 12 30 21 21 21 21 16 16 12
21 18 28 18 18 16 17 11 17 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 16 21 21 7 21 21 21 21
9 23 21 14 14 21 21 0 21 21 21 10 0 22 15 14 23 23 21 37 42
0 21 0 14 14 14 14 14 14 14 14 0 14 14 0 14 14 14 37 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 37 0 11 0 0 0 0 23 30 39 13 0 0 0
0 0 28 0 0 0 12 0 0 12 21 28 21 0 0 0 0 ] /Times-Italic 1000
655360 rf /Fb [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 17 21 30 35 35 55 45 17 21 21 24 36 17
21 17 17 35 35 35 35 35 35 35 35 35 35 21 21 36 36 36 38 61
45 45 45 45 42 38 48 45 17 35 45 38 52 45 48 42 48 45 42 38
45 42 59 42 42 38 21 17 21 36 35 17 35 38 35 38 35 21 38 38
17 17 35 17 55 38 38 38 38 24 35 21 38 35 48 35 35 31 24 17
24 36 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 21 35 35 10 35 35 35 35 15 31 35 21 21 38 38
0 35 35 35 17 0 35 22 17 31 31 35 62 62 0 38 0 21 21 21 21
21 21 21 21 0 21 21 0 21 21 21 62 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 62 0 23 0 0 0 0 38 48 62 23 0 0 0 0 0 55 0 0 0 17 0 0
17 38 59 38 0 0 0 0 ] /Helvetica-BoldOblique 1000 983040 rf
/Fc [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 9 9 12 18 18 30 22 7 11 11 13 19 9 11 9 9 18 18 18
18 18 18 18 18 18 18 9 9 19 19 19 18 34 22 22 24 24 22 20 26
24 9 17 22 18 28 24 26 22 26 24 22 20 24 22 31 22 22 20 9 9
9 16 18 7 18 18 17 18 18 9 18 18 7 7 17 7 28 18 18 18 18 11
17 9 18 17 24 17 17 17 11 9 11 19 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 11 18 18 6 18 18
18 18 6 11 18 11 11 17 17 0 18 18 18 9 0 18 12 7 11 11 18 33
33 0 20 0 11 11 11 11 11 11 11 11 0 11 11 0 11 11 11 33 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 33 0 12 0 0 0 0 18 26 33 12 0 0
0 0 0 30 0 0 0 9 0 0 7 20 31 20 0 0 0 0 ] /Helvetica-Oblique
1000 524288 rf /Fd [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 12 18 18 30 22 7 11 11 13 19
9 11 9 9 18 18 18 18 18 18 18 18 18 18 9 9 19 19 19 18 34 22
22 24 24 22 20 26 24 9 17 22 18 28 24 26 22 26 24 22 20 24
22 31 22 22 20 9 9 9 16 18 7 18 18 17 18 18 9 18 18 7 7 17
7 28 18 18 18 18 11 17 9 18 17 24 17 17 17 11 9 11 19 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 11 18 18 6 18 18 18 18 6 11 18 11 11 17 17 0 18 18 18 9 0
18 12 7 11 11 18 33 33 0 20 0 11 11 11 11 11 11 11 11 0 11
11 0 11 11 11 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 33 0 12 0
0 0 0 18 26 33 12 0 0 0 0 0 30 0 0 0 9 0 0 7 20 31 20 0 0 0
0 ] /Helvetica 1000 524288 rf /Fe [ 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 11 14 17 17 28 26
11 11 11 17 19 8 11 8 9 17 17 17 17 17 17 17 17 17 17 9 9 19
19 19 15 31 24 22 22 24 20 18 24 24 11 13 24 20 30 24 24 18
24 22 18 20 24 24 31 24 24 20 11 9 11 16 17 11 15 17 15 17
15 11 17 17 9 9 17 9 26 17 17 17 17 11 13 9 17 17 24 17 17
15 16 7 16 18 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 11 17 17 6 17 17 17 17 6 15 17 11 11
18 18 0 17 17 17 8 0 15 12 11 15 15 17 33 33 0 15 0 11 11 11
11 11 11 11 11 0 11 11 0 11 11 11 33 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 30 0 9 0 0 0 0 20 24 30 10 0 0 0 0 0 22 0 0 0 9 0
0 9 17 24 17 0 0 0 0 ] /Times-Roman 1000 524288 rf /Ff [ 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 9 12 15 19 19 31 29 12 12 12 19 21 9 12 9 10 19 19 19 19
19 19 19 19 19 19 10 10 21 21 21 17 34 27 25 25 27 23 21 27
27 12 15 27 23 33 27 27 21 27 25 21 23 27 27 35 27 27 23 12
10 12 18 19 12 17 19 17 19 17 12 19 19 10 10 19 10 29 19 19
19 19 12 15 10 19 19 27 19 19 17 18 7 18 20 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 12 19 19
6 19 19 19 19 7 17 19 12 12 21 21 0 19 19 19 9 0 17 13 12 17
17 19 37 37 0 17 0 12 12 12 12 12 12 12 12 0 12 12 0 12 12
12 37 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 33 0 10 0 0 0 0 23 27
33 12 0 0 0 0 0 25 0 0 0 10 0 0 10 19 27 19 0 0 0 0 ] /Times-Roman
1000 589824 rf /Fg [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 10 10 13 21 21 33 25 8 12 12 15 22
10 12 10 10 21 21 21 21 21 21 21 21 21 21 10 10 22 22 22 21
38 25 25 27 27 25 23 29 27 10 19 25 21 31 27 29 25 29 27 25
23 27 25 35 25 25 23 10 10 10 18 21 8 21 21 19 21 21 10 21
21 8 8 19 8 31 21 21 21 21 12 19 10 21 19 27 19 19 19 12 10
12 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 12 21 21 6 21 21 21 21 7 12 21 12 12 19 19 0
21 21 21 10 0 20 13 8 12 12 21 37 37 0 23 0 12 12 12 12 12
12 12 12 0 12 12 0 12 12 12 37 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 37 0 14 0 0 0 0 21 29 37 14 0 0 0 0 0 33 0 0 0 10 0 0 8
23 35 23 0 0 0 0 ] /Helvetica-Oblique 1000 589824 rf /Fh [
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 10 14 17 21 21 35 32 14 14 14 21 23 10 14 10 12 21 21 21
21 21 21 21 21 21 21 12 12 23 23 23 18 38 30 28 28 30 25 23
30 30 14 16 30 25 37 30 30 23 30 28 23 25 30 30 39 30 30 25
14 12 14 19 21 14 18 21 18 21 18 14 21 21 12 12 21 12 32 21
21 21 21 14 16 12 21 21 30 21 21 18 20 8 20 22 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 14
21 21 7 21 21 21 21 7 18 21 14 14 23 23 0 21 21 21 10 0 19
15 14 18 18 21 42 42 0 18 0 14 14 14 14 14 14 14 14 0 14 14
0 14 14 14 42 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 37 0 11 0 0 0
0 25 30 37 13 0 0 0 0 0 28 0 0 0 12 0 0 12 21 30 21 0 0 0 0
] /Times-Roman 1000 655360 rf /Fi 1 121 df<1E0031806080E0C0E1C0E080E000E00060
00300018001C0073006380E180E1C0E1C0E1C061C0718033800E0006000300018001C001C041C0
E1C0C1C0418063001E000A217D9911>120 D E /Fj 1 1 df<FFFFF0FFFFF014027D881B>0
D E /Fk 2 103 df<0000C00000C00001C00001C00003C00005C00005E00008E00008E00010E0
0020E00020E00040E000C0E00080E001FFF0010070020070040070040070080070180070FE03FE
17177F961A>65 D<000E0013003700360060006000600060006007FC00C000C000C000C000C001
800180018001800180018003000300030003006600E600CC007800101D7E9611>102
D E /Fl 1 1 df<FFFFC0FFFFC012027D871A>0 D E /Fm 10 116 df<07C00FE01C7038383018
701C701CE00EE00EE00EE00EE00EE00EE00EE00EE00E701C701C383838381C700FE007C00F177E
9614>48 D<0300070007000F003F00F70047000700070007000700070007000700070007000700
0700070007000700FFF0FFF00C177C9614>I<00780000F80001B80001B8000338000338000638
000E38000C38001C3800383800303800703800E03800FFFF80FFFF800038000038000038000038
0000380003FF8003FF8011177F9614>52 D<1FC0007FF000707800203C00001C00001C0007FC00
1FFC007C1C00F01C00E01C00E01C00E01C00707C003FFF800F8F8011107E8F14>97
D<007E00007E00000E00000E00000E00000E00000E0007CE001FFE003C3E00781E00700E00F00E
00E00E00E00E00E00E00E00E00F00E00701E00781E003C3E001FFFC007CFC012177F9614>100
D<07E01FF83C3C781C701EF00EE00EFFFEFFFEE000F0007000780E3C1E0FFC03F00F107E8F14>
I<FC7800FDFE001F8F001E07001E07001C07001C07001C07001C07001C07001C07001C07001C07
001C0700FF9FE0FF9FE01310808F14>110 D<FCF800FFFE001F0F001E07801C03801C03C01C01
C01C01C01C01C01C01C01C03C01E03801E07801F0F001FFE001CF8001C00001C00001C00001C00
001C00001C0000FF8000FF80001218808F14>112 D<FF0F80FF3FC007F1C007C08007C0000780
00070000070000070000070000070000070000070000070000FFFC00FFFC001210808F14>114
D<0FD87FF8E078C038C038F0007F803FF007FC001EE00EE006F006F81CFFF8CFE00F107E8F14>
I E /Fn 48 122 df<000703C70FC70C401C001C001C001C001C00FFC7FFC71C071C071C071C07
1C071C071C071C071C071C071C071C071C071018809713>12 D<03C70FC70C471C071C071C071C
071C07FFC7FFC71C071C071C071C071C071C071C071C071C071C071C071C071C071017809613>
I<E1C0E1C0E1C060C040804080C1800A077F9612>34 D<0180030006000C001C00180038003000
7000700070006000E000E000E000E000E000E000E000E000E000E0006000700070007000300038
0018001C000C0006000300018009227E980E>40 D<C0006000300018001C000C000E0006000700
0700070003000380038003800380038003800380038003800380030007000700070006000E000C
001C00180030006000C00009227E980E>I<E0E0E0604040C003077D820A>44
D<FF80FF80090280880C>I<E0E0E003037D820A>I<07C01FF03C78701C701C600CE00EE00EE00E
E00EE00EE00EE00EE00EE00EE00E701C701C783C3C781FF007C00F167F9512>48
D<01000700FF00FF00070007000700070007000700070007000700070007000700070007000700
07007FF07FF00C167E9512>I<0FC03FE070706038E01C401C401C001C001C00380038007000E0
00C00180030006000C00180030007FFC7FFC0E167F9512>I<3FF83FF838003800380038003800
38003FC03FE03C703038001C001C001C001C001C4018E03870703FE00F800E167F9512>53
D<01F007F80E081C003800700070006080E7F0FFF8F81CF01CE00EE00EE00EE00E700E700C301C
3C381FF007C00F167F9512>I<FFFEFFFE000E001C00380070006000E000C001C0018003800380
07000700070007000E000E000E000E000E000F167F9512>I<1F807FC0E0E0C0704070007000E0
01E00380030006000600060006000E00040000000000000000000E000E000E000C177E9611>63
D<FFF000FFFC00E01E00E00700E00380E00380E001C0E001C0E000E0E000E0E000E0E000E0E000
E0E000E0E000E0E000C0E001C0E001C0E00380E00700E01E00FFFC00FFF00013177D9619>68
D<FFFEFFFEE000E000E000E000E000E000E000E000FFFCFFFCE000E000E000E000E000E000E000
E000E000FFFFFFFF10177D9615>I<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E003
177D960A>73 D<F8001FF8001FE80017EC0037EC0037EE0077E60067E60067E700E7E300C7E381
C7E381C7E18187E1C387E1C387E0C307E0E707E0E707E06607E06607E03C07E03C07E03C071817
7D961F>77 D<FFF000FFFC00E01E00E00700E00380E00380E00380E00380E00380E00700E01E00
FFFC00FFF000E00000E00000E00000E00000E00000E00000E00000E00000E00000E0000011177D
9617>80 D<07E01FF8383C600CC00CC000C000E00070007E003FE00FF001F8001C000E00060006
0006C006E00CF8387FF00FC00F177E9614>83 D<FFFFF8FFFFF800700000700000700000700000
700000700000700000700000700000700000700000700000700000700000700000700000700000
700000700000700000700015177F9618>I<E00038E00038F000387000707000703800E03800E0
1C00C01C01C01C01C00E03800E0380070300070700070700038E00038E00018C0001DC0001DC00
00F80000F80000700016177F9618>86 D<FFFF80FFFF80000700000F00000E00001C00003C0000
780000700000F00001E00001C00003C0000780000700000F00001E00001C000038000078000070
0000FFFF80FFFF8011177E9616>90 D<60C040804080C180E1C0E1C0E1C00A077A9612>92
D<1FC07FE0707040380038003801F81FF87E38F038E038E038F0787FF83FB80D0F7F8E11>97
D<E000E000E000E000E000E000E000E000E7C0FFE0F870E038E038E01CE01CE01CE01CE01CE038
E038F0F0FFE0E7800E177E9612>I<07E01FF8381870007000E000E000E000E000E00070007008
38381FF807E00D0F7F8E10>I<001C001C001C001C001C001C001C001C079C1FFC3C3C701C701C
E01CE01CE01CE01CE01C701C703C387C1FFC0F9C0E177F9612>I<0F801FE0387070306038E018
FFF8FFF8E000E0006000700038181FF807E00D0F7F8E10>I<03E007E00C201C001C001C001C00
1C00FF80FF801C001C001C001C001C001C001C001C001C001C001C001C001C000B1780960B>I<
0F9F1FFF38F0707070707070707038E03FC06F80600070007FF03FF87FFC701EE00EE00EE00E78
3C3FF80FE010167F8E12>I<E000E000E000E000E000E000E000E000E7E0EFF0F878F038E038E0
38E038E038E038E038E038E038E038E038E0380D177E9612>I<E0E0E0000000000000E0E0E0E0
E0E0E0E0E0E0E0E0E0E0E003187E9708>I<E000E000E000E000E000E000E000E000E0F8E1F0E3
E0E3C0E780EF00FE00FF00FF80F380E1C0E1E0E0E0E0F0E0780D177E9611>107
D<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E003177E9608>I<E7E1F8EFF3FCF87E
1EF03C0EE0380EE0380EE0380EE0380EE0380EE0380EE0380EE0380EE0380EE0380EE0380E170F
7E8E1C>I<E7E0EFF0F878F038E038E038E038E038E038E038E038E038E038E038E0380D0F7E8E
12>I<07C01FF03838701C701CE00EE00EE00EE00EE00E701C701C3C781FF007C00F0F7F8E12>I<
E7C0FFE0F870E038E038E01CE01CE01CE01CE01CE038E038F0F0FFE0E780E000E000E000E000E0
00E0000E157E8E12>I<079C1FFC3C7C703C701CE01CE01CE01CE01CE01C701C701C387C1FFC0F
9C001C001C001C001C001C001C0E157F8E12>I<E380EF80FC00F800F000F000E000E000E000E0
00E000E000E000E000E000090F7E8E0C>I<1F007FC0E0C0E000E000F0007F003F800FC001E080
E0C0E0E1C07FC01F000B0F7F8E0E>I<3800380038003800FF80FF803800380038003800380038
00380038003800380038401FC01F000A137F920D>I<E038E038E038E038E038E038E038E038E0
38E038E038E038E0F87FF83F380D0F7E8E12>I<E038E038E03870707070707038E038E038E01C
C01DC00D800D800F8007000E0F7F8E10>I<E0F038E0F838E0D838E09838719C70719C70718C70
310C603B0CE03B0EE03B06E01A06C01A06C01E07C00E0380160F7F8E18>I<E038E03870387070
7070386038E018E01CC01CC00DC00D800580070007000700060006008C00FC00F8000E157F8E10
>121 D E /Fo 8 116 df<003000300070006000E000C000C001C0018003800300070006000600
0E000C001C00180038003000300070006000E000C000C000E0006000700030003000380018001C
000C000E0006000600070003000380018001C000C000C000E000600070003000300C327C8114>
10 D<C000C000E0006000700030003000380018001C000C000E00060006000700030003800180
01C000C000C000E000600070003000300070006000E000C000C001C00180038003000700060006
000E000C001C00180038003000300070006000E000C000C0000C327D8114>I<0006000C001800
300070006000C001C0018003800300070006000E000C001C001C00180038003800380030007000
70007000700070007000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E0
00E000E000E000700070007000700070007000300038003800380018001C001C000C000E000600
070003000380018001C000C00060007000300018000C00060F4A788119>16
D<C0006000300018001C000C000600070003000380018001C000C000E000600070007000300038
003800380018001C001C001C001C001C001C000E000E000E000E000E000E000E000E000E000E00
0E000E000E000E000E000E000E000E001C001C001C001C001C001C001800380038003800300070
0070006000E000C001C0018003800300070006000C001C00180030006000C0000F4A7F8119>I<
FFFFFFFFFFFFC0FFFFFFFFFFFFE07F00000001FFE07F000000001FE03F8000000003F01FC00000
0000F00FC000000000380FE0000000001807F0000000000C03F8000000000403F8000000000401
FC000000000200FE0000000000007F0000000000007F0000000000003F8000000000001FC00000
0000000FC000000000000FE0000000000007F0000000000003F8000000000003F8000000000001
FC000000000000FE0000000000007E0000000000007F0000000000003F8000000000001FC00000
0000001FC000000000000FC000000000000780000000000003800000000000070000000000000E
0000000000001C000000000000380000000000007000000000000070000000000000E000000000
0001C0000000000003800000000000070000000000000E0000000000000E0000000000001C0000
000002003800000000040070000000000400E0000000000C01E0000000001801C0000000003803
8000000000F8070000000001F00E000000000FF01C00000001FFF03FFFFFFFFFFFE03FFFFFFFFF
FFE07FFFFFFFFFFFE0FFFFFFFFFFFFC0373A7E7F3C>88 D<000000038000000006600000000C70
0000000CF00000000CF00000001C60000000180000000038000000003800000000380000000070
00000000700000000070000000007000000000F000000000E000000000E000000000E000000001
E000000001E000000001C000000001C000000003C000000003C000000003C000000003C0000000
07800000000780000000078000000007800000000F800000000F800000000F000000000F000000
001F000000001F000000001F000000001F000000001E000000003E000000003E000000003E0000
00003E000000003C000000007C000000007C000000007C000000007C000000007800000000F800
000000F800000000F800000000F800000000F000000001F000000001F000000001F000000001F0
00000001E000000001E000000003E000000003E000000003C000000003C000000003C000000003
C00000000780000000078000000007800000000780000000070000000007000000000F00000000
0F000000000E000000000E000000000E000000001E000000001C000000001C000000001C000000
001800000000380000000038000000003000000000700000006060000000F060000000F0C00000
00E18000000063000000001E00000000245C7E7F17>90 D<00000000060000000006000000000E
000000000C000000001C0000000018000000003800000000300000000070000000006000000000
E000000000C000000001C000000001800000000380000000030000000007000000000600000000
0E000000000C000000001C00000000180000000038000000003000000000700008000060001C00
00E0003C0000C000CE0001C0000E000180000E0003800007000300000700070000038006000003
800E000001C00C000001C01C000001E018000000E038000000E030000000707000000070600000
0038E000000038C00000001DC00000001D800000001F800000000F000000000F00000000060000
0027327C812A>112 D<000000000600000000060000000006000000000E000000000C00000000
0C000000000C000000000C000000001C0000000018000000001800000000180000000018000000
003800000000300000000030000000003000000000300000000070000000006000000000600000
0000600000000060000000006000000000E000000000C000000000C000000000C000000000C000
000001C00000000180000000018000000001800000000180000000038000000003000000000300
00000003000000000300000000070000000006000000000600000000060000000006000000000E
000000000C000000000C000000000C000000000C000000001C0000000018000000001800000000
180000000018000000003800000000300000000030000000003000000000300000000070000000
00600000000060000000006000080000600008000060001C0000E0001C0000C0003C0000C0003C
0000C0005C0000C0005C0001C0008E000180000E000180000E000180000E000180000E00038000
0E0003000007000300000700030000070003000007000700000700060000038006000003800600
00038006000003800E000003800C000003800C000001C00C000001C00C000001C01C000001C018
000001C018000001C018000000E018000000E038000000E030000000E030000000E03000000070
3000000070700000007060000000706000000070600000007060000000386000000038E0000000
38C000000038C000000038C000000038C00000001DC00000001D800000001D800000001D800000
001D800000000F800000000F000000000F000000000F000000000F000000000F00000000060000
0000060000000006000000277D7C812A>115 D E /Fp 5 123 df<0060006000E000C000C001C0
018001800380030003000700060006000E000C000C001C00180018003800300030007000600060
00E000C000C0000B1D7E9511>61 D<07E01FC000E0060001700400017004000138040001380400
021C0800021C0800020E0800020E0800040710000407100004039000040390000801E0000801E0
000800E0000800E00018004000FE0040001A147F931A>78 D<06070600000000384C4C8C981818
30326262643808147F930C>105 D<0060007000600000000000000000038004C0046008C008C0
00C000C0018001800180018003000300030003006600E600CC0078000C1A81930E>I<07100F20
10E000400080010002000C00102020203840478083000C0D7F8C10>122
D E /Fq 16 111 df<004000800100020006000C000C0018001800300030007000600060006000
E000E000E000E000E000E000E000E000E000E000E000E000600060006000700030003000180018
000C000C00060002000100008000400A2A7D9E10>40 D<800040002000100018000C000C000600
060003000300038001800180018001C001C001C001C001C001C001C001C001C001C001C001C001
8001800180038003000300060006000C000C00180010002000400080000A2A7E9E10>I<000600
000006000000060000000600000006000000060000000600000006000000060000000600000006
00000006000000060000FFFFFFE0FFFFFFE0000600000006000000060000000600000006000000
060000000600000006000000060000000600000006000000060000000600001B1C7E9720>43
D<03C00C301818300C300C700E60066006E007E007E007E007E007E007E007E007E007E007E007
E007E00760066006700E300C300C18180C3007E0101D7E9B15>48 D<030007003F00C700070007
000700070007000700070007000700070007000700070007000700070007000700070007000700
07000F80FFF80D1C7C9B15>I<07C01830201C400C400EF00FF80FF807F8077007000F000E000E
001C001C00380070006000C00180030006010C01180110023FFE7FFEFFFE101C7E9B15>I<07E0
1830201C201C781E780E781E381E001C001C00180030006007E00030001C001C000E000F000F70
0FF80FF80FF80FF00E401C201C183007E0101D7E9B15>I<000C00000C00001C00003C00003C00
005C0000DC00009C00011C00031C00021C00041C000C1C00081C00101C00301C00201C00401C00
C01C00FFFFC0001C00001C00001C00001C00001C00001C00001C0001FFC0121C7F9B15>I<300C
3FF83FF03FC020002000200020002000200023E024302818301C200E000E000F000F000F600FF0
0FF00FF00F800E401E401C2038187007C0101D7E9B15>I<00F0030C06040C0E181E301E300C70
0070006000E3E0E430E818F00CF00EE006E007E007E007E007E007600760077006300E300C1818
0C3003E0101D7E9B15>I<4000007FFF807FFF007FFF0040020080040080040080080000100000
100000200000600000400000C00000C00001C00001800001800003800003800003800003800007
8000078000078000078000078000078000030000111D7E9B15>I<03E00C301008200C20066006
600660067006780C3E083FB01FE007F007F818FC307E601E600FC007C003C003C003C003600260
04300C1C1007E0101D7E9B15>I<03C00C301818300C700C600EE006E006E007E007E007E007E0
076007700F300F18170C2707C700060006000E300C780C78187010203030C00F80101D7E9B15>
I<7FFFFFC0FFFFFFE0000000000000000000000000000000000000000000000000000000000000
0000FFFFFFE07FFFFFC01B0C7E8F20>61 D<FC001C001C001C001C001C001C001C001C001C001C
001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C00FF80091D
7F9C0C>108 D<FC7C001C87001D03001E03801C03801C03801C03801C03801C03801C03801C03
801C03801C03801C03801C03801C03801C0380FF9FF014127F9117>110
D E /Fr 4 62 df<0C001C00EC000C000C000C000C000C000C000C000C000C000C000C000C000C
000C000C00FFC00A137D9211>49 D<1F0060C06060F070F030603000700070006000C001C00180
020004000810101020207FE0FFE00C137E9211>I<60607FC07F8044004000400040004F0070C0
40E0006000700070E070E070E06040E021C01F000C137E9211>53 D<7FFFE0FFFFF00000000000
00000000000000000000000000FFFFF07FFFE0140A7E8B19>61 D E /Fs
20 123 df<001E0000718000C0C00180C00380C00300E00700E00700E00E01C00E01C00E01C00E
01801C03801C03001C06001E0C003A180039E000380000380000700000700000700000700000E0
0000E00000C00000131B7F9115>26 D<60F0F06004047C830C>58 D<60F0F07010101010202040
80040C7C830C>I<0000038000000F0000003C000000F0000003C000000F0000003C000000F000
0003C000000F0000003C000000F0000000F00000003C0000000F00000003C0000000F00000003C
0000000F00000003C0000000F00000003C0000000F000000038019187D9520>I<000300030007
00060006000E000C001C0018001800380030003000700060006000E000C000C001C00180038003
0003000700060006000E000C000C001C001800180038003000700060006000E000C000C0001029
7E9E15>I<01FFC3FF80003C0078000038007000003800700000380070000038007000007000E0
00007000E000007000E000007000E00000E001C00000E001C00000E001C00000FFFFC00001C003
800001C003800001C003800001C003800003800700000380070000038007000003800700000700
0E000007000E000007000E000007000E00000F001E0000FFE1FFC000211C7E9B23>72
D<01FC00FF80001C001C00002E001800002E001000002E00100000270010000047002000004300
2000004380200000438020000081C040000081C040000081C040000080E040000100E080000100
7080000100708000010070800002003900000200390000020039000002001D000004001E000004
000E000004000E00000C000E00001C00040000FF80040000211C7E9B21>78
D<FFC00FF01E0003801C0003001C0002001C0004001E0004000E0008000E0008000E0010000E00
20000E0020000E0040000E0080000E0080000F0100000701000007020000070400000704000007
080000071800000710000007A0000003A0000003C0000003800000038000000300000003000000
1C1D7D9B18>86 D<FFC1FFC1FF1C003C003C1C001C00101C001C00201C003C00201C007C00401C
005C00401C009C00801C009C00801C011C01001C011C01001C021C02001C021C04001C041C0400
1C081C08001E081C08000E101C10000E101C10000E200E20000E200E60000E400E40000E400E80
000E800E80000F000F00000F000F00000E000E00000E000E00000C000C00000C00080000281D7D
9B27>I<3F00070007000E000E000E000E001C001C001C001C0039E03A303C1838187018701C70
1C701CE038E038E038E030E070E060E0C061C023001E000E1D7E9C12>98
D<0007E00000E00000E00001C00001C00001C00001C000038000038000038000038001E7000717
000C0F00180F00380E00300E00700E00700E00E01C00E01C00E01C00E01C00E03880E03880E038
806078803199001E0E00131D7E9C16>100 D<01F007080C0818043808300870307FC0E000E000
E000E000E000E0046008601030600F800E127E9113>I<0001E0000630000E78000CF0001C6000
1C00001C00001C00003C0000380000380003FFC000380000380000700000700000700000700000
700000E00000E00000E00000E00000E00001C00001C00001C00001C00001C00001800003800003
8000630000F30000F60000E4000078000015257E9C14>I<007180018B800307800607800E0700
0C07001C07001C0700380E00380E00380E00380E00381C00381C00381C00183C0008F800073800
003800003800007000607000F06000F0E000E180007E0000111A7F9114>I<0007000F000F0006
0000000000000000000000000070009C010C020C021C041C001C001C0038003800380038007000
700070007000E000E000E000E001C061C0F180F300E6007C001024809B11>106
D<381F004E61804681C04701C08F01C08E01C00E01C00E01C01C03801C03801C03801C07003807
10380710380E10380E2070064030038014127E9119>110 D<01F0060C04040C0E180C1C001F00
0FE00FF003F80038201C7018F018F010803060601F800F127E9113>115
D<07878008C84010F0C020F1E020E3C040E18000E00000E00001C00001C00001C00001C0006380
80F38080F38100E5810084C60078780013127E9118>120 D<1C00C02701C04701C04701C08703
808703800E03800E03801C07001C07001C07001C0700180E00180E00180E001C1E000C3C0007DC
00001C00001800603800F03000F06000E0C0004180003E0000121A7E9114>I<038107C10FE608
1C10080010002000400080010002000400080410042C1877F843F081C010127E9113>I
E /Ft 52 126 df<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E060C00B097D9312>34
D<0E700E700E700E70FFFEFFFE7FFE0E700E700E701CE01CE07FFEFFFEFFFE1CE01CE01CE01CE0
1CE00F147F9312>I<0F001F8039C039C039C039C03BBE3BBE3F781E701C703EF07EE0EFE0E7C0
E7C4E3CEF7EE7FFC3C380F147F9312>38 D<018007800F001E003C00380078007000F000E000E0
00E000E000E000E000E000F0007000780038003C001E000F000780018009197B9612>40
D<C000F00078003C001E000E000F00070007800380038003800380038003800380078007000F00
0E001E003C007800F000C00009197D9612>I<070007000700E738FFF87FF01FC01FC07FF0FFF8
E7380700070007000D0E7E9012>I<038003800380038003800380FFFEFFFEFFFE038003800380
0380038003800F0F7F9112>I<307C7C3C0C1C38F0E006097A8312>I<FFF8FFF8FFF80D037E8B12
>I<60F0F0600404798312>I<0018003800380070007000E000E001C001C001C003800380070007
000E000E001C001C001C003800380070007000E000E000C0000D1A7E9612>I<07C00FE01C7038
38701C701CE00EE00EE00EE00EE00EE00EE00EE01E701C701C38381C700FE007C00F147F9312>
I<030007000F001F00FF00F7000700070007000700070007000700070007000700070007007FF0
7FF00C147E9312>I<0F803FE070F0F078E038E038403800380078007000F001E003C007800F00
1E0038387038FFF8FFF80D147E9312>I<0FE03FF0783C701C701C001C003C007807F007F0003C
001C000E000EE00EE00EE01CF83C3FF00FC00F147F9312>I<00F001F00370037006700E700C70
1C70387038707070E070FFFEFFFE007000700070007003FE03FE0F147F9312>I<7FF07FF07000
700070007000700070007F807FE060F0007800384038E038E038E07070F03FC01F000D147E9312
>I<E000FFFEFFFEE03CE078007000E001E001C003C003800780070007000F000E000E000E000E
000E000E000F157F9412>55 D<3078783000000000000030787838183830F0C005137A8D12>59
D<0038007801F003E00F801F003C00F800F000F8003C001F000F8003E001F0007800380D117E92
12>I<FFFEFFFE7FFE0000000000007FFEFFFEFFFE0F097F8E12>I<3FE07FF07070E038E038E038
E038E038E038E038E038E038E038E038E738E3B8E3B873F07FF03FE000E000E000F0007000780D
197E9312>81 D<FF80FFE038F03878383838383838387838F03FE03FE038F03870387038703870
38773877FE3FFE1C10147F9312>I<1F303FF070F0E0F0E070E070F000F0007F003FE00FF000F0
00780038E038E038F078F070FFE0CF800D147E9312>I<3F807FE070F0207000700FF03FF07870
F070E070E070F0F07FFE1F3E0F0E7E8D12>97 D<07F01FF838387010F000E000E000E000E000F0
00703838781FF007E00D0E7E8D12>99 D<01F801F8003800380038003807B81FF838787078F038
E038E038E038E038F038707878F81FFF0FBF10147F9312>I<07801FE038F07078F038E038FFF8
FFF8E000F000703838781FF007C00D0E7E8D12>I<007E01FF03C7038203800380FFFEFFFE0380
0380038003800380038003800380038003807FFC7FFC1014809312>I<0F9E1FFF38E770707070
7070707038E03FC07F8070003FE03FF87FFCF01EE00EE00EE00EF01E783C3FF80FE010167F8D12
>I<FC0000FC00001C00001C00001C00001C00001CF0001FF8001F1C001E1C001C1C001C1C001C
1C001C1C001C1C001C1C001C1C001C1C00FF9F80FF9F801114809312>I<06000F000F00060000
0000000000FF00FF000700070007000700070007000700070007000700FFF8FFF80D157D9412>
I<00C001E001E000C00000000000003FE03FE000E000E000E000E000E000E000E000E000E000E0
00E000E000E000E000E041E0E1C0FF807E000B1C7E9412>I<FC0000FC00001C00001C00001C00
001C00001FFF001FFF001C78001CF0001DE0001FC0001FE0001FE0001EF0001C78001C3C001C3C
00FF3F80FF3F801114809312>I<FF80FF80038003800380038003800380038003800380038003
8003800380038003800380FFFEFFFE0F147F9312>I<FB8E00FFFF803EFB803CF38038E38038E3
8038E38038E38038E38038E38038E38038E380FEFBE0FEFBE0130E818D12>I<FCF000FFF8001F
1C001E1C001C1C001C1C001C1C001C1C001C1C001C1C001C1C001C1C00FF9F80FF9F80110E808D
12>I<0F803FE038E07070E038E038E038E038E038F078707038E03FE00F800D0E7E8D12>I<FDF0
FFF81F1E1E0E1C0F1C071C071C071C071C0F1E0E1F1C1FF81DE01C001C001C001C001C00FF80FF
801015808D12>I<079C001FFC00387C00703C00F01C00E01C00E01C00E01C00E01C00F01C0070
3C00387C001FFC00079C00001C00001C00001C00001C00001C0000FF8000FF8011157F8D12>I<
FE7CFEFE0FCE0F840F000E000E000E000E000E000E000E00FFF0FFF00F0E7F8D12>I<1FF07FF0
E070C070E000FF003FE00FF00078E018E018F038FFF0DFC00D0E7E8D12>I<0E000E000E000E00
FFF8FFF80E000E000E000E000E000E000E000E380E380E7807F003C00D127F9112>I<FCFC00FC
FC001C1C001C1C001C1C001C1C001C1C001C1C001C1C001C1C001C1C001C3C000FFF8007DF8011
0E808D12>I<FEFEFEFE38383C781C701C701C700EE00EE00EE006C007C007C003800F0E7F8D12>
I<FEFEFEFE701C701C301838383BB83FF83FF83AB838B81CF01CF01CF00F0E7F8D12>I<FCFEFC
FE1CF00EE00FC007C00380078007C00EE01EF01C70FEFEFEFE0F0E7F8D12>I<FEFEFEFE3C381C
381C701C700E700E600E6006E006E003C003C003C0038003800380778077007E003C000F157F8D
12>I<7FFC7FFC7038707000E001C0038007000E001C1C381C701CFFFCFFFC0E0E7F8D12>I<00F8
03F80780070007000700070007000700070007000F00FE00FE000F000700070007000700070007
0007000700078003F800F80D1A7E9612>I<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0
E0E0E0E0E0031A799612>I<F800FE000F0007000700070007000700070007000700078003F803
F80780070007000700070007000700070007000F00FE00F8000D1A7E9612>I
E /Fu 8 111 df<00E001E007C007000F001E003C0038007800700070007000F000E000E000E0
00E000E000E000E000F000700070007000780038003C001E000F00070007C001E000E00B217A9C
16>40 D<E000F0007C001C001E000F000780038003C001C001C001C001E000E000E000E000E000
E000E000E001E001C001C001C003C0038007800F001E001C007C00F000E0000B217C9C16>I<70
F8F8F8700505788416>46 D<003F00007F00003F0000070000070000070000070003C7000FF700
3FFF003C1F00780F00F00700F00700E00700E00700E00700E00700F00700F00F00781F007C3F00
3FFFE01FF7F007C7E014197F9816>100 D<03E00FF81FFC3C1E780E7007E007FFFFFFFFFFFFE0
00E000700778073C0F1FFE0FFC03F010127D9116>I<001F00007F8000FF8001E78001C30001C0
0001C0007FFF00FFFF00FFFF0001C00001C00001C00001C00001C00001C00001C00001C00001C0
0001C00001C00001C0003FFE007FFF003FFE0011197F9816>I<018003C003C001800000000000
0000007FC07FC07FC001C001C001C001C001C001C001C001C001C001C001C001C07FFFFFFF7FFF
101A7D9916>105 D<7E3C00FEFF007FFF800F87800F03800F03800E03800E03800E03800E0380
0E03800E03800E03800E03800E03807FC7F0FFE7F87FC7F01512809116>110
D E /Fv 10 121 df<FFFFFF80FFFFFF8019027D8A20>0 D<0006000000060000000600000006
0000000600000006000000060000000600000006000000060000000600000006000000060000FF
FFFFE0FFFFFFE00006000000060000000600000006000000060000000600000006000000060000
000600000006000000060000FFFFFFE0FFFFFFE01B1C7E9A20>6 D<FFFFFFE0FFFFFFE0000000
00000000000000000000000000000000000000000000000000FFFFFFE0FFFFFFE0000000000000
00000000000000000000000000000000000000000000FFFFFFE0FFFFFFE01B147E9320>17
D<000001800000078000001E00000078000001E00000078000001E00000078000001E000000780
00001E00000078000000E0000000780000001E0000000780000001E0000000780000001E000000
0780000001E0000000780000001E00000007800000018000000000000000000000000000000000
000000000000000000000000FFFFFF80FFFFFF8019227D9920>20 D<C0000000F00000003C0000
000F00000003C0000000F00000003C0000000F00000003C0000000F00000003C0000000F000000
038000000F0000003C000000F0000003C000000F0000003C000000F0000003C000000F0000003C
000000F0000000C000000000000000000000000000000000000000000000000000000000000000
FFFFFF80FFFFFF8019227D9920>I<07C000201FE000203FF80020783C0060E01F00E0C00783C0
8003FF808000FF0080007C000000000007C000201FE000203FF80020783C0060E01F00E0C00783
C08003FF808000FF0080007C001B137E9320>25 D<018001800380030003000700060006000E00
0C001C0018001800380030003000700060006000E000C000C000E0006000600070003000300038
00180018001C000C000E0006000600070003000300038001800180092A7C9E10>104
D<C000C000E00060006000700030003000380018001C000C000C000E0006000600070003000300
0380018001800380030003000700060006000E000C000C001C0018003800300030007000600060
00E000C000C000092A7E9E10>I<00000000C000000001C0000000018000000003800000000300
000000070000000006000000000E000000000C000000001C000000001800000000380000000030
0000000070000000006000000000E000000000C000000001C00000000180000000038000000003
00000C000700003C000600004E000E00008E000C000007001C0000070018000003803800000380
300000038070000001C060000001C0E0000000E0C0000000E1C000000071800000007380000000
3B000000003F000000001E000000001E000000000C000000000C000000222A7E8123>112
D<1F00308070406060E0E0E0E0E040E00060007000300018001C003300718061C0E0C0E0E0E0E0
E0E060E070C031C0198007000300018001C000C000E040E0E0E0E0E0C0C041C021801F000B257D
9C12>120 D E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300
TeXDict begin 
%%EndSetup
%%Page: 304 1
bop 0 50 a Fh(304)422 b Fg(Chapter)10 b(7.)52 b(Random)9 b(Numbers)p
0 68 1395 2 v 0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial
66 180 a Ft(psdes\(&lwor)o(d,&)o(irw)o(ord)o(\);)283 b Fn(\\Pseudo-DES")11
b(enco)q(de)g(the)h(w)o(o)o(rds.)66 218 y Ft(itemp=jflon)o(e)j(|)i(\(jflmsk)e
(&)i(irword\);)90 b Fn(Mask)15 b(to)g(a)g(\015oating)g(numb)q(er)h(b)q(et)o
(w)o(een)e(1)h(and)801 255 y(2.)-763 b Ft(++\(*idum\);)66 293
y(return)16 b(\(*\(float)f(*\)&itemp\))o(-1.)o(0;)142 b Fn(Subtraction)12
b(moves)f(range)h(to)g(0.)17 b(to)11 b(1.)0 330 y Ft(})83 430
y Ff(The)g(accompanying)e(table)j(gives)f(data)g(for)i(verifying)f(that)g
Fm(ran4)f Ff(and)g Fm(psdes)f Ff(work)i(correctly)0 471 y(on)h(your)f
(machine.)24 b(W)m(e)14 b(do)e(not)h(advise)f(the)h(use)f(of)h
Fm(ran4)f Ff(unless)g(you)g(are)h(able)f(to)i(reproduce)d(the)0
513 y(hex)i(values)g(shown.)27 b(T)m(ypically)n(,)16 b Fm(ran4)c
Ff(is)j(about)e(4)h(times)g(slower)g(than)g Fm(ran0)f Ff(\()p
Fi(x)p Ff(7.1\),)j(or)f(about)e(3)0 554 y(times)k(slower)g(than)g
Fm(ran1)o Ff(.)p 51 610 1292 3 v 51 674 3 64 v 367 656 a Fe(V)l(alues)8
b(for)g(V)l(erifying)f(the)h(Implementation)f(of)h Ft(psdes)p
1341 674 V 51 675 1292 2 v 51 739 3 64 v 62 721 a(idum)p 141
739 2 64 v 62 w Fe(before)f Ft(psdes)g Fe(call)p 487 739 V
134 w(after)h Ft(psdes)f Fe(call)h(\(hex\))p 940 739 V 192
w Ft(ran4\(idum)o(\))p 1341 739 3 64 v 51 740 1292 2 v 51 804
3 64 v 141 804 2 64 v 184 786 a(lword)p 305 804 V 74 w(irword)p
487 804 V 104 w(lword)p 720 804 V 128 w(irword)p 940 804 V
121 w Fe(V)l(AX)p 1140 804 V 146 w(PC)p 1341 804 3 64 v 51
806 1292 3 v 51 870 3 64 v 81 853 a(\2611)101 b(1)156 b(1)124
b(604D1DCE)75 b(509C0C23)f(0.275898)f(0.219120)p 1341 870 V
51 934 V 85 917 a(99)97 b(1)147 b(99)119 b(D97F8571)74 b(A66CB41A)67
b(0.208204)74 b(0.849246)p 1341 934 V 51 998 V 77 981 a(\26199)79
b(99)148 b(1)128 b(7822309D)87 b(64300984)78 b(0.034307)c(0.375290)p
1341 998 V 51 1062 V 85 1045 a(99)88 b(99)139 b(99)118 b(D7F376F0)76
b(59BA89EB)69 b(0.838676)74 b(0.457334)p 1341 1062 V 51 1064
1292 2 v 51 1209 3 146 v 97 1110 a(Successive)7 b(calls)h(to)g
Ft(psdes)f Fe(with)h(ar)o(guments)f Fj(\000)p Fe(1,)i(99,)e
Fj(\000)p Fe(99,)h(and)g(1,)g(should)f(produce)f(exactly)h(the)97
1147 y Ft(lword)f Fe(and)g Ft(irword)f Fe(values)h(shown.)k(Masking)c
(conversion)f(to)i(a)f(returned)g(\257oating)h(random)e(value)97
1184 y(is)10 b(allowed)f(to)h(be)f(machine)g(dependent;)f(values)h(for)h(V)l
(AX)f(and)g(PC)h(are)g(shown.)p 1341 1209 V 51 1212 1292 3
v 0 1382 a Fd(CITED)j(REFERENCES)g(AND)f(FUR)o(THER)i(READING:)0
1432 y Fc(Data)e(Encryption)g(Standard)p Fd(,)i(1977)e(January)g(15,)g
(Federal)h(Information)h(Processing)e(Standards)h(Publi-)80
1474 y(cation,)e(number)f(46)g(\(W)o(ashington:)j(U.S.)d(Department)h(of)f
(Commerce,)g(National)h(Bureau)h(of)d(Stan-)80 1515 y(dards\).)16
b([1])0 1565 y Fc(Guidelines)10 b(for)e(Implementing)j(and)d(Using)g(the)h
(NBS)e(Data)h(Encryption)h(Standard)p Fd(,)i(1981)e(April)f(1,)g(Federal)80
1606 y(Information)13 b(Processing)e(Standards)h(Publication)q(,)h(number)e
(74)g(\(W)o(ashington)q(:)i(U.S.)d(Department)80 1648 y(of)i(Commerce,)h
(National)i(Bureau)f(of)e(Standards\).)j([2])0 1698 y Fc(V)o(alidating)d(the)
e(Correctness)g(of)g(Hardware)g(Implementatio)q(ns)i(of)d(the)h(NBS)f(Data)h
(Encryption)h(Standard)p Fd(,)80 1739 y(1980,)g(NBS)f(Special)i(Publication)h
(500\26120)f(\(W)o(ashington)q(:)g(U.S.)f(Department)h(of)e(Commerce,)g(Na-)
80 1781 y(tional)15 b(Bureau)h(of)e(Standards\).)h([3])0 1831
y(Meyer)n(,)8 b(C.H.)f(and)h(Matyas,)f(S.M.)h(1982,)h Fc(Cryptography:)g(A)e
(New)h(Dimension)g(in)g(Computer)h(Data)f(Security)80 1872
y Fd(\(New)14 b(Y)m(ork:)g(Wiley\).)i([4])0 1922 y(Knuth,)10
b(D.E.)f(1973,)i Fc(Sorting)f(and)g(Searching)p Fd(,)h(vol.)e(3)g(of)g
Fc(The)h(Art)f(of)g(Computer)h(Programming)h Fd(\(Reading,)80
1963 y(MA:)i(Addison-W)o(esley\),)j(Chapter)f(6.)f([5])0 2013
y(V)o(itter)n(,)k(J.S.,)e(and)h(Chen,)g(W)o(-C.)f(1987,)i Fc(Design)f(and)f
(Analysis)h(of)f(Coalesced)h(Hashing)g Fd(\(New)f(Y)m(ork:)80
2055 y(Oxford)e(University)g(Press\).)g([6])0 2273 y Fb(7.6)j(Simple)j(Monte)
f(Carlo)h(Integration)83 2398 y Fh(Inspirations)7 b(for)i(numerical)g
(methods)g(can)h(spring)e(from)h(unlikely)e(sources.)16 b(\252Splines\272)0
2448 y(\256rst)f(were)h(\257exible)f(strips)g(of)g(wood)g(used)g(by)g
(draftsmen.)31 b(\252Simulated)15 b(annealing\272)h(\(we)0
2497 y(shall)11 b(see)h(in)f Fv(x)p Fh(10.9\))g(is)g(rooted)g(in)f(a)i
(thermodynamic)f(analogy)m(.)18 b(And)11 b(who)g(does)h(not)e(feel)i(at)0
2547 y(least)h(a)h(faint)e(echo)h(of)g(glamor)f(in)h(the)f(name)i(\252Monte)f
(Carlo)f(method\272?)p eop
%%Page: 305 2
bop 351 50 a Fg(7.6)10 b(Simple)h(Monte)f(Carlo)h(Integration)387
b Fh(305)p 0 68 1395 2 v 0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore

@endspecial 83 189 a(Suppose)10 b(that)f(we)i(pick)f Fs(N)15
b Fh(random)10 b(points,)f(uniformly)f(distributed)g(in)i(a)g(multidimen-)0
239 y(sional)j(volume)g Fs(V)c Fh(.)24 b(Call)13 b(them)g Fs(x)521
245 y Fr(1)540 239 y Fs(;)7 b(:)g(:)g(:)e(;)i(x)657 245 y Fp(N)687
239 y Fh(.)25 b(Then)13 b(the)h(basic)f(theorem)h(of)f(Monte)g(Carlo)0
288 y(integration)8 b(estimates)j(the)f(integral)g(of)f(a)i(function)e
Fs(f)15 b Fh(over)10 b(the)h(multidimensional)d(volume,)376
365 y Fo(Z)425 422 y Fs(f)16 b(dV)21 b Fv(\031)12 b Fs(V)k
Fv(h)p Fs(f)t Fv(i)22 b(\006)9 b Fs(V)765 337 y Fo(s)p 806
337 213 2 v 811 393 a Fv(h)p Fs(f)851 381 y Fr(2)871 393 y
Fv(i)g(\000)h(h)p Fs(f)t Fv(i)995 373 y Fr(2)p 811 412 203
2 v 893 450 a Fs(N)1279 422 y Fq(\()p Fh(7.6.1)q Fq(\))0 525
y Fh(Here)g(the)f(angle)g(brackets)h(denote)e(taking)g(the)h(arithmetic)g
(mean)h(over)f(the)g Fs(N)14 b Fh(sample)c(points,)302 647
y Fv(h)p Fs(f)t Fv(i)i(\021)428 619 y Fq(1)p 419 637 38 2 v
419 676 a Fs(N)484 595 y Fp(N)469 608 y Fo(X)472 696 y Fp(i)p
Fr(=1)536 647 y Fs(f)t Fq(\()p Fs(x)600 653 y Fp(i)614 647
y Fq(\))720 613 y Fo(\012)740 647 y Fs(f)764 630 y Fr(2)783
613 y Fo(\013)814 647 y Fv(\021)872 619 y Fq(1)p 863 637 V
863 676 a Fs(N)928 595 y Fp(N)913 608 y Fo(X)916 696 y Fp(i)p
Fr(=1)980 647 y Fs(f)1004 630 y Fr(2)1023 647 y Fq(\()p Fs(x)1063
653 y Fp(i)1077 647 y Fq(\))186 b(\()p Fh(7.6.2)q Fq(\))0 765
y Fh(The)15 b(\252plus-or)o(-minus\272)e(term)i(in)f(\(7.6.1\))g(is)g(a)h
(one)f(standard)g(deviation)f(error)i(estimate)f(for)0 815
y(the)19 b(integral,)h(not)d(a)j(rigorous)d(bound;)k(further)n(,)g(there)e
(is)f(no)g(guarantee)i(that)e(the)g(error)0 865 y(is)f(distributed)f(as)i(a)g
(Gaussian,)i(so)d(the)h(error)f(term)h(should)e(be)i(taken)f(only)g(as)h(a)g
(rough)0 914 y(indication)f(of)h(probable)f(error)n(.)83 964
y(Suppose)e(that)f(you)g(want)h(to)f(integrate)g(a)h(function)f
Fs(g)i Fh(over)f(a)g(region)f Fs(W)21 b Fh(that)14 b(is)h(not)0
1014 y(easy)f(to)f(sample)i(randomly)m(.)24 b(For)13 b(example,)j
Fs(W)j Fh(might)13 b(have)h(a)g(very)f(complicated)h(shape.)0
1064 y(No)f(problem.)23 b(Just)12 b(\256nd)h(a)g(region)g Fs(V)22
b Fh(that)12 b Fa(includes)h Fs(W)19 b Fh(and)13 b(that)f Fa(can)h
Fh(easily)g(be)g(sampled)0 1114 y(\(Figure)e(7.6.1\),)h(and)g(then)f
(de\256ne)h Fs(f)17 b Fh(to)11 b(be)h(equal)g(to)f Fs(g)i Fh(for)e(points)f
(in)h Fs(W)18 b Fh(and)12 b(equal)f(to)g(zero)0 1163 y(for)i(points)e
(outside)h(of)h Fs(W)19 b Fh(\(but)13 b(still)e(inside)h(the)h(sampled)h
Fs(V)9 b Fh(\).)24 b(Y)l(ou)13 b(want)g(to)f(try)g(to)h(make)0
1213 y Fs(V)22 b Fh(enclose)13 b Fs(W)18 b Fh(as)c(closely)e(as)h(possible,)f
(because)i(the)e(zero)h(values)g(of)f Fs(f)17 b Fh(will)12
b(increase)h(the)0 1263 y(error)g(estimate)h(term)f(of)g(\(7.6.1\).)24
b(And)13 b(well)f(they)h(should:)19 b(points)12 b(chosen)i(outside)e(of)h
Fs(W)0 1313 y Fh(have)h(no)f(information)e(content,)j(so)f(the)g(ef)o
(fective)h(value)f(of)g Fs(N)5 b Fh(,)15 b(the)e(number)g(of)g(points,)g(is)0
1363 y(reduced.)25 b(The)14 b(error)f(estimate)h(in)f(\(7.6.1\))g(takes)h
(this)e(into)g(account.)83 1413 y(General)17 b(purpose)f(routines)f(for)i
(Monte)f(Carlo)f(integration)g(are)i(quite)f(complicated)0
1462 y(\(see)11 b Fv(x)p Fh(7.8\),)f(but)f(a)h(worked)g(example)g(will)e
(show)i(the)f(underlying)f(simplicity)g(of)h(the)h(method.)0
1512 y(Suppose)g(that)g(we)h(want)f(to)g(\256nd)g(the)h(weight)e(and)i(the)f
(position)e(of)i(the)h(center)g(of)f(mass)h(of)g(an)0 1562
y(object)i(of)g(complicated)h(shape,)h(namely)f(the)g(intersection)e(of)h(a)h
(torus)f(with)g(the)g(edge)h(of)f(a)0 1612 y(lar)o(ge)c(box.)15
b(In)8 b(particular)g(let)h(the)g(object)f(be)i(de\256ned)f(by)g(the)f(three)
i(simultaneous)e(conditions)457 1714 y Fs(z)478 1697 y Fr(2)506
1714 y Fq(+)547 1668 y Fo(\020)572 1675 y(p)p 614 1675 134
2 v 39 x Fs(x)638 1702 y Fr(2)665 1714 y Fq(+)i Fs(y)728 1702
y Fr(2)756 1714 y Fv(\000)g Fq(3)819 1668 y Fo(\021)843 1676
y Fr(2)873 1714 y Fv(\024)i Fq(1)341 b(\()p Fh(7.6.3)q Fq(\))0
1805 y Fh(\(torus)11 b(centered)i(on)e(the)h(origin)f(with)g(major)h(radius)f
Fq(=)j(4)p Fh(,)f(minor)e(radius)h Fq(=)h(2)p Fh(\))541 1888
y Fs(x)e Fv(\025)h Fq(1)83 b Fs(y)13 b Fv(\025)f(\000)p Fq(3)425
b(\()p Fh(7.6.4)q Fq(\))0 1970 y Fh(\(two)14 b(faces)h(of)f(the)h(box,)g(see)
g(Figure)f(7.6.2\).)28 b(Suppose)14 b(for)g(the)g(moment)g(that)g(the)g
(object)0 2020 y(has)19 b(a)h(constant)e(density)g Fs(\032)p
Fh(.)83 2070 y(W)m(e)10 b(want)f(to)g(estimate)h(the)g(following)d(integrals)
h(over)i(the)f(interior)f(of)h(the)h(complicated)0 2120 y(object:)76
2165 y Fo(Z)124 2222 y Fs(\032)i(dx)7 b(dy)h(dz)392 2165 y
Fo(Z)441 2222 y Fs(x\032)j(dx)c(dy)h(dz)733 2165 y Fo(Z)781
2222 y Fs(y)q(\032)13 b(dx)7 b(dy)h(dz)1071 2165 y Fo(Z)1120
2222 y Fs(z)r(\032)k(dx)7 b(dy)g(dz)1279 2293 y Fq(\()p Fh(7.6.5)q
Fq(\))0 2343 y Fh(The)14 b(coordinates)g(of)f(the)h(center)g(of)f(mass)i
(will)d(be)i(the)g(ratio)f(of)g(the)h(latter)f(three)h(integrals)0
2393 y(\(linear)h(moments\))h(to)f(the)g(\256rst)h(one)f(\(the)h(weight\).)83
2442 y(In)10 b(the)h(following)d(fragment,)j(the)f(region)g
Fs(V)f Fh(,)i(enclosing)f(the)g(piece-of-torus)g Fs(W)c Fh(,)11
b(is)f(the)0 2492 y(rectangular)h(box)g(extending)f(from)h(1)g(to)g(4)g(in)f
Fs(x)p Fh(,)i Fv(\000)p Fq(3)f Fh(to)g(4)g(in)g Fs(y)q Fh(,)i(and)e
Fv(\000)p Fq(1)g Fh(to)g(1)g(in)g Fs(z)r Fh(.)p eop
%%Page: 306 3
bop 0 50 a Fh(306)417 b Fg(Chapter)10 b(7.)55 b(Random)10 b(Numbers)p
0 68 1395 2 v 0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial
279 793 a @beginspecial 197 @llx 353 @lly 398 @urx 508 @ury
2010 @rwi @setspecial
%%BeginDocument: epsf/fig7x6x1.ps
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
/TX {pop} def
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def	% - cf flatness
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
[/_Symbol/Symbol 0 0 0 TZ
[/_Times-Italic/Times-Italic 0 0 1 TZ
[/_Times-Roman/Times-Roman 0 0 1 TZ
0 A
0 O
0.7 g
0 i 0 J 0 j 1 w 4 M []0 d
0 D
202.5499 358.0762 m
223.0933 370.7759 230.1939 399.5366 239.9054 422.6946 c
249.6168 445.8526 267.9191 474.2399 284.3538 451.0819 c
300.7885 427.9238 308.2546 437.4286 314.9822 442.1175 c
321.1452 446.4129 334.2182 457.0581 347.1046 430.3516 c
359.2671 405.1457 361.6717 402.5247 367.648 430.1649 C
369.5156 439.5028 370.8229 459.1124 373.064 466.2092 c
375.305 473.3061 374.7448 475.3605 381.8416 480.2161 c
388.9384 485.0718 390.4325 488.6202 392.3001 491.0481 C
392.3001 358.0762 L
202.9234 358.0762 L
202.5499 358.0762 L
f
u
0 R
0 G
0.5 w
392.3001 358.0762 m
392.3001 491.0481 L
202.5537 491.0481 L
202.5537 358.0762 L
392.3001 358.0762 L
s
297.4268 424.5622 m
S
U
2 w
202.5499 358.0762 m
223.0933 370.7759 230.1939 399.5366 239.9054 422.6946 c
249.6168 445.8526 267.9191 474.2399 284.3538 451.0819 c
300.7885 427.9238 308.2546 437.4286 314.9822 442.1175 c
321.1452 446.4129 334.5918 457.0581 347.1046 430.3516 c
358.9786 405.0085 361.6717 402.5247 367.648 430.1649 C
369.5156 439.5028 370.8229 459.1124 373.064 466.2092 c
375.305 473.3061 374.7448 475.3605 381.8416 480.2161 c
388.9384 485.0718 390.2457 488.6202 392.1133 491.0481 c
S
u
0 O
0 g
1 w
218.3254 460.3358 m
219.0474 460.3358 219.6327 460.9211 219.6327 461.6431 c
219.6327 462.3651 219.0474 462.9504 218.3254 462.9504 c
217.6033 462.9504 217.0181 462.3651 217.0181 461.6431 c
217.0181 460.9211 217.6033 460.3358 218.3254 460.3358 c
f
218.3254 461.6431 m
F
U
u
239.8026 451.8382 m
240.5245 451.8382 241.1099 452.4236 241.1099 453.1455 c
241.1099 453.8675 240.5245 454.4529 239.8026 454.4529 c
239.0806 454.4529 238.4953 453.8675 238.4953 453.1455 c
238.4953 452.4236 239.0806 451.8382 239.8026 451.8382 c
f
239.8026 453.1455 m
F
U
u
235.0402 478.4513 m
235.7622 478.4513 236.3475 479.0366 236.3475 479.7586 c
236.3475 480.4806 235.7622 481.0659 235.0402 481.0659 c
234.3183 481.0659 233.7329 480.4806 233.7329 479.7586 c
233.7329 479.0366 234.3183 478.4513 235.0402 478.4513 c
f
235.0402 479.7586 m
F
U
u
260.8129 472.7551 m
261.5348 472.7551 262.1202 473.3405 262.1202 474.0624 c
262.1202 474.7845 261.5348 475.3697 260.8129 475.3697 c
260.0909 475.3697 259.5055 474.7845 259.5055 474.0624 c
259.5055 473.3405 260.0909 472.7551 260.8129 472.7551 c
f
260.8129 474.0624 m
F
U
u
278.0881 466.2186 m
278.81 466.2186 279.3954 466.8039 279.3954 467.5259 c
279.3954 468.248 278.81 468.8332 278.0881 468.8332 c
277.366 468.8332 276.7808 468.248 276.7808 467.5259 c
276.7808 466.8039 277.366 466.2186 278.0881 466.2186 c
f
278.0881 467.5259 m
F
U
u
231.9587 428.12 m
232.6807 428.12 233.266 428.7053 233.266 429.4273 c
233.266 430.1492 232.6807 430.7346 231.9587 430.7346 c
231.2367 430.7346 230.6514 430.1492 230.6514 429.4273 c
230.6514 428.7053 231.2367 428.12 231.9587 428.12 c
f
231.9587 429.4273 m
F
U
u
213.6564 436.7109 m
214.3784 436.7109 214.9638 437.2961 214.9638 438.0182 c
214.9638 438.7402 214.3784 439.3254 213.6564 439.3254 c
212.9345 439.3254 212.3491 438.7402 212.3491 438.0182 c
212.3491 437.2961 212.9345 436.7109 213.6564 436.7109 c
f
213.6564 438.0182 m
F
U
u
252.9691 422.6106 m
253.6911 422.6106 254.2764 423.1959 254.2764 423.9179 c
254.2764 424.6399 253.6911 425.2252 252.9691 425.2252 c
252.247 425.2252 251.6618 424.6399 251.6618 423.9179 c
251.6618 423.1959 252.247 422.6106 252.9691 422.6106 c
f
252.9691 423.9179 m
F
U
u
267.723 445.8619 m
268.4449 445.8619 269.0303 446.4473 269.0303 447.1693 c
269.0303 447.8913 268.4449 448.4766 267.723 448.4766 c
267.001 448.4766 266.4156 447.8913 266.4156 447.1693 c
266.4156 446.4473 267.001 445.8619 267.723 445.8619 c
f
267.723 447.1693 m
F
U
u
281.2629 426.5325 m
281.9849 426.5325 282.5702 427.1179 282.5702 427.8398 c
282.5702 428.5618 281.9849 429.1471 281.2629 429.1471 c
280.5409 429.1471 279.9557 428.5618 279.9557 427.8398 c
279.9557 427.1179 280.5409 426.5325 281.2629 426.5325 c
f
281.2629 427.8398 m
F
U
u
208.8007 478.4513 m
209.5227 478.4513 210.108 479.0366 210.108 479.7586 c
210.108 480.4806 209.5227 481.0659 208.8007 481.0659 c
208.0787 481.0659 207.4934 480.4806 207.4934 479.7586 c
207.4934 479.0366 208.0787 478.4513 208.8007 478.4513 c
f
208.8007 479.7586 m
F
U
u
221.7805 409.9111 m
222.5024 409.9111 223.0878 410.4964 223.0878 411.2183 c
223.0878 411.9403 222.5024 412.5256 221.7805 412.5256 c
221.0584 412.5256 220.4731 411.9403 220.4731 411.2183 c
220.4731 410.4964 221.0584 409.9111 221.7805 409.9111 c
f
221.7805 411.2183 m
F
U
u
206.0927 396.7446 m
206.8147 396.7446 207.4 397.3299 207.4 398.0519 c
207.4 398.7738 206.8147 399.3592 206.0927 399.3592 c
205.3707 399.3592 204.7854 398.7738 204.7854 398.0519 c
204.7854 397.3299 205.3707 396.7446 206.0927 396.7446 c
f
206.0927 398.0519 m
F
U
u
217.6718 381.804 m
218.3937 381.804 218.9791 382.3893 218.9791 383.1113 c
218.9791 383.8332 218.3937 384.4186 217.6718 384.4186 c
216.9498 384.4186 216.3645 383.8332 216.3645 383.1113 c
216.3645 382.3893 216.9498 381.804 217.6718 381.804 c
f
217.6718 383.1113 m
F
U
u
245.312 380.59 m
246.0339 380.59 246.6193 381.1753 246.6193 381.8973 c
246.6193 382.6193 246.0339 383.2046 245.312 383.2046 c
244.59 383.2046 244.0047 382.6193 244.0047 381.8973 c
244.0047 381.1753 244.59 380.59 245.312 380.59 c
f
245.312 381.8973 m
F
U
u
239.9893 402.4407 m
240.7113 402.4407 241.2967 403.026 241.2967 403.748 c
241.2967 404.47 240.7113 405.0553 239.9893 405.0553 c
239.2674 405.0553 238.682 404.47 238.682 403.748 c
238.682 403.026 239.2674 402.4407 239.9893 402.4407 c
f
239.9893 403.748 m
F
U
u
261.9334 398.1452 m
262.6554 398.1452 263.2407 398.7306 263.2407 399.4526 c
263.2407 400.1745 262.6554 400.7599 261.9334 400.7599 c
261.2115 400.7599 260.6261 400.1745 260.6261 399.4526 c
260.6261 398.7306 261.2115 398.1452 261.9334 398.1452 c
f
261.9334 399.4526 m
F
U
u
206.4662 367.3301 m
207.1882 367.3301 207.7735 367.9155 207.7735 368.6374 c
207.7735 369.3595 207.1882 369.9448 206.4662 369.9448 c
205.7443 369.9448 205.1589 369.3595 205.1589 368.6374 c
205.1589 367.9155 205.7443 367.3301 206.4662 367.3301 c
f
206.4662 368.6374 m
F
U
u
233.7329 366.3963 m
234.4549 366.3963 235.0402 366.9817 235.0402 367.7036 c
235.0402 368.4257 234.4549 369.011 233.7329 369.011 c
233.011 369.011 232.4256 368.4257 232.4256 367.7036 c
232.4256 366.9817 233.011 366.3963 233.7329 366.3963 c
f
233.7329 367.7036 m
F
U
u
252.5956 364.342 m
253.3175 364.342 253.9029 364.9273 253.9029 365.6493 c
253.9029 366.3714 253.3175 366.9566 252.5956 366.9566 c
251.8735 366.9566 251.2883 366.3714 251.2883 365.6493 c
251.2883 364.9273 251.8735 364.342 252.5956 364.342 c
f
252.5956 365.6493 m
F
U
u
280.9828 394.7836 m
281.7048 394.7836 282.2901 395.3689 282.2901 396.0909 c
282.2901 396.813 281.7048 397.3982 280.9828 397.3982 c
280.2608 397.3982 279.6755 396.813 279.6755 396.0909 c
279.6755 395.3689 280.2608 394.7836 280.9828 394.7836 c
f
280.9828 396.0909 m
F
U
u
278.1815 377.9754 m
278.9034 377.9754 279.4888 378.5607 279.4888 379.2827 c
279.4888 380.0047 278.9034 380.59 278.1815 380.59 c
277.4594 380.59 276.8741 380.0047 276.8741 379.2827 c
276.8741 378.5607 277.4594 377.9754 278.1815 377.9754 c
f
278.1815 379.2827 m
F
U
u
282.8504 360.0465 m
283.5723 360.0465 284.1576 360.6319 284.1576 361.3538 c
284.1576 362.0759 283.5723 362.6611 282.8504 362.6611 c
282.1283 362.6611 281.5431 362.0759 281.5431 361.3538 c
281.5431 360.6319 282.1283 360.0465 282.8504 360.0465 c
f
282.8504 361.3538 m
F
U
u
299.2851 372.3726 m
300.0071 372.3726 300.5924 372.958 300.5924 373.6799 c
300.5924 374.4019 300.0071 374.9872 299.2851 374.9872 c
298.5631 374.9872 297.9778 374.4019 297.9778 373.6799 c
297.9778 372.958 298.5631 372.3726 299.2851 372.3726 c
f
299.2851 373.6799 m
F
U
u
294.6161 386.5662 m
295.3381 386.5662 295.9234 387.1515 295.9234 387.8735 c
295.9234 388.5956 295.3381 389.1808 294.6161 389.1808 c
293.8942 389.1808 293.3088 388.5956 293.3088 387.8735 c
293.3088 387.1515 293.8942 386.5662 294.6161 386.5662 c
f
294.6161 387.8735 m
F
U
u
301.713 404.6818 m
302.4349 404.6818 303.0203 405.2672 303.0203 405.9891 c
303.0203 406.7111 302.4349 407.2964 301.713 407.2964 c
300.9909 407.2964 300.4057 406.7111 300.4057 405.9891 c
300.4057 405.2672 300.9909 404.6818 301.713 404.6818 c
f
301.713 405.9891 m
F
U
u
312.1714 429.1471 m
312.8933 429.1471 313.4787 429.7325 313.4787 430.4544 c
313.4787 431.1764 312.8933 431.7618 312.1714 431.7618 c
311.4494 431.7618 310.864 431.1764 310.864 430.4544 c
310.864 429.7325 311.4494 429.1471 312.1714 429.1471 c
f
312.1714 430.4544 m
F
U
u
312.3581 445.5818 m
313.0801 445.5818 313.6654 446.1672 313.6654 446.8891 c
313.6654 447.6112 313.0801 448.1964 312.3581 448.1964 c
311.6361 448.1964 311.0508 447.6112 311.0508 446.8891 c
311.0508 446.1672 311.6361 445.5818 312.3581 445.5818 c
f
312.3581 446.8891 m
F
U
u
332.1546 422.4238 m
332.8765 422.4238 333.4619 423.0092 333.4619 423.7311 c
333.4619 424.4532 332.8765 425.0384 332.1546 425.0384 c
331.4325 425.0384 330.8473 424.4532 330.8473 423.7311 c
330.8473 423.0092 331.4325 422.4238 332.1546 422.4238 c
f
332.1546 423.7311 m
F
U
u
327.8591 404.4951 m
328.5811 404.4951 329.1664 405.0804 329.1664 405.8024 c
329.1664 406.5243 328.5811 407.1097 327.8591 407.1097 c
327.137 407.1097 326.5518 406.5243 326.5518 405.8024 c
326.5518 405.0804 327.137 404.4951 327.8591 404.4951 c
f
327.8591 405.8024 m
F
U
u
319.455 382.4576 m
320.1769 382.4576 320.7623 383.0429 320.7623 383.7649 c
320.7623 384.4869 320.1769 385.0721 319.455 385.0721 c
318.733 385.0721 318.1477 384.4869 318.1477 383.7649 c
318.1477 383.0429 318.733 382.4576 319.455 382.4576 c
f
319.455 383.7649 m
F
U
u
330.6605 376.6681 m
331.3825 376.6681 331.9678 377.2534 331.9678 377.9754 c
331.9678 378.6974 331.3825 379.2827 330.6605 379.2827 c
329.9384 379.2827 329.3532 378.6974 329.3532 377.9754 c
329.3532 377.2534 329.9384 376.6681 330.6605 376.6681 c
f
330.6605 377.9754 m
F
U
u
315.7198 363.5949 m
316.4418 363.5949 317.0271 364.1803 317.0271 364.9023 c
317.0271 365.6243 316.4418 366.2096 315.7198 366.2096 c
314.9978 366.2096 314.4125 365.6243 314.4125 364.9023 c
314.4125 364.1803 314.9978 363.5949 315.7198 363.5949 c
f
315.7198 364.9023 m
F
U
u
348.9628 367.3301 m
349.6847 367.3301 350.2701 367.9155 350.2701 368.6374 c
350.2701 369.3595 349.6847 369.9448 348.9628 369.9448 c
348.2408 369.9448 347.6555 369.3595 347.6555 368.6374 c
347.6555 367.9155 348.2408 367.3301 348.9628 367.3301 c
f
348.9628 368.6374 m
F
U
u
352.5112 386.9397 m
353.2332 386.9397 353.8185 387.5251 353.8185 388.247 c
353.8185 388.9691 353.2332 389.5543 352.5112 389.5543 c
351.7891 389.5543 351.2039 388.9691 351.2039 388.247 c
351.2039 387.5251 351.7891 386.9397 352.5112 386.9397 c
f
352.5112 388.247 m
F
U
u
353.8185 427.6531 m
354.5405 427.6531 355.1258 428.2384 355.1258 428.9604 c
355.1258 429.6823 354.5405 430.2677 353.8185 430.2677 c
353.0964 430.2677 352.5112 429.6823 352.5112 428.9604 c
352.5112 428.2384 353.0964 427.6531 353.8185 427.6531 c
f
353.8185 428.9604 m
F
U
u
337.7572 449.317 m
338.4792 449.317 339.0646 449.9023 339.0646 450.6243 c
339.0646 451.3464 338.4792 451.9316 337.7572 451.9316 c
337.0353 451.9316 336.4499 451.3464 336.4499 450.6243 c
336.4499 449.9023 337.0353 449.317 337.7572 449.317 c
f
337.7572 450.6243 m
F
U
u
357.9272 445.9553 m
358.6492 445.9553 359.2345 446.5407 359.2345 447.2626 c
359.2345 447.9847 358.6492 448.57 357.9272 448.57 c
357.2051 448.57 356.6199 447.9847 356.6199 447.2626 c
356.6199 446.5407 357.2051 445.9553 357.9272 445.9553 c
f
357.9272 447.2626 m
F
U
u
377.1633 459.5887 m
377.8852 459.5887 378.4706 460.1741 378.4706 460.8961 c
378.4706 461.618 377.8852 462.2033 377.1633 462.2033 c
376.4413 462.2033 375.856 461.618 375.856 460.8961 c
375.856 460.1741 376.4413 459.5887 377.1633 459.5887 c
f
377.1633 460.8961 m
F
U
u
382.2058 436.6175 m
382.9277 436.6175 383.5131 437.2028 383.5131 437.9247 c
383.5131 438.6468 382.9277 439.232 382.2058 439.232 c
381.4837 439.232 380.8984 438.6468 380.8984 437.9247 c
380.8984 437.2028 381.4837 436.6175 382.2058 436.6175 c
f
382.2058 437.9247 m
F
U
u
373.6148 418.1284 m
374.3368 418.1284 374.9222 418.7137 374.9222 419.4357 c
374.9222 420.1577 374.3368 420.743 373.6148 420.743 c
372.8929 420.743 372.3075 420.1577 372.3075 419.4357 c
372.3075 418.7137 372.8929 418.1284 373.6148 418.1284 c
f
373.6148 419.4357 m
F
U
u
386.5012 412.8991 m
387.2232 412.8991 387.8085 413.4844 387.8085 414.2064 c
387.8085 414.9285 387.2232 415.5137 386.5012 415.5137 c
385.7791 415.5137 385.1939 414.9285 385.1939 414.2064 c
385.1939 413.4844 385.7791 412.8991 386.5012 412.8991 c
f
386.5012 414.2064 m
F
U
u
379.5911 393.4763 m
380.3131 393.4763 380.8984 394.0616 380.8984 394.7836 c
380.8984 395.5057 380.3131 396.0909 379.5911 396.0909 c
378.869 396.0909 378.2838 395.5057 378.2838 394.7836 c
378.2838 394.0616 378.869 393.4763 379.5911 393.4763 c
f
379.5911 394.7836 m
F
U
u
374.9222 369.5712 m
375.6441 369.5712 376.2295 370.1566 376.2295 370.8786 c
376.2295 371.6006 375.6441 372.1858 374.9222 372.1858 c
374.2002 372.1858 373.6148 371.6006 373.6148 370.8786 c
373.6148 370.1566 374.2002 369.5712 374.9222 369.5712 c
f
374.9222 370.8786 m
F
U
u
351.3906 461.0828 m
352.1126 461.0828 352.6979 461.6682 352.6979 462.3901 c
352.6979 463.1121 352.1126 463.6973 351.3906 463.6973 c
350.6687 463.6973 350.0833 463.1121 350.0833 462.3901 c
350.0833 461.6682 350.6687 461.0828 351.3906 461.0828 c
f
351.3906 462.3901 m
F
U
u
362.9696 475.4631 m
363.6916 475.4631 364.2769 476.0485 364.2769 476.7704 c
364.2769 477.4925 363.6916 478.0778 362.9696 478.0778 c
362.2476 478.0778 361.6624 477.4925 361.6624 476.7704 c
361.6624 476.0485 362.2476 475.4631 362.9696 475.4631 c
f
362.9696 476.7704 m
F
U
u
344.2938 486.1084 m
345.0158 486.1084 345.6011 486.6937 345.6011 487.4157 c
345.6011 488.1377 345.0158 488.723 344.2938 488.723 c
343.5718 488.723 342.9865 488.1377 342.9865 487.4157 c
342.9865 486.6937 343.5718 486.1084 344.2938 486.1084 c
f
344.2938 487.4157 m
F
U
u
329.9135 467.4325 m
330.6354 467.4325 331.2208 468.0178 331.2208 468.7398 c
331.2208 469.4619 330.6354 470.0471 329.9135 470.0471 c
329.1914 470.0471 328.6062 469.4619 328.6062 468.7398 c
328.6062 468.0178 329.1914 467.4325 329.9135 467.4325 c
f
329.9135 468.7398 m
F
U
u
303.5806 460.7093 m
304.3025 460.7093 304.8879 461.2946 304.8879 462.0166 c
304.8879 462.7386 304.3025 463.3239 303.5806 463.3239 c
302.8585 463.3239 302.2733 462.7386 302.2733 462.0166 c
302.2733 461.2946 302.8585 460.7093 303.5806 460.7093 c
f
303.5806 462.0166 m
F
U
u
311.4243 473.7823 m
312.1463 473.7823 312.7316 474.3676 312.7316 475.0896 c
312.7316 475.8117 312.1463 476.3969 311.4243 476.3969 c
310.7024 476.3969 310.117 475.8117 310.117 475.0896 c
310.117 474.3676 310.7024 473.7823 311.4243 473.7823 c
f
311.4243 475.0896 m
F
U
u
295.5499 485.5481 m
296.2719 485.5481 296.8572 486.1335 296.8572 486.8554 c
296.8572 487.5774 296.2719 488.1627 295.5499 488.1627 c
294.828 488.1627 294.2426 487.5774 294.2426 486.8554 c
294.2426 486.1335 294.828 485.5481 295.5499 485.5481 c
f
295.5499 486.8554 m
F
U
u
387.435 474.7161 m
388.1569 474.7161 388.7422 475.3014 388.7422 476.0234 c
388.7422 476.7455 388.1569 477.3307 387.435 477.3307 c
386.7129 477.3307 386.1277 476.7455 386.1277 476.0234 c
386.1277 475.3014 386.7129 474.7161 387.435 474.7161 c
f
387.435 476.0234 m
F
U
1 g
289.7875 405.0751 m
289.7875 418.4875 L
270.3751 418.4875 L
270.3751 405.0751 L
289.7875 405.0751 L
f
279.1688 411.4938 m
F
0 g
277.8028 483.2131 m
277.8257 483.1672 L
278.7876 483.5079 279.7884 483.805 280.8163 483.8513 c
280.8757 483.6051 L
279.6056 483.1799 278.34 482.7224 277.0995 482.2026 c
276.7321 482.4792 L
276.9071 483.8013 276.997 485.144 277.0708 486.4845 c
277.3146 486.5025 L
277.5059 485.4948 277.5361 484.4646 277.4491 483.4507 c
277.4996 483.4413 L
277.8028 483.2131 L
f
0 R
0 G
0.5 w
277.5679 483.2086 m
291.2057 500.9571 l
S
0 To
1.15 0 0 1.15 293.4 499.0371 0 Tp
TP
0 Tr
0 O
0 g
1 w
/_Times-Roman 7.8261 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
7.8261 0 Tl
0 Tc
0 Tw
(area ) Tx 
/_Times-Italic 7.8261 Tf
(A) Tx 
(\r) TX 
TO
0 To
1.15 0 0 1.15 273.3251 408.4001 0 Tp
TP
0 Tr
/_Symbol 7.8261 Tf
(\362) Tx 0 -40 Tk 
/_Times-Italic 7.8261 Tf
(fdx) Tx 
(\r) TX 
TO
u
1 g
202.1997 356.2222 m
202.1997 364.9191 L
199.9716 364.9191 L
199.9716 356.2222 L
202.1997 356.2222 L
f
201.0856 360.5706 m
F
U
u
210.8161 357.7546 m
202.1193 357.7546 L
202.1193 355.5265 L
210.8161 355.5265 L
210.8161 357.7546 L
f
206.4676 356.6405 m
F
U
u
395.7495 491.3898 m
395.7495 495.1272 L
382.9558 495.1272 L
382.9558 491.3898 L
395.7495 491.3898 L
f
389.3526 493.2585 m
F
U
u
396.4481 496.234 m
392.7106 496.234 L
392.7106 483.4403 L
396.4481 483.4403 L
396.4481 496.234 L
f
394.5794 489.8371 m
F
U
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 0 855 a Fe(Figure)e(7.6.1.)24 b(Monte)7 b(Carlo)h(integration.)k
(Random)7 b(points)g(are)h(chosen)f(within)h(the)g(area)f Fk(A)p
Fe(.)13 b(The)8 b(integral)g(of)g(the)0 893 y(function)h Fk(f)14
b Fe(is)c(estimated)g(as)g(the)g(area)g(of)g Fk(A)h Fe(multiplied)e(by)h(the)
g(fraction)g(of)g(random)e(points)i(that)g(fall)h(below)e(the)0
930 y(curve)f Fk(f)t Fe(.)16 b(Re\256nements)8 b(on)h(this)g(procedure)f(can)
g(improve)g(the)h(accuracy)f(of)h(the)g(method;)g(see)g(text.)10
2312 y @beginspecial -1 @llx -304.500000 @lly 329 @urx 12.500000
@ury 3300 @rwi @setspecial
%%BeginDocument: epsf/fig7x6x2.ps
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
/TX {pop} def
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def	% - cf flatness
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
[/_Times-Italic/Times-Italic 0 0 1 TZ
[/_Times-Roman/Times-Roman 0 0 1 TZ
0 A
u
q
0 i 0 J 0 j 1 w 4 M []0 d
0 D
209.9947 -257.9452 m
163.3444 -257.9452 l
198.9826 -246.1994 l
244.998 -246.1994 L
209.9947 -257.9452 L
h
W
n
0 R
0.6 G
174.9044 -244.7205 m
258.9044 -244.7205 l
S
0.5889 G
174.356 -245.2691 m
258.356 -245.2691 L
S
0.5778 G
173.8076 -245.8175 m
257.8076 -245.8175 L
S
0.5667 G
173.259 -246.3661 m
257.259 -246.3661 L
S
0.5556 G
172.7106 -246.9145 m
256.7106 -246.9145 L
S
0.5445 G
172.162 -247.4629 m
256.162 -247.4629 L
S
0.5334 G
171.6136 -248.0115 m
255.6136 -248.0115 L
S
0.5222 G
171.0652 -248.5599 m
255.0652 -248.5599 L
S
0.5111 G
170.5166 -249.1085 m
254.5166 -249.1085 L
S
0.5 G
169.9682 -249.6569 m
253.9682 -249.6569 L
S
0.4889 G
169.4197 -250.2053 m
253.4197 -250.2053 L
S
0.4778 G
168.8712 -250.7539 m
252.8712 -250.7539 L
S
0.4667 G
168.3227 -251.3023 m
252.3227 -251.3023 L
S
0.4556 G
167.7742 -251.8507 m
251.7742 -251.8507 L
S
0.4445 G
167.2257 -252.3992 m
251.2257 -252.3992 L
S
0.4334 G
166.6773 -252.9477 m
250.6773 -252.9477 L
S
0.4223 G
166.1289 -253.4962 m
250.1289 -253.4962 L
S
0.4112 G
165.5803 -254.0447 m
249.5803 -254.0447 L
S
0.4001 G
165.0319 -254.5932 m
249.0319 -254.5932 L
S
0.3889 G
164.4835 -255.1416 m
248.4835 -255.1416 L
S
0.3778 G
163.9349 -255.6902 m
247.9349 -255.6902 L
S
0.3667 G
163.3865 -256.2386 m
247.3865 -256.2386 L
S
0.3556 G
162.8379 -256.787 m
246.8379 -256.787 L
S
0.3445 G
162.2895 -257.3356 m
246.2895 -257.3356 L
S
0.3334 G
161.7411 -257.884 m
245.7411 -257.884 L
S
0.3223 G
161.1925 -258.4326 m
245.1925 -258.4326 L
S
0.3112 G
160.6441 -258.981 m
244.6441 -258.981 L
S
0.3001 G
160.0955 -259.5294 m
244.0955 -259.5294 L
S
0 G
0.3 w
175.1251 -244.1251 m
254.8751 -244.1251 255.0001 -244.1251 v
S
u
254.1909 -244.9342 m
254.0659 -244.9342 174.3159 -244.9342 Y
S
253.3818 -245.7433 m
253.2568 -245.7433 173.5068 -245.7433 Y
S
252.5726 -246.5525 m
252.4476 -246.5525 172.6976 -246.5525 Y
S
251.7635 -247.3616 m
251.6385 -247.3616 171.8885 -247.3616 Y
S
250.9542 -248.1707 m
250.8292 -248.1707 171.0792 -248.1707 Y
S
250.1452 -248.9799 m
250.0202 -248.9799 170.2702 -248.9799 Y
S
249.3359 -249.789 m
249.2109 -249.789 169.4611 -249.789 Y
S
248.5269 -250.5982 m
248.4019 -250.5982 168.6519 -250.5982 Y
S
247.7178 -251.4073 m
247.5928 -251.4073 168.3426 -251.4073 Y
S
246.9085 -252.2165 m
246.7835 -252.2165 167.5335 -252.2165 Y
S
246.0995 -253.0256 m
245.9745 -253.0256 166.7245 -253.0256 Y
S
245.2902 -253.8348 m
245.1652 -253.8348 165.9152 -253.8348 Y
S
244.4812 -254.6439 m
244.3562 -254.6439 165.1062 -254.6439 Y
S
243.6719 -255.4532 m
243.5469 -255.4532 164.2969 -255.4532 Y
S
242.8628 -256.2622 m
242.7378 -256.2622 163.4878 -256.2622 Y
S
242.0536 -257.0715 m
241.9286 -257.0715 162.6786 -257.0715 Y
S
241.2445 -257.8805 m
241.1195 -257.8805 161.8695 -257.8805 Y
S
240.4353 -258.6898 m
240.3103 -258.6898 161.0603 -258.6898 Y
S
U
160.2501 -259.5001 m
239.5001 -259.5001 239.6251 -259.5001 v
S
Q
U
0 A
u
u
q
0 i 0 J 0 j 1 w 4 M []0 d
0 D
180.6875 -87.0962 m
191.0082 -87.0962 199.3751 -72.3062 199.3751 -54.0625 c
199.3751 -35.8188 191.0082 -21.0288 180.6875 -21.0288 c
170.3668 -21.0288 161.9999 -35.8188 161.9999 -54.0625 c
161.9999 -72.3062 170.3668 -87.0962 180.6875 -87.0962 c
h
W
n
u
u
u
u
0 R
0.5082 G
161.2443 -17.3125 m
161.2443 -89.0625 L
S
0.5172 G
162.035 -17.3125 m
162.035 -89.0625 L
S
0.5262 G
162.8258 -17.3125 m
162.8258 -89.0625 L
S
0.5352 G
163.6165 -17.3125 m
163.6165 -89.0625 L
S
0.5442 G
164.4072 -17.3125 m
164.4072 -89.0625 L
S
0.5532 G
165.1979 -17.3125 m
165.1979 -89.0625 L
S
0.5622 G
165.9886 -17.3125 m
165.9886 -89.0625 L
S
0.5713 G
166.7793 -17.3125 m
166.7793 -89.0625 L
S
0.5803 G
167.57 -17.3125 m
167.57 -89.0625 L
S
0.5893 G
168.3608 -17.3125 m
168.3608 -89.0625 L
S
0.5983 G
169.1515 -17.3125 m
169.1515 -89.0625 L
S
0.6073 G
169.9422 -17.3125 m
169.9422 -89.0625 L
S
0.6163 G
170.7329 -17.3125 m
170.7329 -89.0625 L
S
0.6253 G
171.5236 -17.3125 m
171.5236 -89.0625 L
S
0.6343 G
172.3144 -17.3125 m
172.3144 -89.0625 L
S
0.6434 G
173.1051 -17.3125 m
173.1051 -89.0625 L
S
0.6524 G
173.8958 -17.3125 m
173.8958 -89.0625 L
S
0.6614 G
174.6865 -17.3125 m
174.6865 -89.0625 L
S
0.6704 G
175.4772 -17.3125 m
175.4772 -89.0625 L
S
0.6794 G
176.268 -17.3125 m
176.268 -89.0625 L
S
0.6884 G
177.0587 -17.3125 m
177.0587 -89.0625 L
S
0.6974 G
177.8494 -17.3125 m
177.8494 -89.0625 L
S
0.7064 G
178.6401 -17.3125 m
178.6401 -89.0625 L
S
0.7154 G
179.4308 -17.3125 m
179.4308 -89.0625 L
S
0.7245 G
180.2215 -17.3125 m
180.2215 -89.0625 L
S
0.7335 G
181.0122 -17.3125 m
181.0122 -89.0625 L
S
0.7425 G
181.803 -17.3125 m
181.803 -89.0625 L
S
0.7515 G
182.5937 -17.3125 m
182.5937 -89.0625 L
S
0.7605 G
183.3844 -17.3125 m
183.3844 -89.0625 L
S
0.7695 G
184.1751 -17.3125 m
184.1751 -89.0625 L
S
0.7785 G
184.9659 -17.3125 m
184.9659 -89.0625 L
S
0.7876 G
185.7566 -17.3125 m
185.7566 -89.0625 L
S
0.7966 G
186.5473 -17.3125 m
186.5473 -89.0625 L
S
0.8056 G
187.338 -17.3125 m
187.338 -89.0625 L
S
0.8146 G
188.1287 -17.3125 m
188.1287 -89.0625 L
S
0.8236 G
188.9194 -17.3125 m
188.9194 -89.0625 L
S
0.8326 G
189.7102 -17.3125 m
189.7102 -89.0625 L
S
0.8417 G
190.5009 -17.3125 m
190.5009 -89.0625 L
S
0.8507 G
191.2916 -17.3125 m
191.2916 -89.0625 L
S
0.8597 G
192.0823 -17.3125 m
192.0823 -89.0625 L
S
0.8687 G
192.873 -17.3125 m
192.873 -89.0625 L
S
0.8777 G
193.6637 -17.3125 m
193.6637 -89.0625 L
S
0.8867 G
194.4545 -17.3125 m
194.4545 -89.0625 L
S
0.8957 G
195.2452 -17.3125 m
195.2452 -89.0625 L
S
0.9048 G
196.0359 -17.3125 m
196.0359 -89.0625 L
S
0.9138 G
196.8266 -17.3125 m
196.8266 -89.0625 L
S
0.9228 G
197.6174 -17.3125 m
197.6174 -89.0625 L
S
0.9318 G
198.4081 -17.3125 m
198.4081 -89.0625 L
S
0.9408 G
199.1988 -17.3125 m
199.1988 -89.0625 L
S
U
0.95 G
200.0057 -17.3125 m
200.0057 -89.0625 l
S
U
U
U
u
0 G
0.5 w
159.875 -16.6875 m
159.875 -90.1875 l
S
u
162.059 -16.6875 m
162.059 -90.1875 L
S
164.2431 -16.6875 m
164.2431 -90.1875 L
S
166.4271 -16.6875 m
166.4271 -90.1875 L
S
168.6112 -16.6875 m
168.6112 -90.1875 L
S
170.7952 -16.6875 m
170.7952 -90.1875 L
S
172.9793 -16.6875 m
172.9793 -90.1875 L
S
175.1633 -16.6875 m
175.1633 -90.1875 L
S
177.3473 -16.6875 m
177.3473 -90.1875 L
S
179.5314 -16.6875 m
179.5314 -90.1875 L
S
181.7154 -16.6875 m
181.7154 -90.1875 L
S
183.8995 -16.6875 m
183.8995 -90.1875 L
S
186.0835 -16.6875 m
186.0835 -90.1875 L
S
188.2676 -16.6875 m
188.2676 -90.1875 L
S
190.4516 -16.6875 m
190.4516 -90.1875 L
S
192.6357 -16.6875 m
192.6357 -90.1875 L
S
194.8197 -16.6875 m
194.8197 -90.1875 L
S
197.0037 -16.6875 m
197.0037 -90.1875 L
S
199.1878 -16.6875 m
199.1878 -90.1875 L
S
U
201.375 -16.6875 m
201.375 -90.1875 l
S
U
Q
U
U
0 A
u
q
0 i 0 J 0 j 1 w 4 M []0 d
0 D
199.1045 -246.1448 m
199.1166 -245.6582 199.1226 -245.2939 199.1226 -244.802 c
199.1226 -226.5583 190.7557 -211.7684 180.435 -211.7684 c
170.1143 -211.7684 161.7474 -226.5583 161.7474 -244.802 c
161.7474 -249.4925 162.3004 -253.8921 163.2975 -257.9333 c
199.1045 -246.1448 l
h
W
n
u
0 R
0.5082 G
160.9318 -211.125 m
160.9318 -259.75 L
S
0.5172 G
161.7225 -211.125 m
161.7225 -259.75 L
S
0.5262 G
162.5133 -211.125 m
162.5133 -259.75 L
S
0.5352 G
163.304 -211.125 m
163.304 -259.75 L
S
0.5442 G
164.0947 -211.125 m
164.0947 -259.75 L
S
0.5532 G
164.8854 -211.125 m
164.8854 -259.75 L
S
0.5622 G
165.6761 -211.125 m
165.6761 -259.75 L
S
0.5713 G
166.4668 -211.125 m
166.4668 -259.75 L
S
0.5803 G
167.2575 -211.125 m
167.2575 -259.75 L
S
0.5893 G
168.0483 -211.125 m
168.0483 -259.75 L
S
0.5983 G
168.839 -211.125 m
168.839 -259.75 L
S
0.6073 G
169.6297 -211.125 m
169.6297 -259.75 L
S
0.6163 G
170.4204 -211.125 m
170.4204 -259.75 L
S
0.6253 G
171.2111 -211.125 m
171.2111 -259.75 L
S
0.6343 G
172.0019 -211.125 m
172.0019 -259.75 L
S
0.6434 G
172.7926 -211.125 m
172.7926 -259.75 L
S
0.6524 G
173.5833 -211.125 m
173.5833 -259.75 L
S
0.6614 G
174.374 -211.125 m
174.374 -259.75 L
S
0.6704 G
175.1647 -211.125 m
175.1647 -259.75 L
S
0.6794 G
175.9555 -211.125 m
175.9555 -259.75 L
S
0.6884 G
176.7462 -211.125 m
176.7462 -259.75 L
S
0.6974 G
177.5369 -211.125 m
177.5369 -259.75 L
S
0.7064 G
178.3276 -211.125 m
178.3276 -259.75 L
S
0.7154 G
179.1183 -211.125 m
179.1183 -259.75 L
S
0.7245 G
179.909 -211.125 m
179.909 -259.75 L
S
0.7335 G
180.6997 -211.125 m
180.6997 -259.75 L
S
0.7425 G
181.4905 -211.125 m
181.4905 -259.75 L
S
0.7515 G
182.2812 -211.125 m
182.2812 -259.75 L
S
0.7605 G
183.0719 -211.125 m
183.0719 -259.75 L
S
0.7695 G
183.8626 -211.125 m
183.8626 -259.75 L
S
0.7785 G
184.6534 -211.125 m
184.6534 -259.75 L
S
0.7876 G
185.4441 -211.125 m
185.4441 -259.75 L
S
0.7966 G
186.2348 -211.125 m
186.2348 -259.75 L
S
0.8056 G
187.0255 -211.125 m
187.0255 -259.75 L
S
0.8146 G
187.8162 -211.125 m
187.8162 -259.75 L
S
0.8236 G
188.6069 -211.125 m
188.6069 -259.75 L
S
0.8326 G
189.3977 -211.125 m
189.3977 -259.75 L
S
0.8417 G
190.1884 -211.125 m
190.1884 -259.75 L
S
0.8507 G
190.9791 -211.125 m
190.9791 -259.75 L
S
0.8597 G
191.7698 -211.125 m
191.7698 -259.75 L
S
0.8687 G
192.5605 -211.125 m
192.5605 -259.75 L
S
0.8777 G
193.3512 -211.125 m
193.3512 -259.75 L
S
0.8867 G
194.142 -211.125 m
194.142 -259.75 L
S
0.8957 G
194.9327 -211.125 m
194.9327 -259.75 L
S
0.9048 G
195.7234 -211.125 m
195.7234 -259.75 L
S
0.9138 G
196.5141 -211.125 m
196.5141 -259.75 L
S
0.9228 G
197.3049 -211.125 m
197.3049 -259.75 L
S
0.9318 G
198.0956 -211.125 m
198.0956 -259.75 L
S
0.9408 G
198.8863 -211.125 m
198.8863 -259.75 L
S
U
0.95 G
199.6932 -211.125 m
199.6932 -259.75 l
S
0 G
0.5 w
160.1875 -211.0625 m
160.1875 -260.4375 l
S
u
162.2992 -211.0625 m
162.2992 -260.4375 L
S
164.4109 -211.0625 m
164.4109 -260.4375 L
S
166.5225 -211.0625 m
166.5225 -260.4375 L
S
168.6342 -211.0625 m
168.6342 -260.4375 L
S
170.7459 -211.0625 m
170.7459 -260.4375 L
S
172.8576 -211.0625 m
172.8576 -260.4375 L
S
174.9693 -211.0625 m
174.9693 -260.4375 L
S
177.0809 -211.0625 m
177.0809 -260.4375 L
S
179.1926 -211.0625 m
179.1926 -260.4375 L
S
181.3043 -211.0625 m
181.3043 -260.4375 L
S
183.416 -211.0625 m
183.416 -260.4375 L
S
185.5277 -211.0625 m
185.5277 -260.4375 L
S
187.6394 -211.0625 m
187.6394 -260.4375 L
S
189.751 -211.0625 m
189.751 -260.4375 L
S
191.8627 -211.0625 m
191.8627 -260.4375 L
S
193.9744 -211.0625 m
193.9744 -260.4375 L
S
196.0861 -211.0625 m
196.0861 -260.4375 L
S
198.1977 -211.0625 m
198.1977 -260.4375 L
S
U
200.3125 -211.0625 m
200.3125 -260.4375 l
S
Q
U
0 A
q
0 i 0 J 0 j 1 w 4 M []0 d
0 D
183.5166 -21.5082 m
192.3071 -24.1998 198.9925 -37.748 198.9925 -54.0558 c
198.9925 -72.2996 190.6257 -87.0895 180.3049 -87.0895 C
180.2516 -87.5185 L
205.196 -96.9784 222.9276 -121.0978 222.9276 -149.3579 c
222.9276 -177.4218 205.4414 -201.4022 180.7703 -210.9981 C
180.3049 -211.6263 L
190.6257 -211.6263 198.9925 -226.4162 198.9925 -244.6599 c
198.9925 -245.1518 198.9865 -245.6411 198.9744 -246.1277 C
244.6417 -246.0482 l
270.9321 -222.1532 287.4377 -187.6828 287.4377 -149.3579 c
287.4377 -85.6977 241.9587 -32.6724 181.6788 -21.0851 c
H
W
N
u
u
0 R
0.2 G
180.0836 -211.4121 m
205.1962 -201.9902 223.0692 -177.7609 223.0692 -149.3579 c
223.0692 -120.7587 204.9484 -96.3911 179.5622 -87.1106 c
S
U
U
u
0.2177 G
179.8767 -86.9238 m
205.2666 -96.2967 223.3612 -120.707 223.3612 -149.3517 c
223.3612 -177.8075 205.4964 -202.0915 180.3731 -211.5975 C
S
0.2355 G
180.1913 -86.737 m
205.5848 -96.2023 223.6531 -120.6554 223.6531 -149.3456 c
223.6531 -177.8541 205.7967 -202.1928 180.6626 -211.783 C
S
0.2532 G
180.5058 -86.5503 m
205.9029 -96.108 223.945 -120.6037 223.945 -149.3395 c
223.945 -177.9007 206.097 -202.2941 180.952 -211.9684 C
S
0.2709 G
180.8204 -86.3635 m
206.2211 -96.0136 224.2369 -120.552 224.2369 -149.3333 c
224.2369 -177.9473 206.3972 -202.3953 181.2415 -212.1539 C
S
0.2887 G
181.135 -86.1767 m
206.5393 -95.9192 224.5288 -120.5004 224.5288 -149.3272 c
224.5288 -177.9939 206.6975 -202.4966 181.531 -212.3394 C
S
0.3064 G
181.4495 -85.9899 m
206.8575 -95.8249 224.8207 -120.4487 224.8207 -149.321 c
224.8207 -178.0405 206.9978 -202.5979 181.8205 -212.5248 C
S
0.3241 G
181.7641 -85.8032 m
207.1756 -95.7305 225.1126 -120.397 225.1126 -149.3149 c
225.1126 -178.0871 207.2981 -202.6992 182.1099 -212.7103 C
S
0.3419 G
182.0786 -85.6164 m
207.4938 -95.6361 225.4045 -120.3454 225.4045 -149.3088 c
225.4045 -178.1337 207.5983 -202.8005 182.3994 -212.8957 C
S
0.3596 G
182.3932 -85.4296 m
207.812 -95.5417 225.6964 -120.2937 225.6964 -149.3026 c
225.6964 -178.1803 207.8986 -202.9018 182.6889 -213.0812 C
S
0.3773 G
182.7077 -85.2429 m
208.1302 -95.4474 225.9883 -120.2421 225.9883 -149.2965 c
225.9883 -178.2269 208.1989 -203.0031 182.9783 -213.2666 C
S
0.3951 G
183.0223 -85.0561 m
208.4484 -95.353 226.2802 -120.1904 226.2802 -149.2903 c
226.2802 -178.2735 208.4991 -203.1044 183.2678 -213.4521 C
S
0.4128 G
183.3369 -84.8693 m
208.7665 -95.2587 226.5721 -120.1387 226.5721 -149.2842 c
226.5721 -178.3201 208.7994 -203.2057 183.5573 -213.6375 C
S
0.4306 G
183.6514 -84.6825 m
209.0847 -95.1643 226.864 -120.0871 226.864 -149.278 c
226.864 -178.3667 209.0997 -203.3069 183.8468 -213.823 C
S
0.4483 G
183.966 -84.4958 m
209.4029 -95.0699 227.156 -120.0354 227.156 -149.2719 c
227.156 -178.4133 209.4 -203.4082 184.1362 -214.0085 C
S
0.466 G
184.2805 -84.309 m
209.7211 -94.9755 227.4479 -119.9838 227.4479 -149.2658 c
227.4479 -178.4599 209.7002 -203.5095 184.4257 -214.1939 C
S
0.4838 G
184.5951 -84.1222 m
210.0393 -94.8812 227.7398 -119.9321 227.7398 -149.2596 c
227.7398 -178.5065 210.0005 -203.6108 184.7152 -214.3794 C
S
0.5015 G
184.9096 -83.9355 m
210.3574 -94.7868 228.0317 -119.8804 228.0317 -149.2535 c
228.0317 -178.5531 210.3008 -203.7121 185.0047 -214.5648 C
S
U
u
0.2 G
244.6417 -246.0482 m
270.9321 -222.1532 287.4377 -187.6828 287.4377 -149.3579 c
287.4377 -86.2346 242.6611 -33.5676 183.1382 -21.3871 c
S
U
u
0.2104 G
183.2503 -21.6794 m
227.2211 -30.7402 263.1017 -61.9483 278.7135 -103.1248 c
281.38 -110.1574 283.4553 -117.4802 284.8789 -125.0324 c
286.3867 -133.037 287.1617 -141.294 287.1343 -149.731 c
287.012 -187.9979 270.3852 -222.3704 244.0125 -246.0899 C
S
0.2208 G
183.3624 -21.9716 m
227.2661 -31.0816 263.0612 -62.3249 278.5518 -103.5052 c
281.1971 -110.5368 283.2505 -117.8569 284.6518 -125.4047 c
286.1368 -133.4163 286.8856 -141.6738 286.8309 -150.1041 c
286.5862 -188.3131 269.8383 -222.5876 243.3832 -246.1316 C
S
0.2312 G
183.4744 -22.2638 m
227.3111 -31.4231 263.0208 -62.7014 278.3901 -103.8855 c
281.0143 -110.9162 283.0458 -118.2336 284.4246 -125.7771 c
285.8869 -133.7956 286.6095 -142.0535 286.5274 -150.4773 c
286.1605 -188.6282 269.2914 -222.8048 242.7539 -246.1732 C
S
0.2415 G
183.5865 -22.5561 m
227.3561 -31.7645 262.9803 -63.078 278.2285 -104.2659 c
280.8315 -111.2955 282.8411 -118.6103 284.1975 -126.1494 c
285.637 -134.1749 286.3334 -142.4333 286.224 -150.8504 c
285.7347 -188.9434 268.7445 -223.0219 242.1246 -246.2149 C
S
0.2519 G
183.6986 -22.8483 m
227.4011 -32.1059 262.9398 -63.4546 278.0668 -104.6462 c
280.6487 -111.6749 282.6364 -118.987 283.9703 -126.5217 c
285.3872 -134.5542 286.0573 -142.813 285.9205 -151.2235 c
285.3089 -189.2586 268.1976 -223.2391 241.4954 -246.2565 C
S
0.2623 G
183.8107 -23.1405 m
227.4461 -32.4473 262.8993 -63.8311 277.9051 -105.0266 c
280.4659 -112.0542 282.4317 -119.3637 283.7431 -126.8941 c
285.1373 -134.9335 285.7812 -143.1928 285.6171 -151.5966 c
284.8832 -189.5737 267.6508 -223.4563 240.8661 -246.2982 C
S
0.2727 G
183.9227 -23.4328 m
227.4911 -32.7887 262.8589 -64.2077 277.7435 -105.4069 c
280.2831 -112.4336 282.2269 -119.7404 283.516 -127.2664 c
284.8874 -135.3128 285.5051 -143.5725 285.3137 -151.9698 c
284.4574 -189.8889 267.1039 -223.6735 240.2368 -246.3398 C
S
0.2831 G
184.0348 -23.725 m
227.5361 -33.1301 262.8184 -64.5842 277.5818 -105.7872 c
280.1003 -112.813 282.0222 -120.1171 283.2888 -127.6387 c
284.6375 -135.6921 285.229 -143.9523 285.0102 -152.3429 c
284.0317 -190.204 266.557 -223.8907 239.6075 -246.3815 C
S
0.2935 G
184.1469 -24.0173 m
227.5811 -33.4716 262.7779 -64.9608 277.4202 -106.1676 c
279.9175 -113.1923 281.8175 -120.4938 283.0617 -128.0111 c
284.3876 -136.0714 284.9529 -144.3321 284.7068 -152.716 c
283.6059 -190.5192 266.0101 -224.1079 238.9783 -246.4232 C
S
0.3039 G
184.259 -24.3095 m
227.6261 -33.813 262.7375 -65.3374 277.2585 -106.5479 c
279.7347 -113.5717 281.6128 -120.8705 282.8345 -128.3834 c
284.1378 -136.4507 284.6769 -144.7118 284.4034 -153.0891 c
283.1802 -190.8344 265.4632 -224.3251 238.349 -246.4648 C
S
0.3143 G
184.371 -24.6017 m
227.6711 -34.1544 262.697 -65.7139 277.0968 -106.9283 c
279.5518 -113.951 281.4081 -121.2472 282.6074 -128.7557 c
283.8879 -136.83 284.4008 -145.0916 284.0999 -153.4623 c
282.7544 -191.1495 264.9163 -224.5423 237.7197 -246.5065 C
S
0.3246 G
184.4831 -24.894 m
227.7161 -34.4958 262.6565 -66.0905 276.9352 -107.3086 c
279.369 -114.3304 281.2034 -121.6239 282.3802 -129.1281 c
283.638 -137.2093 284.1247 -145.4714 283.7965 -153.8354 c
282.3286 -191.4647 264.3694 -224.7594 237.0904 -246.5481 C
S
0.335 G
184.5952 -25.1862 m
227.7611 -34.8373 262.616 -66.4671 276.7735 -107.689 c
279.1862 -114.7097 280.9986 -122.0006 282.1531 -129.5004 c
283.3881 -137.5886 283.8486 -145.8511 283.493 -154.2085 c
281.9029 -191.7798 263.8226 -224.9767 236.4612 -246.5898 C
S
0.3454 G
184.7072 -25.4785 m
227.8061 -35.1787 262.5756 -66.8436 276.6118 -108.0693 c
279.0034 -115.0891 280.7939 -122.3774 281.9259 -129.8727 c
283.1382 -137.9679 283.5725 -146.2309 283.1896 -154.5816 c
281.4771 -192.095 263.2757 -225.1938 235.8319 -246.6315 C
S
0.3558 G
184.8193 -25.7707 m
227.8511 -35.5201 262.5351 -67.2202 276.4502 -108.4496 c
278.8206 -115.4685 280.5892 -122.754 281.6988 -130.2451 c
282.8884 -138.3472 283.2964 -146.6106 282.8862 -154.9547 c
281.0514 -192.4102 262.7288 -225.411 235.2026 -246.6731 C
S
0.3662 G
184.9314 -26.0629 m
227.8961 -35.8615 262.4946 -67.5967 276.2885 -108.83 c
278.6378 -115.8479 280.3845 -123.1308 281.4716 -130.6174 c
282.6385 -138.7265 283.0203 -146.9904 282.5827 -155.3279 c
280.6256 -192.7253 262.1819 -225.6282 234.5733 -246.7148 C
S
0.3766 G
185.0435 -26.3552 m
227.9411 -36.2029 262.4541 -67.9733 276.1268 -109.2103 c
278.4549 -116.2272 280.1798 -123.5075 281.2445 -130.9897 c
282.3886 -139.1058 282.7442 -147.3701 282.2793 -155.701 c
280.1998 -193.0405 261.635 -225.8454 233.9441 -246.7564 C
S
0.387 G
185.1555 -26.6474 m
227.9861 -36.5444 262.4137 -68.3499 275.9652 -109.5906 c
278.2721 -116.6066 279.9751 -123.8842 281.0173 -131.3621 c
282.1387 -139.4851 282.4682 -147.7499 281.9759 -156.0741 c
279.7741 -193.3557 261.0882 -226.0626 233.3148 -246.7981 C
S
0.3973 G
185.2676 -26.9396 m
228.0311 -36.8858 262.3732 -68.7264 275.8035 -109.971 c
278.0893 -116.9859 279.7703 -124.2609 280.7901 -131.7344 c
281.8888 -139.8644 282.1921 -148.1297 281.6724 -156.4472 c
279.3483 -193.6708 260.5413 -226.2798 232.6855 -246.8398 C
S
0.4077 G
185.3797 -27.2319 m
228.0761 -37.2272 262.3327 -69.103 275.6419 -110.3513 c
277.9065 -117.3653 279.5656 -124.6376 280.563 -132.1067 c
281.639 -140.2437 281.916 -148.5094 281.369 -156.8203 c
278.9226 -193.986 259.9944 -226.497 232.0562 -246.8814 C
S
0.4181 G
185.4918 -27.5241 m
228.1211 -37.5686 262.2923 -69.4796 275.4802 -110.7317 c
277.7237 -117.7446 279.3609 -125.0143 280.3358 -132.4791 c
281.3891 -140.623 281.6399 -148.8892 281.0655 -157.1935 c
278.4968 -194.3011 259.4475 -226.7141 231.427 -246.9231 C
S
0.4285 G
185.6038 -27.8163 m
228.1661 -37.91 262.2518 -69.8561 275.3185 -111.112 c
277.5409 -118.124 279.1562 -125.391 280.1087 -132.8514 c
281.1392 -141.0023 281.3638 -149.269 280.7621 -157.5666 c
278.0711 -194.6163 258.9006 -226.9313 230.7977 -246.9647 C
S
0.4389 G
185.7159 -28.1086 m
228.2111 -38.2515 262.2113 -70.2327 275.1569 -111.4924 c
277.3581 -118.5034 278.9514 -125.7677 279.8815 -133.2237 c
280.8893 -141.3816 281.0877 -149.6487 280.4587 -157.9397 c
277.6453 -194.9315 258.3537 -227.1485 230.1684 -247.0064 C
S
0.4493 G
185.828 -28.4008 m
228.2561 -38.5929 262.1708 -70.6092 274.9952 -111.8727 c
277.1752 -118.8827 278.7467 -126.1444 279.6544 -133.5961 c
280.6394 -141.7609 280.8116 -150.0285 280.1552 -158.3128 c
277.2195 -195.2466 257.8068 -227.3657 229.5391 -247.048 C
S
0.4597 G
185.9401 -28.6931 m
228.3011 -38.9343 262.1304 -70.9858 274.8336 -112.253 c
276.9924 -119.2621 278.542 -126.5211 279.4272 -133.9684 c
280.3895 -142.1402 280.5355 -150.4082 279.8518 -158.686 c
276.7938 -195.5618 257.2599 -227.5829 228.9099 -247.0897 C
S
U
u
0.47 G
186.0517 -28.9841 m
228.3459 -39.2744 262.0901 -71.3609 274.6725 -112.6319 c
276.8103 -119.6399 278.3381 -126.8963 279.201 -134.3392 c
280.1407 -142.518 280.2605 -150.7865 279.5495 -159.0576 c
276.3697 -195.8757 256.7152 -227.7992 228.2831 -247.1312 C
S
U
0.4804 G
186.265 -29.5403 m
228.4424 -39.9463 262.0163 -72.1302 274.3252 -113.4304 c
276.4165 -120.4419 277.8951 -127.6925 278.7089 -135.1203 c
279.5933 -143.2901 279.6567 -151.5407 278.8907 -159.7845 c
275.4761 -196.4593 255.6355 -228.1735 227.0856 -247.2105 C
S
0.4909 G
186.4782 -30.0963 m
228.539 -40.6183 261.9425 -72.8995 273.9778 -114.229 c
276.0226 -121.2438 277.4521 -128.4886 278.2169 -135.9014 c
279.046 -144.0622 279.0529 -152.2948 278.2318 -160.5114 c
274.5824 -197.0428 254.5558 -228.5477 225.8882 -247.2897 C
S
0.5013 G
186.6915 -30.6524 m
228.6355 -41.2903 261.8687 -73.6689 273.6304 -115.0276 c
275.6288 -122.0457 277.0092 -129.2848 277.7248 -136.6825 c
278.4987 -144.8343 278.4491 -153.049 277.5729 -161.2384 c
273.6888 -197.6264 253.476 -228.922 224.6907 -247.369 C
S
0.5117 G
186.9048 -31.2085 m
228.7321 -41.9622 261.795 -74.4382 273.2831 -115.8261 c
275.235 -122.8476 276.5662 -130.081 277.2328 -137.4636 c
277.9514 -145.6064 277.8454 -153.8032 276.914 -161.9653 c
272.7951 -198.21 252.3963 -229.2963 223.4933 -247.4482 C
S
0.5222 G
187.118 -31.7646 m
228.8286 -42.6342 261.7212 -75.2075 272.9357 -116.6247 c
274.8411 -123.6495 276.1232 -130.8771 276.7408 -138.2447 c
277.4041 -146.3785 277.2415 -154.5574 276.2551 -162.6922 c
271.9015 -198.7936 251.3166 -229.6705 222.2959 -247.5275 C
S
0.5326 G
187.3313 -32.3207 m
228.9252 -43.3061 261.6474 -75.9769 272.5883 -117.4232 c
274.4472 -124.4515 275.6802 -131.6733 276.2487 -139.0258 c
276.8568 -147.1506 276.6378 -155.3116 275.5962 -163.4191 c
271.0078 -199.3772 250.2369 -230.0448 221.0984 -247.6068 C
S
0.5431 G
187.5446 -32.8768 m
229.0217 -43.9781 261.5736 -76.7462 272.241 -118.2218 c
274.0534 -125.2534 275.2372 -132.4695 275.7567 -139.8069 c
276.3094 -147.9227 276.034 -156.0657 274.9373 -164.146 c
270.1142 -199.9608 249.1571 -230.4191 219.901 -247.6861 C
S
0.5535 G
187.7578 -33.4329 m
229.1183 -44.6501 261.4999 -77.5155 271.8936 -119.0204 c
273.6595 -126.0553 274.7943 -133.2656 275.2646 -140.588 c
275.7621 -148.6947 275.4302 -156.8199 274.2784 -164.873 c
269.2205 -200.5444 248.0774 -230.7933 218.7035 -247.7653 C
S
0.5639 G
187.9711 -33.989 m
229.2149 -45.322 261.4261 -78.2849 271.5463 -119.8189 c
273.2657 -126.8572 274.3513 -134.0618 274.7726 -141.3691 c
275.2148 -149.4668 274.8264 -157.5741 273.6195 -165.5999 c
268.3268 -201.1279 246.9977 -231.1676 217.5061 -247.8446 C
S
0.5744 G
188.1844 -34.5451 m
229.3114 -45.994 261.3523 -79.0542 271.1989 -120.6175 c
272.8718 -127.6592 273.9083 -134.8579 274.2806 -142.1502 c
274.6675 -150.2389 274.2226 -158.3283 272.9606 -166.3268 c
267.4332 -201.7115 245.9179 -231.5418 216.3087 -247.9239 C
S
0.5848 G
188.3976 -35.1012 m
229.408 -46.6659 261.2785 -79.8235 270.8515 -121.416 c
272.478 -128.4611 273.4653 -135.6541 273.7885 -142.9313 c
274.1201 -151.011 273.6188 -159.0825 272.3017 -167.0537 c
266.5396 -202.2951 244.8382 -231.9161 215.1112 -248.0031 C
S
0.5952 G
188.6109 -35.6573 m
229.5045 -47.3379 261.2048 -80.5929 270.5042 -122.2146 c
272.0842 -129.263 273.0223 -136.4503 273.2965 -143.7124 c
273.5728 -151.7831 273.015 -159.8366 271.6429 -167.7806 c
265.6459 -202.8787 243.7585 -232.2903 213.9138 -248.0824 C
S
0.6057 G
188.8242 -36.2134 m
229.6011 -48.0098 261.131 -81.3622 270.1568 -123.0132 c
271.6903 -130.0649 272.5793 -137.2464 272.8045 -144.4935 c
273.0255 -152.5552 272.4112 -160.5908 270.984 -168.5076 c
264.7523 -203.4623 242.6788 -232.6646 212.7163 -248.1617 C
S
0.6161 G
189.0374 -36.7695 m
229.6976 -48.6818 261.0572 -82.1315 269.8094 -123.8117 c
271.2964 -130.8668 272.1363 -138.0426 272.3124 -145.2746 c
272.4782 -153.3273 271.8074 -161.345 270.3251 -169.2345 c
263.8586 -204.0459 241.599 -233.0388 211.5189 -248.2409 C
S
0.6266 G
189.2507 -37.3256 m
229.7942 -49.3538 260.9834 -82.9008 269.4621 -124.6103 c
270.9026 -131.6687 271.6934 -138.8388 271.8204 -146.0557 c
271.9309 -154.0994 271.2036 -162.0992 269.6662 -169.9614 c
262.9649 -204.6294 240.5193 -233.4131 210.3214 -248.3202 C
S
0.637 G
189.464 -37.8817 m
229.8907 -50.0257 260.9097 -83.6702 269.1147 -125.4089 c
270.5088 -132.4707 271.2504 -139.6349 271.3283 -146.8368 c
271.3836 -154.8714 270.5998 -162.8533 269.0073 -170.6883 c
262.0713 -205.213 239.4396 -233.7874 209.124 -248.3995 C
S
0.6474 G
189.6772 -38.4378 m
229.9873 -50.6977 260.8359 -84.4395 268.7673 -126.2074 c
270.1149 -133.2726 270.8074 -140.4311 270.8363 -147.6179 c
270.8363 -155.6435 269.996 -163.6075 268.3484 -171.4152 c
261.1776 -205.7966 238.3598 -234.1616 207.9266 -248.4787 C
S
0.6578 G
189.8905 -38.9939 m
230.0838 -51.3696 260.7621 -85.2088 268.4199 -127.006 c
269.721 -134.0745 270.3644 -141.2272 270.3443 -148.3989 c
270.2889 -156.4156 269.3922 -164.3617 267.6895 -172.1422 c
260.284 -206.3802 237.2801 -234.5359 206.7291 -248.558 C
S
0.6683 G
190.1037 -39.55 m
230.1804 -52.0416 260.6883 -85.9782 268.0726 -127.8046 c
269.3272 -134.8764 269.9214 -142.0234 269.8522 -149.18 c
269.7416 -157.1877 268.7884 -165.1159 267.0306 -172.8691 c
259.3903 -206.9638 236.2004 -234.9102 205.5317 -248.6373 C
S
0.6787 G
190.317 -40.1061 m
230.2769 -52.7136 260.6146 -86.7475 267.7252 -128.6031 c
268.9334 -135.6783 269.4784 -142.8196 269.3602 -149.9611 c
269.1943 -157.9598 268.1846 -165.8701 266.3717 -173.596 c
258.4967 -207.5474 235.1207 -235.2844 204.3342 -248.7165 C
S
0.6892 G
190.5303 -40.6622 m
230.3735 -53.3855 260.5408 -87.5168 267.3779 -129.4017 c
268.5395 -136.4803 269.0354 -143.6157 268.8681 -150.7422 c
268.647 -158.7319 267.5808 -166.6242 265.7128 -174.3229 c
257.603 -208.131 234.0409 -235.6587 203.1368 -248.7958 C
S
0.6996 G
190.7435 -41.2183 m
230.47 -54.0575 260.467 -88.2862 267.0305 -130.2002 c
268.1456 -137.2822 268.5925 -144.4119 268.3761 -151.5233 c
268.0997 -159.504 266.977 -167.3784 265.0539 -175.0498 c
256.7094 -208.7145 232.9612 -236.0329 201.9393 -248.8751 C
S
0.71 G
190.9568 -41.7744 m
230.5666 -54.7295 260.3932 -89.0555 266.6831 -130.9988 c
267.7518 -138.0841 268.1495 -145.2081 267.8841 -152.3044 c
267.5524 -160.276 266.3732 -168.1326 264.3951 -175.7767 c
255.8157 -209.2981 231.8815 -236.4072 200.7419 -248.9544 C
S
0.7205 G
191.1701 -42.3305 m
230.6631 -55.4014 260.3195 -89.8248 266.3358 -131.7974 c
267.358 -138.886 267.7065 -146.0042 267.392 -153.0855 c
267.005 -161.0481 265.7695 -168.8868 263.7361 -176.5037 c
254.9221 -209.8817 230.8017 -236.7815 199.5445 -249.0336 C
S
0.7309 G
191.3833 -42.8866 m
230.7597 -56.0734 260.2457 -90.5941 265.9884 -132.5959 c
266.9641 -139.6879 267.2635 -146.8004 266.9 -153.8666 c
266.4577 -161.8202 265.1657 -169.641 263.0773 -177.2306 c
254.0284 -210.4653 229.722 -237.1557 198.347 -249.1129 C
S
u
0.7338 G
198.0098 -248.7384 m
229.258 -236.8715 253.4823 -210.3391 262.5392 -177.2848 c
264.6294 -169.7355 265.9277 -161.9538 266.3804 -154.0374 c
266.5602 -150.649 266.5868 -147.2492 266.4587 -143.8455 c
266.3209 -140.1861 266.0043 -136.5228 265.507 -132.8648 c
259.8563 -91.0422 230.5608 -56.6466 191.4037 -43.4617 C
S
0.7367 G
197.6726 -248.3639 m
228.7939 -236.5874 252.9361 -210.213 262.0011 -177.339 c
264.093 -169.8301 265.3977 -162.0874 265.8607 -154.2082 c
266.0451 -150.8364 266.0772 -147.4527 265.9551 -144.0644 c
265.8239 -140.4218 265.5146 -136.7752 265.0255 -133.1338 c
259.467 -91.4902 230.3619 -57.2198 191.4241 -44.0367 C
S
0.7395 G
197.3353 -247.9892 m
228.3296 -236.3031 252.3898 -210.0868 261.4627 -177.3932 c
263.5565 -169.9246 264.8674 -162.221 265.3409 -154.3791 c
265.5299 -151.024 265.5673 -147.6563 265.4514 -144.2834 c
265.3267 -140.6576 265.0248 -137.0277 264.5438 -133.4029 c
259.0774 -91.9384 230.1629 -57.7932 191.4445 -44.612 C
S
0.7424 G
196.998 -247.6147 m
227.8656 -236.0189 251.8436 -209.9606 260.9246 -177.4474 c
263.0201 -170.0192 264.3374 -162.3546 264.8213 -154.5499 c
265.0149 -151.2114 265.0577 -147.8598 264.9478 -144.5023 c
264.8297 -140.8933 264.5351 -137.2801 264.0623 -133.6718 c
258.688 -92.3865 229.964 -58.3664 191.4649 -45.1871 C
S
0.7453 G
196.6607 -247.24 m
227.4013 -235.7347 251.2973 -209.8344 260.3863 -177.5016 c
262.4836 -170.1137 263.8072 -162.4882 264.3014 -154.7208 c
264.4997 -151.3989 264.5479 -148.0634 264.4441 -144.7213 c
264.3324 -141.1291 264.0453 -137.5326 263.5807 -133.9409 c
258.2985 -92.8347 229.765 -58.9399 191.4852 -45.7624 C
S
0.7482 G
196.3235 -246.8655 m
226.9372 -235.4505 250.7511 -209.7083 259.8481 -177.5558 c
261.9472 -170.2083 263.2771 -162.6218 263.7818 -154.8916 c
263.9846 -151.5864 264.0382 -148.2669 263.9405 -144.9402 c
263.8354 -141.3648 263.5556 -137.7851 263.0992 -134.2098 c
257.9091 -93.2828 229.5661 -59.5131 191.5056 -46.3374 C
S
0.7511 G
195.9861 -246.4908 m
226.473 -235.1662 250.2048 -209.5821 259.3098 -177.61 c
261.4107 -170.3028 262.7469 -162.7554 263.2619 -155.0625 c
263.4694 -151.7739 263.5284 -148.4704 263.4368 -145.1592 c
263.3382 -141.6006 263.0657 -138.0376 262.6175 -134.4789 c
257.5196 -93.731 229.3672 -60.0865 191.526 -46.9127 C
S
0.7539 G
195.6489 -246.1163 m
226.0089 -234.8821 249.6586 -209.4559 258.7716 -177.6642 c
260.8744 -170.3973 262.2169 -162.889 262.7423 -155.2333 c
262.9544 -151.9614 263.0188 -148.6739 262.9332 -145.3781 c
262.8412 -141.8363 262.5761 -138.29 262.1361 -134.7478 c
257.1302 -94.1791 229.1683 -60.6597 191.5464 -47.4878 C
S
0.7568 G
195.3116 -245.7416 m
225.5446 -234.5978 249.1123 -209.3297 258.2333 -177.7184 c
260.3378 -170.4919 261.6866 -163.0227 262.2225 -155.4042 c
262.4392 -152.1489 262.509 -148.8775 262.4295 -145.5971 c
262.344 -142.0721 262.0862 -138.5425 261.6544 -135.0169 c
256.7407 -94.6273 228.9693 -61.2331 191.5668 -48.0631 C
S
0.7597 G
194.9744 -245.3671 m
225.0805 -234.3136 248.5661 -209.2035 257.6952 -177.7726 c
259.8014 -170.5865 261.1566 -163.1562 261.7028 -155.575 c
261.9242 -152.3363 261.9993 -149.081 261.9259 -145.816 c
261.847 -142.3078 261.5965 -138.7949 261.1729 -135.2859 c
256.3513 -95.0754 228.7704 -61.8063 191.5871 -48.6381 C
S
0.7626 G
194.637 -244.9925 m
224.6163 -234.0294 248.0197 -209.0773 257.1568 -177.8268 c
259.2649 -170.681 260.6263 -163.2899 261.183 -155.7459 c
261.4089 -152.5239 261.4895 -149.2845 261.4222 -146.0349 c
261.3497 -142.5436 261.1067 -139.0474 260.6912 -135.5549 c
255.9618 -95.5236 228.5714 -62.3797 191.6075 -49.2135 C
S
0.7655 G
194.2998 -244.6179 m
224.1522 -233.7452 247.4736 -208.9512 256.6187 -177.881 c
258.7286 -170.7755 260.0963 -163.4234 260.6633 -155.9167 c
260.8939 -152.7113 260.9799 -149.488 260.9186 -146.2538 c
260.8527 -142.7793 260.617 -139.2998 260.2098 -135.8238 c
255.5724 -95.9717 228.3725 -62.953 191.6279 -49.7885 C
S
0.7684 G
193.9624 -244.2433 m
223.688 -233.4609 246.9272 -208.825 256.0804 -177.9352 c
258.192 -170.8701 259.5661 -163.5571 260.1435 -156.0876 c
260.3787 -152.8988 260.47 -149.6916 260.4149 -146.4728 c
260.3555 -143.0151 260.1272 -139.5523 259.7281 -136.0929 c
255.1828 -96.4199 228.1735 -63.5264 191.6483 -50.3638 C
S
0.7713 G
193.6252 -243.8688 m
223.2239 -233.1768 246.3811 -208.6988 255.5422 -177.9894 c
257.6557 -170.9646 259.0361 -163.6907 259.6239 -156.2584 c
259.8637 -153.0863 259.9604 -149.8951 259.9113 -146.6917 c
259.8585 -143.2508 259.6375 -139.8047 259.2466 -136.3619 c
254.7934 -96.8679 227.9746 -64.0996 191.6687 -50.9389 C
S
0.7742 G
193.2879 -243.4941 m
222.7596 -232.8925 245.8347 -208.5726 255.0039 -178.0436 c
257.1191 -171.0592 258.5058 -163.8243 259.104 -156.4293 c
259.3484 -153.2738 259.4506 -150.0987 259.4076 -146.9107 c
259.3613 -143.4866 259.1477 -140.0572 258.765 -136.6309 c
254.4039 -97.3162 227.7756 -64.673 191.689 -51.5142 C
S
0.777 G
192.9507 -243.1196 m
222.2956 -232.6083 245.2886 -208.4465 254.4658 -178.0978 c
256.5828 -171.1537 257.9758 -163.9579 258.5844 -156.6001 c
258.8334 -153.4613 258.9409 -150.3022 258.904 -147.1296 c
258.8642 -143.7223 258.658 -140.3096 258.2835 -136.8999 c
254.0145 -97.7642 227.5767 -65.2462 191.7094 -52.0892 C
S
0.7799 G
192.6133 -242.7449 m
221.8313 -232.3241 244.7422 -208.3203 253.9274 -178.152 c
256.0462 -171.2483 257.4455 -164.0915 258.0645 -156.771 c
258.3182 -153.6488 258.4311 -150.5057 258.4003 -147.3486 c
258.367 -143.9581 258.1681 -140.5621 257.8018 -137.1689 c
253.625 -98.2125 227.3777 -65.8196 191.7298 -52.6645 C
S
0.7828 G
192.2761 -242.3704 m
221.3672 -232.0399 244.1961 -208.1941 253.3893 -178.2062 c
255.5099 -171.3428 256.9155 -164.2251 257.5449 -156.9418 c
257.8032 -153.8363 257.9215 -150.7092 257.8967 -147.5675 c
257.87 -144.1938 257.6784 -140.8145 257.3203 -137.4379 c
253.2356 -98.6605 227.1788 -66.3928 191.7502 -53.2396 C
S
0.7857 G
191.9387 -241.9958 m
220.903 -231.7556 243.6497 -208.0679 252.8509 -178.2604 c
254.9733 -171.4374 256.3852 -164.3587 257.0251 -157.1127 c
257.2879 -154.0238 257.4117 -150.9128 257.393 -147.7864 c
257.3728 -144.4296 257.1886 -141.067 256.8387 -137.707 c
252.8461 -99.1087 226.9798 -66.9663 191.7705 -53.8149 C
S
0.7886 G
191.6015 -241.6212 m
220.4389 -231.4715 243.1036 -207.9418 252.3128 -178.3146 c
254.437 -171.5319 255.8552 -164.4923 256.5054 -157.2835 c
256.7729 -154.2112 256.902 -151.1163 256.8894 -148.0054 c
256.8758 -144.6653 256.6989 -141.3194 256.3572 -137.9759 c
252.4567 -99.5568 226.7809 -67.5395 191.7909 -54.3899 C
S
0.7914 G
191.2642 -241.2466 m
219.9746 -231.1872 242.5572 -207.8155 251.7745 -178.3688 c
253.9004 -171.6265 255.325 -164.6259 255.9856 -157.4544 c
256.2577 -154.3988 256.3922 -151.3199 256.3856 -148.2243 c
256.3786 -144.9011 256.2091 -141.5719 255.8755 -138.2449 c
252.0671 -100.005 226.582 -68.1129 191.8113 -54.9652 C
S
0.7943 G
190.927 -240.8721 m
219.5106 -230.903 242.0111 -207.6894 251.2363 -178.423 c
253.3641 -171.721 254.795 -164.7595 255.4659 -157.6252 c
255.7427 -154.5862 255.8826 -151.5234 255.8821 -148.4432 c
255.8815 -145.1368 255.7194 -141.8244 255.3941 -138.5139 c
251.6778 -100.4531 226.3831 -68.6861 191.8317 -55.5403 C
S
0.7972 G
190.5896 -240.4974 m
219.0463 -230.6188 241.4647 -207.5632 250.698 -178.4772 c
252.8275 -171.8156 254.2647 -164.8932 254.9461 -157.796 c
255.2274 -154.7737 255.3728 -151.7269 255.3784 -148.6622 c
255.3843 -145.3726 255.2295 -142.0769 254.9124 -138.783 c
251.2882 -100.9013 226.1841 -69.2595 191.8521 -56.1156 C
S
0.8001 G
190.2524 -240.1229 m
218.5822 -230.3346 240.9185 -207.437 250.1599 -178.5314 c
252.2912 -171.9101 253.7347 -165.0267 254.4264 -157.9669 c
254.7124 -154.9612 254.8631 -151.9304 254.8748 -148.8811 c
254.8873 -145.6083 254.7399 -142.3292 254.4309 -139.0519 c
250.8988 -101.3494 225.9851 -69.8327 191.8724 -56.6907 C
S
U
u
0.803 G
189.9152 -239.7483 m
218.1181 -230.0504 240.3724 -207.3109 249.6217 -178.5856 c
251.7548 -172.0047 253.2046 -165.1603 253.9068 -158.1377 c
254.1974 -155.1486 254.3535 -152.1339 254.3712 -149.1 c
254.3903 -145.844 254.2502 -142.5817 253.9494 -139.3209 c
250.5095 -101.7975 225.7863 -70.4059 191.8928 -57.2657 C
S
0.8066 G
189.904 -239.3748 m
217.9572 -229.6865 240.0863 -207.0423 249.2831 -178.4504 c
251.4037 -171.9006 252.845 -165.0884 253.5428 -158.0986 c
253.8317 -155.1236 253.9868 -152.123 254.0043 -149.1031 c
254.0231 -145.8619 253.8836 -142.6149 253.5844 -139.3699 c
250.1611 -102.0229 225.5739 -70.7743 191.8574 -57.6656 C
S
0.8103 G
189.8929 -239.0012 m
217.7962 -229.3226 239.8002 -206.7738 248.9444 -178.3152 c
251.0526 -171.7964 252.4854 -165.0165 253.1788 -158.0595 c
253.466 -155.0986 253.6201 -152.1121 253.6374 -149.1062 c
253.6559 -145.8798 253.517 -142.6481 253.2193 -139.4189 c
249.8128 -102.2483 225.3616 -71.1428 191.8219 -58.0654 C
S
0.814 G
189.8817 -238.6276 m
217.6352 -228.9585 239.5141 -206.5051 248.6056 -178.1799 c
250.7014 -171.6923 252.1256 -164.9446 252.8147 -158.0204 c
253.1001 -155.0736 253.2532 -152.1011 253.2703 -149.1093 c
253.2886 -145.8977 253.1503 -142.6813 252.8541 -139.4679 c
249.4643 -102.4738 225.1492 -71.5113 191.7865 -58.4654 C
S
0.8176 G
189.8706 -238.2541 m
217.4742 -228.5946 239.228 -206.2366 248.2669 -178.0447 c
250.3503 -171.5881 251.766 -164.8727 252.4507 -157.9813 c
252.7344 -155.0486 252.8865 -152.0903 252.9034 -149.1125 c
252.9214 -145.9156 252.7837 -142.7145 252.489 -139.5169 c
249.116 -102.6992 224.9368 -71.8797 191.751 -58.8653 C
S
0.8213 G
189.8594 -237.8805 m
217.3132 -228.2307 238.942 -205.968 247.9283 -177.9095 c
249.9992 -171.484 251.4064 -164.8008 252.0867 -157.9422 c
252.3687 -155.0236 252.5198 -152.0793 252.5364 -149.1156 c
252.5542 -145.9335 252.4171 -142.7477 252.1239 -139.5659 c
248.7676 -102.9246 224.7245 -72.2481 191.7156 -59.2651 C
S
0.825 G
189.8483 -237.507 m
217.1523 -227.8667 238.6559 -205.6995 247.5896 -177.7743 c
249.6481 -171.3798 251.0468 -164.7289 251.7227 -157.9031 c
252.0029 -154.9986 252.1531 -152.0684 252.1695 -149.1187 c
252.187 -145.9514 252.0505 -142.7809 251.7588 -139.6149 c
248.4193 -103.15 224.5121 -72.6165 191.6802 -59.665 C
S
0.8286 G
189.8371 -237.1334 m
216.9913 -227.5028 238.3698 -205.4309 247.2509 -177.6392 c
249.297 -171.2757 250.6871 -164.657 251.3587 -157.8641 c
251.6372 -154.9736 251.7864 -152.0575 251.8025 -149.1218 c
251.8198 -145.9693 251.6839 -142.8141 251.3938 -139.6639 c
248.0709 -103.3754 224.2998 -72.9849 191.6447 -60.0648 C
S
0.8323 G
189.826 -236.7597 m
216.8303 -227.1388 238.0836 -205.1623 246.9122 -177.5039 c
248.9458 -171.1716 250.3274 -164.5851 250.9946 -157.825 c
251.2714 -154.9486 251.4196 -152.0466 251.4355 -149.1249 c
251.4525 -145.9872 251.3171 -142.8473 251.0286 -139.7129 c
247.7225 -103.6009 224.0874 -73.3534 191.6093 -60.4648 C
S
0.8359 G
189.8148 -236.3862 m
216.6693 -226.7748 237.7976 -204.8937 246.5735 -177.3687 c
248.5946 -171.0674 249.9677 -164.5132 250.6306 -157.7859 c
250.9057 -154.9236 251.0529 -152.0356 251.0685 -149.128 c
251.0853 -146.005 250.9505 -142.8805 250.6635 -139.7619 c
247.3742 -103.8263 223.875 -73.7218 191.5738 -60.8647 C
S
0.8396 G
189.8037 -236.0127 m
216.5084 -226.4109 237.5115 -204.6252 246.2348 -177.2335 c
248.2435 -170.9633 249.6081 -164.4413 250.2666 -157.7468 c
250.5399 -154.8986 250.6862 -152.0247 250.7016 -149.1312 c
250.7181 -146.0229 250.5839 -142.9137 250.2984 -139.8109 c
247.0258 -104.0517 223.6627 -74.0902 191.5384 -61.2645 C
S
0.8433 G
189.7925 -235.6391 m
216.3474 -226.047 237.2254 -204.3566 245.8962 -177.0983 c
247.8924 -170.8592 249.2485 -164.3694 249.9026 -157.7077 c
250.1742 -154.8736 250.3195 -152.0138 250.3347 -149.1343 c
250.3509 -146.0408 250.2173 -142.9469 249.9333 -139.8599 c
246.6775 -104.2771 223.4503 -74.4586 191.5029 -61.6644 C
S
0.8469 G
189.7814 -235.2656 m
216.1864 -225.6831 236.9394 -204.0881 245.5575 -176.9631 c
247.5413 -170.755 248.8889 -164.2975 249.5386 -157.6686 c
249.8085 -154.8486 249.9528 -152.0029 249.9677 -149.1374 c
249.9837 -146.0587 249.8507 -142.9801 249.5683 -139.9089 c
246.3291 -104.5025 223.238 -74.827 191.4675 -62.0642 C
S
0.8506 G
189.7702 -234.8919 m
216.0254 -225.319 236.6532 -203.8194 245.2187 -176.8279 c
247.1901 -170.6509 248.5291 -164.2256 249.1745 -157.6295 c
249.4426 -154.8236 249.5859 -151.992 249.6007 -149.1405 c
249.6164 -146.0766 249.484 -143.0133 249.2031 -139.9579 c
245.9807 -104.728 223.0256 -75.1955 191.432 -62.4642 C
S
0.8543 G
189.7591 -234.5184 m
215.8644 -224.9551 236.3672 -203.5509 244.88 -176.6927 c
246.839 -170.5467 248.1695 -164.1537 248.8105 -157.5904 c
249.0769 -154.7986 249.2192 -151.9811 249.2337 -149.1436 c
249.2492 -146.0945 249.1174 -143.0466 248.838 -140.0069 c
245.6323 -104.9534 222.8132 -75.5639 191.3966 -62.8641 C
S
0.8579 G
189.7479 -234.1448 m
215.7035 -224.5912 236.0811 -203.2823 244.5414 -176.5575 c
246.4879 -170.4426 247.8099 -164.0818 248.4465 -157.5513 c
248.7112 -154.7736 248.8525 -151.9701 248.8668 -149.1467 c
248.882 -146.1124 248.7508 -143.0798 248.4729 -140.0559 c
245.284 -105.1788 222.6009 -75.9323 191.3612 -63.2639 C
S
0.8616 G
189.7368 -233.7713 m
215.5425 -224.2272 235.795 -203.0138 244.2027 -176.4223 c
246.1368 -170.3385 247.4502 -164.0099 248.0825 -157.5123 c
248.3455 -154.7486 248.4858 -151.9592 248.4998 -149.1498 c
248.5148 -146.1303 248.3842 -143.113 248.1078 -140.1049 c
244.9356 -105.4042 222.3886 -76.3007 191.3257 -63.6638 C
S
0.8653 G
189.7256 -233.3977 m
215.3815 -223.8633 235.5089 -202.7452 243.864 -176.2871 c
245.7857 -170.2343 247.0906 -163.938 247.7185 -157.4732 c
247.9797 -154.7236 248.1191 -151.9483 248.1329 -149.153 c
248.1476 -146.1482 248.0175 -143.1462 247.7427 -140.1539 c
244.5873 -105.6296 222.1762 -76.6691 191.2903 -64.0636 C
S
0.8689 G
189.7144 -233.0241 m
215.2205 -223.4992 235.2228 -202.4766 243.5252 -176.1519 c
245.4344 -170.1302 246.7308 -163.8661 247.3544 -157.4341 c
247.6139 -154.6986 247.7523 -151.9374 247.7658 -149.1561 c
247.7803 -146.1661 247.6508 -143.1794 247.3776 -140.2029 c
244.2389 -105.8551 221.9638 -77.0376 191.2548 -64.4636 C
S
0.8726 G
189.7033 -232.6505 m
215.0596 -223.1353 234.9367 -202.208 243.1866 -176.0167 c
245.0833 -170.026 246.3712 -163.7942 246.9904 -157.395 c
247.2482 -154.6736 247.3856 -151.9265 247.3989 -149.1592 c
247.4131 -146.184 247.2842 -143.2126 247.0125 -140.2519 c
243.8905 -106.0805 221.7514 -77.406 191.2194 -64.8635 C
S
0.8762 G
189.6921 -232.277 m
214.8986 -222.7714 234.6506 -201.9395 242.8479 -175.8815 c
244.7322 -169.9219 246.0116 -163.7223 246.6264 -157.3559 c
246.8825 -154.6486 247.0189 -151.9155 247.0319 -149.1623 c
247.0459 -146.2019 246.9176 -143.2458 246.6474 -140.3009 c
243.5422 -106.3059 221.5391 -77.7745 191.1839 -65.2633 C
S
U
u
0.5128 G
185.1802 -214.9529 m
204.4491 -206.6923 219.3568 -190.1768 225.4627 -169.8468 c
226.8453 -165.2442 227.7766 -160.4467 228.2056 -155.5058 c
228.3845 -153.4442 228.4759 -151.3576 228.4761 -149.25 c
228.4764 -146.9031 228.3645 -144.5828 228.1454 -142.2941 c
225.607 -115.784 208.6761 -93.59 185.1225 -83.5291 C
S
0.524 G
185.3556 -215.341 m
204.7395 -207.0375 219.7383 -190.4263 225.8842 -169.9755 c
227.2764 -165.3438 228.2146 -160.5165 228.6472 -155.5453 c
228.8277 -153.4694 228.9201 -151.3685 228.9206 -149.2465 c
228.9211 -146.8871 228.8089 -144.5538 228.5889 -142.2517 c
226.0406 -115.5861 209.0171 -93.2555 185.3354 -83.1227 C
S
0.5353 G
185.5309 -215.7289 m
205.0297 -207.3824 220.1196 -190.6758 226.3054 -170.1041 c
227.7075 -165.4435 228.6524 -160.5863 229.0887 -155.5848 c
229.2708 -153.4945 229.3641 -151.3793 229.3648 -149.243 c
229.3656 -146.871 229.2532 -144.5247 229.0322 -142.2092 c
226.474 -115.3884 209.3581 -92.9213 185.5482 -82.7164 C
S
0.5465 G
185.7063 -216.1169 m
205.32 -207.7276 220.5011 -190.9253 226.7269 -170.2328 c
228.1386 -165.5431 229.0903 -160.6561 229.5304 -155.6243 c
229.714 -153.5197 229.8082 -151.3902 229.8092 -149.2395 c
229.8103 -146.855 229.6976 -144.4957 229.4758 -142.1668 c
226.9076 -115.1905 209.6991 -92.5868 185.761 -82.31 C
S
0.5578 G
185.8817 -216.5049 m
205.6103 -208.0725 220.8824 -191.1748 227.1481 -170.3615 c
228.5696 -165.6427 229.5281 -160.7259 229.9718 -155.6638 c
230.1571 -153.5449 230.2522 -151.401 230.2534 -149.236 c
230.2548 -146.8389 230.1418 -144.4667 229.9191 -142.1244 c
227.341 -114.9927 210.04 -92.2525 185.9738 -81.9038 C
S
0.569 G
186.0571 -216.8929 m
205.9006 -208.4177 221.2639 -191.4243 227.5696 -170.4902 c
229.0008 -165.7424 229.9661 -160.7957 230.4135 -155.7034 c
230.6004 -153.5701 230.6964 -151.4118 230.6979 -149.2324 c
230.6994 -146.8229 230.5862 -144.4376 230.3627 -142.0819 c
227.7746 -114.7948 210.3811 -91.9181 186.1867 -81.4974 C
S
0.5803 G
186.2325 -217.2808 m
206.1908 -208.7626 221.6452 -191.6737 227.9908 -170.6188 c
229.4318 -165.842 230.4039 -160.8655 230.855 -155.7429 c
231.0434 -153.5953 231.1404 -151.4227 231.1421 -149.229 c
231.1439 -146.8069 231.0305 -144.4086 230.806 -142.0395 c
228.208 -114.597 210.722 -91.5838 186.3995 -81.0911 C
S
0.5915 G
186.4079 -217.6689 m
206.4812 -209.1078 222.0267 -191.9233 228.4123 -170.7475 c
229.863 -165.9417 230.8419 -160.9353 231.2966 -155.7824 c
231.4867 -153.6205 231.5845 -151.4335 231.5865 -149.2254 c
231.5886 -146.7908 231.4749 -144.3796 231.2496 -141.9971 c
228.6416 -114.3992 211.063 -91.2494 186.6123 -80.6847 C
S
0.6028 G
186.5833 -218.057 m
206.7715 -209.4529 222.4081 -192.1728 228.8337 -170.8762 c
230.2942 -166.0414 231.2798 -161.0051 231.7383 -155.8219 c
231.9299 -153.6457 232.0287 -151.4444 232.0309 -149.2219 c
232.0333 -146.7747 231.9193 -144.3506 231.6931 -141.9546 c
229.0752 -114.2013 211.4041 -90.9149 186.8252 -80.2783 C
S
0.614 G
186.7586 -218.4449 m
207.0617 -209.7979 222.7894 -192.4223 229.255 -171.0049 c
230.7252 -166.141 231.7176 -161.0748 232.1797 -155.8614 c
232.373 -153.6709 232.4727 -151.4552 232.4751 -149.2184 c
232.4778 -146.7587 232.3635 -144.3215 232.1364 -141.9122 c
229.5086 -114.0035 211.745 -90.5807 187.038 -79.8721 C
S
0.6253 G
186.9341 -218.833 m
207.3521 -210.143 223.1709 -192.6718 229.6764 -171.1336 c
231.1564 -166.2407 232.1556 -161.1446 232.6214 -155.9009 c
232.8162 -153.6961 232.9168 -151.466 232.9196 -149.2149 c
232.9225 -146.7427 232.8079 -144.2925 232.58 -141.8697 c
229.9422 -113.8056 212.0861 -90.2462 187.2508 -79.4657 C
S
0.6365 G
187.1094 -219.2209 m
207.6423 -210.488 223.5522 -192.9213 230.0977 -171.2623 c
231.5874 -166.3403 232.5933 -161.2144 233.0629 -155.9404 c
233.2593 -153.7213 233.3608 -151.4769 233.3638 -149.2114 c
233.367 -146.7266 233.2522 -144.2635 233.0233 -141.8273 c
230.3756 -113.6078 212.427 -89.9119 187.4636 -79.0594 C
S
0.6478 G
187.2848 -219.609 m
207.9326 -210.8331 223.9337 -193.1708 230.5191 -171.391 c
232.0186 -166.44 233.0313 -161.2843 233.5045 -155.9799 c
233.7025 -153.7465 233.805 -151.4877 233.8082 -149.2079 c
233.8116 -146.7106 233.6966 -144.2344 233.4669 -141.7849 c
230.8092 -113.41 212.768 -89.5775 187.6765 -78.653 C
S
0.659 G
187.4603 -219.9971 m
208.223 -211.1782 224.3152 -193.4204 230.9406 -171.5196 c
232.4498 -166.5396 233.4693 -161.354 233.9462 -156.0194 c
234.1458 -153.7716 234.2492 -151.4986 234.2526 -149.2044 c
234.2563 -146.6945 234.141 -144.2054 233.9104 -141.7424 c
231.2428 -113.2121 213.1091 -89.2431 187.8894 -78.2466 C
S
0.6703 G
187.6356 -220.385 m
208.5132 -211.5232 224.6965 -193.6698 231.3618 -171.6483 c
232.8808 -166.6392 233.9071 -161.4238 234.3877 -156.0589 c
234.5888 -153.7968 234.6931 -151.5094 234.6968 -149.2009 c
234.7008 -146.6785 234.5852 -144.1764 234.3538 -141.7 c
231.6762 -113.0143 213.45 -88.9088 188.1022 -77.8404 C
S
0.6815 G
187.811 -220.7731 m
208.8035 -211.8683 225.0779 -193.9194 231.7833 -171.777 c
233.312 -166.7389 234.345 -161.4936 234.8293 -156.0984 c
235.0321 -153.822 235.1373 -151.5203 235.1413 -149.1974 c
235.1455 -146.6624 235.0296 -144.1473 234.7973 -141.6576 c
232.1098 -112.8164 213.791 -88.5743 188.315 -77.4339 C
S
0.6928 G
187.9864 -221.161 m
209.0938 -212.2133 225.4592 -194.1688 232.2046 -171.9057 c
233.743 -166.8385 234.7828 -161.5634 235.2708 -156.1379 c
235.4752 -153.8472 235.5813 -151.5311 235.5855 -149.1939 c
235.59 -146.6464 235.4739 -144.1183 235.2406 -141.6152 c
232.5432 -112.6186 214.1319 -88.24 188.5278 -77.0277 C
S
0.7041 G
188.1618 -221.5491 m
209.3841 -212.5584 225.8407 -194.4184 232.626 -172.0344 c
234.1742 -166.9382 235.2208 -161.6332 235.7124 -156.1775 c
235.9184 -153.8724 236.0255 -151.5419 236.0299 -149.1904 c
236.0347 -146.6303 235.9183 -144.0893 235.6842 -141.5727 c
232.9768 -112.4208 214.473 -87.9056 188.7407 -76.6213 C
S
0.7153 G
188.3372 -221.937 m
209.6743 -212.9034 226.222 -194.6678 233.0473 -172.163 c
234.6052 -167.0378 235.6586 -161.703 236.1539 -156.2169 c
236.3615 -153.8976 236.4694 -151.5528 236.4741 -149.1869 c
236.4792 -146.6143 236.3625 -144.0603 236.1275 -141.5303 c
233.4102 -112.223 214.8139 -87.5713 188.9535 -76.2151 C
S
0.7266 G
188.5126 -222.325 m
209.9647 -213.2485 226.6035 -194.9174 233.4687 -172.2917 c
235.0364 -167.1375 236.0965 -161.7728 236.5956 -156.2565 c
236.8047 -153.9228 236.9136 -151.5636 236.9185 -149.1834 c
236.9238 -146.5982 236.8069 -144.0312 236.5711 -141.4878 c
233.8438 -112.0251 215.1549 -87.2369 189.1663 -75.8086 C
S
0.7378 G
188.688 -222.7131 m
210.255 -213.5937 226.985 -195.1669 233.8901 -172.4204 c
235.4675 -167.2372 236.5345 -161.8426 237.0372 -156.296 c
237.2479 -153.948 237.3578 -151.5745 237.363 -149.1799 c
237.3685 -146.5822 237.2514 -144.0022 237.0146 -141.4454 c
234.2774 -111.8273 215.496 -86.9025 189.3792 -75.4022 C
S
0.749 G
188.8633 -223.101 m
210.5452 -213.9386 227.3663 -195.4163 234.3114 -172.5491 c
235.8985 -167.3368 236.9723 -161.9124 237.4787 -156.3355 c
237.691 -153.9732 237.8018 -151.5853 237.8072 -149.1764 c
237.813 -146.5662 237.6956 -143.9731 237.458 -141.403 c
234.7109 -111.6295 215.8369 -86.5682 189.592 -74.996 C
S
0.7603 G
189.0388 -223.4891 m
210.8356 -214.2838 227.7478 -195.6659 234.7328 -172.6778 c
236.3297 -167.4364 237.4102 -161.9822 237.9203 -156.375 c
238.1343 -153.9984 238.2459 -151.5961 238.2516 -149.1728 c
238.2577 -146.5501 238.14 -143.9441 237.9015 -141.3605 c
235.1444 -111.4316 216.178 -86.2337 189.8049 -74.5896 C
S
0.7716 G
189.2141 -223.877 m
211.1258 -214.6287 228.1291 -195.9154 235.1541 -172.8064 c
236.7607 -167.5361 237.848 -162.052 238.3618 -156.4145 c
238.5773 -154.0235 238.6899 -151.607 238.6958 -149.1694 c
238.7022 -146.5341 238.5842 -143.9151 238.3449 -141.3181 c
235.5778 -111.2338 216.5189 -85.8994 190.0176 -74.1833 C
S
0.7828 G
189.3895 -224.2651 m
211.4161 -214.9739 228.5105 -196.1649 235.5756 -172.9351 c
237.1919 -167.6357 238.286 -162.1218 238.8035 -156.454 c
239.0206 -154.0487 239.1341 -151.6178 239.1403 -149.1658 c
239.1469 -146.518 239.0287 -143.8861 238.7884 -141.2756 c
236.0114 -111.0359 216.8599 -85.565 190.2305 -73.7769 C
S
U
u
0.7941 G
189.5649 -224.6532 m
211.7065 -215.319 228.892 -196.4144 235.997 -173.0638 c
237.6231 -167.7354 238.7239 -162.1916 239.2451 -156.4935 c
239.4638 -154.0739 239.5782 -151.6287 239.5847 -149.1623 c
239.5915 -146.502 239.4731 -143.857 239.2319 -141.2332 c
236.445 -110.8381 217.201 -85.2306 190.4434 -73.3705 C
S
u
0.7978 G
189.57 -224.9704 m
211.8391 -215.6291 229.1314 -196.6444 236.2819 -173.1812 c
237.9188 -167.8265 239.0271 -162.2554 239.5521 -156.5295 c
239.7724 -154.098 239.8877 -151.6407 239.8944 -149.1625 c
239.9016 -146.4896 239.7827 -143.8317 239.5404 -141.1946 c
236.7403 -110.6496 217.3815 -84.9205 190.4742 -73.0333 C
S
0.8016 G
189.575 -225.285 m
211.9706 -215.9367 229.3689 -196.8725 236.5644 -173.2976 c
238.212 -167.9169 239.3276 -162.3187 239.8566 -156.5653 c
240.0784 -154.1218 240.1947 -151.6527 240.2016 -149.1626 c
240.2091 -146.4774 240.0898 -143.8067 239.8463 -141.1562 c
237.0331 -110.4628 217.5605 -84.613 190.5048 -72.6989 C
S
0.8053 G
189.5801 -225.5996 m
212.1021 -216.2443 229.6064 -197.1006 236.8471 -173.414 c
238.5053 -168.0073 239.6283 -162.3821 240.1611 -156.601 c
240.3845 -154.1457 240.5017 -151.6647 240.5089 -149.1628 c
240.5167 -146.4651 240.397 -143.7816 240.1523 -141.1179 c
237.326 -110.2759 217.7396 -84.3054 190.5354 -72.3644 C
S
0.809 G
189.5851 -225.9142 m
212.2337 -216.5519 229.8438 -197.3287 237.1296 -173.5304 c
238.7985 -168.0976 239.9289 -162.4453 240.4656 -156.6367 c
240.6905 -154.1696 240.8086 -151.6767 240.8161 -149.1629 c
240.8242 -146.4529 240.7041 -143.7565 240.4581 -141.0796 c
237.6188 -110.089 217.9186 -83.9979 190.566 -72.03 C
S
0.8128 G
189.5901 -226.2287 m
212.3652 -216.8594 230.0812 -197.5567 237.4122 -173.6468 c
239.0917 -168.1879 240.2295 -162.5086 240.77 -156.6724 c
240.9965 -154.1934 241.1155 -151.6887 241.1233 -149.163 c
241.1317 -146.4407 241.0112 -143.7314 240.764 -141.0413 c
237.9116 -109.9022 218.0976 -83.6903 190.5966 -71.6957 C
S
0.8165 G
189.5952 -226.5434 m
212.4967 -217.167 230.3187 -197.7849 237.6948 -173.7632 c
239.385 -168.2783 240.5302 -162.5719 241.0746 -156.7082 c
241.3026 -154.2173 241.4225 -151.7006 241.4306 -149.1632 c
241.4393 -146.4284 241.3184 -143.7064 241.07 -141.0029 c
238.2045 -109.7153 218.2766 -83.3827 190.6272 -71.3611 C
S
0.8202 G
189.6002 -226.858 m
212.6282 -217.4746 230.5562 -198.013 237.9773 -173.8796 c
239.6782 -168.3687 240.8307 -162.6352 241.3791 -156.7439 c
241.6086 -154.2411 241.7294 -151.7126 241.7378 -149.1633 c
241.7467 -146.4162 241.6254 -143.6813 241.3759 -140.9646 c
238.4973 -109.5284 218.4556 -83.0752 190.6578 -71.0268 C
S
0.824 G
189.6052 -227.1725 m
212.7597 -217.7821 230.7936 -198.241 238.2599 -173.996 c
239.9714 -168.459 241.1313 -162.6985 241.6835 -156.7796 c
241.9146 -154.2649 242.0363 -151.7246 242.0449 -149.1634 c
242.0542 -146.404 241.9325 -143.6562 241.6818 -140.9263 c
238.7901 -109.3416 218.6346 -82.7677 190.6884 -70.6924 C
S
0.8277 G
189.6103 -227.4872 m
212.8913 -218.0898 231.0311 -198.4692 238.5425 -174.1124 c
240.2647 -168.5494 241.432 -162.7619 241.9881 -156.8153 c
242.2207 -154.2888 242.3433 -151.7366 242.3522 -149.1636 c
242.3618 -146.3917 242.2397 -143.6311 241.9878 -140.888 c
239.083 -109.1547 218.8137 -82.4601 190.719 -70.3579 C
S
0.8314 G
189.6153 -227.8018 m
213.0228 -218.3973 231.2685 -198.6972 238.8251 -174.2288 c
240.5579 -168.6398 241.7326 -162.8252 242.2925 -156.8511 c
242.5267 -154.3127 242.6502 -151.7485 242.6595 -149.1637 c
242.6693 -146.3795 242.5468 -143.606 242.2937 -140.8496 c
239.3758 -108.9678 218.9927 -82.1526 190.7496 -70.0235 C
S
0.8352 G
189.6203 -228.1163 m
213.1543 -218.7049 231.506 -198.9253 239.1076 -174.3452 c
240.8511 -168.7301 242.0331 -162.8884 242.597 -156.8868 c
242.8327 -154.3365 242.9571 -151.7605 242.9666 -149.1638 c
242.9768 -146.3672 242.8539 -143.581 242.5996 -140.8113 c
239.6686 -108.781 219.1717 -81.8451 190.7802 -69.6891 C
S
0.8389 G
189.6253 -228.431 m
213.2858 -219.0125 231.7435 -199.1534 239.3902 -174.4616 c
241.1444 -168.8205 242.3338 -162.9518 242.9015 -156.9225 c
243.1388 -154.3604 243.2642 -151.7725 243.2739 -149.164 c
243.2844 -146.355 243.1611 -143.5559 242.9056 -140.773 c
239.9615 -108.5941 219.3508 -81.5375 190.8108 -69.3546 C
S
0.8426 G
189.6304 -228.7455 m
213.4173 -219.3201 231.9809 -199.3815 239.6727 -174.578 c
241.4376 -168.9108 242.6344 -163.015 243.206 -156.9583 c
243.4448 -154.3842 243.5711 -151.7845 243.5811 -149.1641 c
243.5919 -146.3427 243.4682 -143.5308 243.2115 -140.7347 c
240.2543 -108.4072 219.5298 -81.23 190.8414 -69.0202 C
S
0.8464 G
189.6354 -229.0601 m
213.5488 -219.6276 232.2183 -199.6095 239.9553 -174.6944 c
241.7308 -169.0012 242.935 -163.0783 243.5104 -156.994 c
243.7508 -154.4081 243.878 -151.7964 243.8883 -149.1643 c
243.8993 -146.3305 243.7752 -143.5057 243.5173 -140.6963 c
240.5471 -108.2203 219.7088 -80.9225 190.872 -68.6858 C
S
0.8501 G
189.6404 -229.3748 m
213.6804 -219.9353 232.4558 -199.8377 240.2379 -174.8108 c
242.0241 -169.0916 243.2357 -163.1417 243.815 -157.0297 c
244.0569 -154.432 244.185 -151.8084 244.1956 -149.1644 c
244.2069 -146.3182 244.0824 -143.4806 243.8233 -140.658 c
240.8401 -108.0334 219.8878 -80.6149 190.9026 -68.3513 C
S
0.8538 G
189.6455 -229.6893 m
213.8119 -220.2428 232.6933 -200.0657 240.5205 -174.9272 c
242.3173 -169.1819 243.5362 -163.205 244.1194 -157.0654 c
244.3629 -154.4558 244.4919 -151.8204 244.5028 -149.1645 c
244.5144 -146.306 244.3895 -143.4556 244.1292 -140.6197 c
241.1329 -107.8466 220.0668 -80.3074 190.9332 -68.0169 C
S
0.8576 G
189.6505 -230.0039 m
213.9434 -220.5503 232.9307 -200.2938 240.803 -175.0436 c
242.6105 -169.2723 243.8368 -163.2683 244.4239 -157.1012 c
244.6688 -154.4797 244.7988 -151.8324 244.81 -149.1647 c
244.8219 -146.2938 244.6966 -143.4305 244.4351 -140.5814 c
241.4257 -107.6597 220.2458 -79.9999 190.9638 -67.6825 C
S
0.8613 G
189.6555 -230.3186 m
214.0749 -220.858 233.1682 -200.522 241.0856 -175.16 c
242.9038 -169.3627 244.1375 -163.3316 244.7284 -157.1369 c
244.975 -154.5035 245.1058 -151.8444 245.1172 -149.1648 c
245.1295 -146.2815 245.0038 -143.4054 244.7411 -140.543 c
241.7186 -107.4728 220.4249 -79.6923 190.9944 -67.348 C
S
0.865 G
189.6606 -230.6331 m
214.2064 -221.1655 233.4056 -200.75 241.3682 -175.2764 c
243.197 -169.453 244.4381 -163.3949 245.0329 -157.1726 c
245.281 -154.5274 245.4127 -151.8563 245.4244 -149.1649 c
245.437 -146.2693 245.3108 -143.3804 245.047 -140.5047 c
242.0114 -107.286 220.6039 -79.3847 191.025 -67.0136 C
S
0.8688 G
189.6656 -230.9477 m
214.3379 -221.4731 233.6431 -200.9781 241.6507 -175.3928 c
243.4902 -169.5433 244.7386 -163.4581 245.3373 -157.2084 c
245.587 -154.5512 245.7196 -151.8683 245.7316 -149.1651 c
245.7445 -146.2571 245.6179 -143.3553 245.3529 -140.4664 c
242.3042 -107.0991 220.7829 -79.0772 191.0556 -66.6792 C
S
0.8725 G
189.6706 -231.2624 m
214.4695 -221.7807 233.8806 -201.2062 241.9333 -175.5092 c
243.7835 -169.6337 245.0393 -163.5215 245.6419 -157.2441 c
245.893 -154.5751 246.0266 -151.8803 246.0389 -149.1652 c
246.052 -146.2448 245.9251 -143.3302 245.6589 -140.4281 c
242.5971 -106.9122 220.962 -78.7696 191.0862 -66.3447 C
S
0.8762 G
189.6757 -231.5769 m
214.601 -222.0883 234.118 -201.4343 242.2159 -175.6256 c
244.0767 -169.7241 245.3399 -163.5848 245.9463 -157.2798 c
246.1991 -154.5989 246.3336 -151.8923 246.3461 -149.1654 c
246.3595 -146.2326 246.2322 -143.3051 245.9648 -140.3898 c
242.8899 -106.7254 221.141 -78.4621 191.1168 -66.0103 C
S
U
0.88 G
189.6807 -231.8941 m
214.7336 -222.3984 234.3574 -201.6643 242.5008 -175.7429 c
244.3724 -169.8152 245.643 -163.6486 246.2534 -157.3158 c
246.5076 -154.623 246.643 -151.9044 246.6559 -149.1655 c
246.6696 -146.2202 246.5419 -143.2798 246.2732 -140.3511 c
243.1851 -106.537 221.3215 -78.152 191.1476 -65.6731 C
S
U
Q
0 A
0 To
1 0 0 1 158.75 -159.5 0 Tp
TP
0 Tr
0 O
0 g
0 i 0 J 0 j 1 w 4 M []0 d
0 D
/_Times-Roman 9 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
9 0 Tl
0 Tc
0 Tw
(0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 216 -159.5 0 Tp
TP
0 Tr
(2) Tx 
(\r) TX 
TO
0 To
1 0 0 1 289.5 -158.5 0 Tp
TP
0 Tr
(4) Tx 
(\r) TX 
TO
0 To
1 0 0 1 159.75 -92.25 0 Tp
TP
0 Tr
(2) Tx 
(\r) TX 
TO
0 To
1 0 0 1 150.125 -17.125 0 Tp
TP
0 Tr
(4) Tx 
(\r) TX 
TO
0 To
1 0 0 1 150.25 3.5 0 Tp
TP
0 Tr
/_Times-Italic 9 Tf
(y) Tx 
(\r) TX 
TO
0 To
1 0 0 1 313.6875 -151.5625 0 Tp
TP
0 Tr
(x ) Tx 
(\r) TX 
TO
u
0 R
0.95 G
158.25 -91.875 m
S
U
0 G
0.5 w
157 4.6651 m
157 -301.7964 l
S
1.3667 -149.5 m
311.8325 -149.5 l
S
u
1 w
157 -215.7561 m
193.5917 -215.7561 223.2561 -186.0917 223.2561 -149.5 c
223.2561 -112.9083 193.5917 -83.2438 157 -83.2438 c
120.4083 -83.2438 90.7438 -112.9083 90.7438 -149.5 c
90.7438 -186.0917 120.4083 -215.7561 157 -215.7561 c
s
U
u
157 -280.1246 m
229.1409 -280.1246 287.6246 -221.6409 287.6246 -149.5 c
287.6246 -77.3591 229.1409 -18.8753 157 -18.8753 c
84.8591 -18.8753 26.3753 -77.3591 26.3753 -149.5 c
26.3753 -221.6409 84.8591 -280.1246 157 -280.1246 c
s
U
181.0084 -211.2723 m
S
u
180.4918 -87.2316 m
190.8126 -87.2316 199.1794 -72.4417 199.1794 -54.1979 c
199.1794 -35.9542 190.8126 -21.1643 180.4918 -21.1643 c
170.1711 -21.1643 161.8042 -35.9542 161.8042 -54.1979 c
161.8042 -72.4417 170.1711 -87.2316 180.4918 -87.2316 c
s
180.4918 -54.1979 m
S
U
245.0604 -246.1368 m
199.045 -246.1368 l
163.4069 -257.8827 l
210.0571 -257.8827 l
S
u
199.1613 -246.2698 m
199.1734 -245.7832 199.1794 -245.2939 199.1794 -244.802 c
199.1794 -226.5583 190.8126 -211.7684 180.4918 -211.7684 c
170.1711 -211.7684 161.8042 -226.5583 161.8042 -244.802 c
161.8042 -249.4925 162.3572 -253.9546 163.3544 -257.9958 c
S
180.4918 -244.802 m
S
U
0 O
0 g
198.25 -249.75 m
F
199.25 -246 m
163.375 -257.875 l
F
0 R
0 G
244.8125 -246.1875 m
209.5625 -257.875 l
S
u
0 O
0 g
157.0285 -21.091 m
158.2711 -21.091 159.2785 -20.0836 159.2785 -18.841 c
159.2785 -17.5984 158.2711 -16.591 157.0285 -16.591 c
155.7859 -16.591 154.7785 -17.5984 154.7785 -18.841 c
154.7785 -20.0836 155.7859 -21.091 157.0285 -21.091 c
f
157.0285 -18.841 m
F
U
u
157.0285 -85.5285 m
158.2711 -85.5285 159.2785 -84.5211 159.2785 -83.2785 c
159.2785 -82.0359 158.2711 -81.0285 157.0285 -81.0285 c
155.7859 -81.0285 154.7785 -82.0359 154.7785 -83.2785 c
154.7785 -84.5211 155.7859 -85.5285 157.0285 -85.5285 c
f
157.0285 -83.2785 m
F
U
u
156.966 -151.716 m
158.2086 -151.716 159.216 -150.7086 159.216 -149.466 c
159.216 -148.2234 158.2086 -147.216 156.966 -147.216 c
155.7234 -147.216 154.716 -148.2234 154.716 -149.466 c
154.716 -150.7086 155.7234 -151.716 156.966 -151.716 c
f
156.966 -149.466 m
F
U
0 To
1 0 0 1 190 -159.5 0 Tp
TP
-2.25 0 Td
0 Tr
/_Times-Roman 9 Tf
1 Ta
(1) Tx 
(\r) TX 
TO
u
0 R
0 G
0.5 w
190 -147 m
190 -152 L
S
U
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 0 2374 a(Figure)f(7.6.2.)25 b(Example)8 b(of)g(Monte)f(Carlo)i
(integration)e(\(see)h(text\).)13 b(The)8 b(region)g(of)g(interest)g(is)h(a)f
(piece)g(of)g(a)g(torus,)0 2412 y(bounded)d(by)i(the)h(intersection)f(of)g
(two)h(planes.)j(The)c(limits)i(of)e(integration)g(of)h(the)f(region)g
(cannot)f(easily)h(be)h(written)0 2449 y(in)k(analytically)e(closed)h(form,)h
(so)f(Monte)g(Carlo)g(is)h(a)f(useful)g(technique.)p eop
%%Page: 307 4
bop 351 50 a Fg(7.6)10 b(Simple)h(Monte)f(Carlo)h(Integration)387
b Fh(307)p 0 68 1395 2 v 0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore

@endspecial 66 180 a Ft(#include)15 b("nrutil.h")66 218 y(...)66
255 y(n=...)585 b Fn(Set)8 b(to)g(the)g(numb)q(er)h(of)f(sample)h(p)q(oints)f
(desired.)66 293 y Ft(den=...)549 b Fn(Set)11 b(to)h(the)f(constant)g(value)h
(of)g(the)f(densit)o(y)m(.)66 330 y Ft(sw=swx=swy=)o(swz)o(=0.)o(0;)336
b Fn(Zero)11 b(the)h(va)o(rious)g(sums)f(to)g(b)q(e)g(accumulated.)66
367 y Ft(varw=varx=v)o(ary)o(=va)o(rz=)o(0.0)o(;)66 405 y(vol=3.0*7.0)o(*2.)o
(0;)389 b Fn(V)o(olume)12 b(of)g(the)h(sampled)f(region.)66
442 y Ft(for\(j=1;j<=)o(n;j)o(++\))i({)133 479 y(x=1.0+3.0*)o(ran)o(2\()o
(&id)o(um\))o(;)217 b Fn(Pick)18 b(a)f(p)q(oint)g(randomly)h(in)g(the)f
(sampled)g(re-)801 517 y(gion.)-740 b Ft(y=\(-3.0\)+7)o(.0*)o(ra)o(n2\()o
(&id)o(um\))o(;)133 554 y(z=\(-1.0\)+2)o(.0*)o(ra)o(n2\()o(&id)o(um\))o(;)133
591 y(if)17 b(\(z*z+SQR\(s)o(qr)o(t\(x)o(*x+)o(y*y)o(\)-3)o(.0)o(\))e(<)i
(1.0\))f({)100 b Fn(Is)12 b(it)h(in)g(the)f(to)o(rus?)199 629
y Ft(sw)17 b(+=)g(den;)364 b Fn(If)12 b(so,)f(add)i(to)f(the)f(va)o(rious)i
(cumulants.)199 666 y Ft(swx)k(+=)g(x*den;)199 703 y(swy)g(+=)g(y*den;)199
741 y(swz)g(+=)g(z*den;)199 778 y(varw)f(+=)h(SQR\(den\);)199
816 y(varx)f(+=)h(SQR\(x*den\);)199 853 y(vary)f(+=)h(SQR\(y*den\);)199
890 y(varz)f(+=)h(SQR\(z*den\);)133 928 y(})66 965 y(})66 1002
y(w=vol*sw/n;)477 b Fn(The)13 b(values)f(of)g(the)g(integrals)f(\(7.6.5\),)66
1040 y Ft(x=vol*swx/n)o(;)66 1077 y(y=vol*swy/n)o(;)66 1114
y(z=vol*swz/n)o(;)66 1152 y(dw=vol*sqrt)o(\(\(v)o(arw)o(/n-)o(SQR)o(\(s)o
(w/n)o(\)\)/)o(n\);)71 b Fn(and)13 b(their)f(co)o(rresp)q(onding)f(erro)o(r)g
(estimates.)66 1189 y Ft(dx=vol*sqrt)o(\(\(v)o(arx)o(/n-)o(SQR)o(\(s)o(wx/)o
(n\)\))o(/n\))o(;)66 1227 y(dy=vol*sqrt)o(\(\(v)o(ary)o(/n-)o(SQR)o(\(s)o
(wy/)o(n\)\))o(/n\))o(;)66 1264 y(dz=vol*sqrt)o(\(\(v)o(arz)o(/n-)o(SQR)o
(\(s)o(wz/)o(n\)\))o(/n\))o(;)83 1371 y Fh(A)21 b(change)g(of)f(variable)g
(can)h(often)f(be)h(extremely)f(worthwhile)f(in)h(Monte)g(Carlo)0
1421 y(integration.)32 b(Suppose,)18 b(for)e(example,)j(that)d(we)h(want)f
(to)g(evaluate)h(the)g(same)g(integrals,)0 1471 y(but)f(for)h(a)g
(piece-of-torus)f(whose)h(density)f(is)h(a)g(strong)f(function)f(of)i
Fs(z)r Fh(,)i(in)e(fact)g(varying)0 1521 y(according)k(to)564
1626 y Fs(\032)p Fq(\()p Fs(x;)7 b(y)q(;)g(z)r Fq(\))k(=)h
Fs(e)795 1609 y Fr(5)p Fp(z)1279 1626 y Fq(\()p Fh(7.6.6)q
Fq(\))0 1732 y Fh(One)k(way)g(to)f(do)h(this)f(is)h(to)f(put)g(the)g
(statement)66 1830 y Ft(den=exp\(5.0)o(*z\))o(;)0 1938 y Fh(inside)e(the)g
Fu(if)22 b(\(...\))13 b Fh(block,)h(just)f(before)g Fu(den)h
Fh(is)f(\256rst)g(used.)26 b(This)14 b(will)e(work,)i(but)f(it)g(is)0
1988 y(a)g(poor)f(way)h(to)g(proceed.)23 b(Since)13 b(\(7.6.6\))g(falls)f(so)
h(rapidly)f(to)g(zero)h(as)h Fs(z)h Fh(decreases)g(\(down)0
2037 y(to)f(its)g(lower)h(limit)e Fv(\000)p Fq(1)p Fh(\),)j(most)f(sampled)g
(points)e(contribute)h(almost)g(nothing)f(to)h(the)h(sum)0
2087 y(of)g(the)h(weight)f(or)h(moments.)32 b(These)17 b(points)d(are)j(ef)o
(fectively)e(wasted,)j(almost)e(as)h(badly)0 2137 y(as)d(those)f(that)f(fall)
h(outside)f(of)h(the)g(region)g Fs(W)6 b Fh(.)24 b(A)13 b(change)h(of)f
(variable,)h(exactly)f(as)h(in)f(the)0 2187 y(transformation)g(methods)g(of)h
Fv(x)p Fh(7.2,)i(solves)e(this)f(problem.)25 b(Let)242 2310
y Fs(ds)11 b Fq(=)h Fs(e)357 2293 y Fr(5)p Fp(z)393 2310 y
Fs(dz)85 b Fh(so)10 b(that)82 b Fs(s)12 b Fq(=)791 2282 y(1)p
791 2301 21 2 v 791 2339 a(5)817 2310 y Fs(e)836 2293 y Fr(5)p
Fp(z)872 2310 y Fs(;)48 b(z)14 b Fq(=)1013 2282 y(1)p 1013
2301 V 1013 2339 a(5)1046 2310 y(ln\(5)p Fs(s)p Fq(\))126 b(\()p
Fh(7.6.7)q Fq(\))0 2427 y Fh(Then)15 b Fs(\032dz)i Fq(=)e Fs(ds)p
Fh(,)h(and)e(the)g(limits)f Fv(\000)p Fq(1)i Fs(<)g(z)j(<)d
Fq(1)f Fh(become)h Fs(:)p Fq(00135)f Fs(<)h(s)h(<)f Fq(29)p
Fs(:)p Fq(682)p Fh(.)25 b(The)0 2477 y(program)16 b(fragment)h(now)f(looks)g
(like)g(this)p eop
%%Page: 308 5
bop 0 50 a Fh(308)419 b Fg(Chapter)11 b(7.)48 b(Random)9 b(Numbers)p
0 68 1395 2 v 0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial
66 180 a Ft(#include)15 b("nrutil.h")66 218 y(...)66 255 y(n=...)585
b Fn(Set)8 b(to)g(the)g(numb)q(er)h(of)f(sample)h(p)q(oints)f(desired.)66
293 y Ft(sw=swx=swy=)o(swz)o(=0.)o(0;)66 330 y(varw=varx=v)o(ary)o(=va)o(rz=)
o(0.0)o(;)66 367 y(ss=0.2*\(exp)o(\(5.)o(0\)-)o(exp)o(\(-5)o(.0)o(\)\))195
b Fn(Interval)13 b(of)e Ft(s)h Fn(to)g(b)q(e)g(random)g(sampled.)66
405 y Ft(vol=3.0*7.0)o(*ss)424 b Fn(V)o(olume)13 b(in)g Ft(x,y,s)o
Fn(-space.)66 442 y Ft(for\(j=1;j<=)o(n;j)o(++\))h({)133 479
y(x=1.0+3.0*)o(ran)o(2\()o(&id)o(um\))o(;)133 517 y(y=\(-3.0\)+7)o(.0*)o(ra)o
(n2\()o(&id)o(um\))o(;)133 554 y(s=0.00135+)o(ss*)o(ra)o(n2\()o(&id)o(um\))o
(;)164 b Fn(Pick)14 b(a)f(p)q(oint)g(in)h Ft(s)p Fn(.)133 591
y Ft(z=0.2*log\()o(5.0)o(*s)o(\);)305 b Fn(Equation)14 b(\(7.6.7\).)133
629 y Ft(if)j(\(z*z+SQR\(s)o(qr)o(t\(x)o(*x+)o(y*y)o(\)-3)o(.0)o(\))e(<)i
(1.0\))f({)199 666 y(sw)h(+=)g(1.0;)364 b Fn(Densit)o(y)16
b(is)f(1,)g(since)f(abso)o(rb)q(ed)h(into)g(de\014nition)801
703 y(of)f Ft(s)o Fn(.)-672 b Ft(swx)17 b(+=)g(x;)199 741 y(swy)g(+=)g(y;)199
778 y(swz)g(+=)g(z;)199 816 y(varw)f(+=)h(1.0;)199 853 y(varx)f(+=)h(x*x;)199
890 y(vary)f(+=)h(y*y;)199 928 y(varz)f(+=)h(z*z;)133 965 y(})66
1002 y(})66 1040 y(w=vol*sw/n;)477 b Fn(The)13 b(values)f(of)g(the)g
(integrals)f(\(7.6.5\),)66 1077 y Ft(x=vol*swx/n)o(;)66 1114
y(y=vol*swy/n)o(;)66 1152 y(z=vol*swz/n)o(;)66 1189 y(dw=vol*sqrt)o(\(\(v)o
(arw)o(/n-)o(SQR)o(\(s)o(w/n)o(\)\)/)o(n\);)71 b Fn(and)13
b(their)f(co)o(rresp)q(onding)f(erro)o(r)g(estimates.)66 1227
y Ft(dx=vol*sqrt)o(\(\(v)o(arx)o(/n-)o(SQR)o(\(s)o(wx/)o(n\)\))o(/n\))o(;)66
1264 y(dy=vol*sqrt)o(\(\(v)o(ary)o(/n-)o(SQR)o(\(s)o(wy/)o(n\)\))o(/n\))o(;)
66 1301 y(dz=vol*sqrt)o(\(\(v)o(arz)o(/n-)o(SQR)o(\(s)o(wz/)o(n\)\))o(/n\))o
(;)83 1451 y Fh(If)f(you)g(think)g(for)g(a)h(minute,)f(you)h(will)e(realize)i
(that)f(equation)g(\(7.6.7\))g(was)i(useful)e(only)0 1501 y(because)f(the)e
(part)f(of)h(the)g(integrand)f(that)h(we)h(wanted)f(to)f(eliminate)h(\()p
Fs(e)1019 1486 y Fr(5)p Fp(z)1055 1501 y Fh(\))g(was)h(both)e(integrable)0
1551 y(analytically)m(,)j(and)h(had)g(an)g(integral)f(that)g(could)g(be)h
(analytically)e(inverted.)14 b(\(Compare)c Fv(x)q Fh(7.2.\))0
1601 y(In)i(general)h(these)g(properties)e(will)h(not)f(hold.)21
b(Question:)d(What)13 b(then?)21 b(Answer:)e(Pull)12 b(out)0
1651 y(of)f(the)h(integrand)f(the)g(\252best\272)i(factor)f(that)f
Fa(can)h Fh(be)g(integrated)f(and)h(inverted.)19 b(The)12 b(criterion)0
1700 y(for)h(\252best\272)h(is)g(to)f(try)g(to)g(reduce)h(the)f(remaining)g
(integrand)g(to)g(a)h(function)e(that)h(is)g(as)h(close)0 1750
y(as)20 b(possible)e(to)g(constant.)83 1800 y(The)11 b(limiting)d(case)j(is)f
(instructive:)j(If)d(you)g(manage)h(to)f(make)h(the)f(integrand)f
Fs(f)15 b Fa(exactly)0 1850 y Fh(constant,)c(and)g(if)f(the)h(region)f
Fs(V)f Fh(,)j(of)e(known)g(volume,)h Fa(exactly)h Fh(encloses)f(the)g
(desired)g(region)0 1900 y Fs(W)6 b Fh(,)k(then)f(the)g(average)h(of)f
Fs(f)14 b Fh(that)9 b(you)f(compute)h(will)f(be)i(exactly)f(its)f(constant)h
(value,)h(and)f(the)0 1949 y(error)k(estimate)g(in)f(equation)g(\(7.6.1\))h
(will)f(exactly)g(vanish.)23 b(Y)l(ou)12 b(will,)h(in)f(fact,)j(have)e(done)0
1999 y(the)d(integral)f(exactly)m(,)i(and)f(the)g(Monte)f(Carlo)h(numerical)g
(evaluations)f(are)i(super\257uous.)k(So,)0 2049 y(backing)10
b(of)o(f)g(from)f(the)h(extreme)h(limiting)d(case,)k Fa(to)e(the)g(extent)g
Fh(that)g(you)f(are)i(able)f(to)g(make)h Fs(f)0 2099 y Fh(approximately)c
(constant)h(by)g(change)h(of)f(variable,)h(and)f Fa(to)g(the)g(extent)h
Fh(that)f(you)f(can)i(sample)g(a)0 2149 y(region)f(only)f(slightly)f(lar)o
(ger)j(than)f Fs(W)e Fh(,)j(you)f(will)f(increase)j(the)e(accuracy)i(of)e
(the)h(Monte)f(Carlo)0 2199 y(integral.)15 b(This)10 b(technique)g(is)g
(generically)g(called)g Fa(r)n(eduction)g(of)g(variance)h Fh(in)f(the)g
(literature.)83 2248 y(The)17 b(fundamental)g(disadvantage)f(of)h(simple)f
(Monte)g(Carlo)g(integration)f(is)h(that)h(its)0 2298 y(accuracy)d(increases)
g(only)e(as)h(the)f(square)h(root)f(of)g Fs(N)5 b Fh(,)14 b(the)e(number)h
(of)f(sampled)h(points.)21 b(If)0 2348 y(your)14 b(accuracy)i(requirements)e
(are)h(modest,)h(or)e(if)g(your)f(computer)i(budget)e(is)h(lar)o(ge,)i(then)0
2398 y(the)f(technique)f(is)h(highly)e(recommended)j(as)g(one)f(of)f(great)h
(generality)m(.)29 b(In)14 b(the)h(next)g(two)0 2448 y(sections)10
b(we)h(will)e(see)i(that)e(there)i(are)g(techniques)e(available)i(for)e
(\252breaking)h(the)g(square)h(root)0 2497 y(of)16 b Fs(N)21
b Fh(barrier)r(\272)16 b(and)g(achieving,)h(at)g(least)f(in)g(some)g(cases,)k
(higher)15 b(accuracy)j(with)d(fewer)0 2547 y(function)j(evaluations.)p
eop
%%Page: 309 6
bop 262 50 a Fg(7.7)11 b(Quasi-)f(\(that)h(is,)g(Sub-\))g(Random)e(Sequences)
302 b Fh(309)p 0 68 1395 2 v 0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore

@endspecial 46 x Fd(CITED)13 b(REFERENCES)g(AND)f(FUR)o(THER)i(READING:)0
239 y(Hammersley)n(,)c(J.M.,)f(and)i(Handscomb,)g(D.C.)f(1964,)i
Fc(Monte)e(Carlo)h(Methods)g Fd(\(London:)i(Methuen\).)0 288
y(Shreider)n(,)h(Y)n(u.)d(A.)g(\(ed.\))h(1966,)h Fc(The)f(Monte)g(Carlo)f
(Method)i Fd(\(Oxford:)e(Pergamon\).)0 338 y(Sobol',)i(I.M.)d(1974,)i
Fc(The)f(Monte)h(Carlo)f(Method)h Fd(\(Chicago:)g(University)e(of)h(Chicago)h
(Press\).)0 388 y(Kalos,)g(M.H.,)e(and)i(Whitlock,)g(P)l(.A.)f(1986,)h
Fc(Monte)g(Carlo)f(Methods)h Fd(\(New)f(Y)m(ork:)g(Wiley\).)0
629 y Fb(7.7)17 b(Quasi-)g(\(that)g(is,)h(Sub-\))f(Random)h(Sequences)83
754 y Fh(W)m(e)k(have)g(just)e(seen)j(that)d(choosing)h Fs(N)26
b Fh(points)20 b(uniformly)g(randomly)g(in)h(an)h Fs(n)p Fh(-)0
804 y(dimensional)12 b(space)h(leads)g(to)f(an)h(error)g(term)f(in)g(Monte)g
(Carlo)g(integration)f(that)h(decreases)0 854 y(as)f Fq(1)p
Fs(=)87 818 y Fv(p)p 121 818 38 2 v 121 854 a Fs(N)5 b Fh(.)16
b(In)10 b(essence,)j(each)e(new)g(point)e(sampled)i(adds)f(linearly)g(to)g
(an)g(accumulated)i(sum)0 903 y(that)g(will)g(become)i(the)f(function)f
(average,)j(and)e(also)g(linearly)f(to)h(an)g(accumulated)h(sum)f(of)0
953 y(squares)g(that)f(will)f(become)j(the)f(variance)g(\(equation)e
(7.6.2\).)22 b(The)14 b(estimated)e(error)h(comes)0 1003 y(from)g(the)g
(square)h(root)e(of)h(this)f(variance,)j(hence)f(the)f(power)h
Fs(N)976 988 y Fl(\000)p Fr(1)p Fp(=)p Fr(2)1054 1003 y Fh(.)83
1053 y(Just)d(because)j(this)d(square)h(root)f(conver)o(gence)h(is)g
(familiar)f(does)h(not,)g(however)n(,)h(mean)0 1103 y(that)h(it)g(is)g
(inevitable.)27 b(A)15 b(simple)f(counterexample)h(is)f(to)g(choose)h(sample)
g(points)e(that)h(lie)0 1152 y(on)d(a)g(Cartesian)g(grid,)f(and)h(to)f
(sample)i(each)g(grid)e(point)f(exactly)i(once)h(\(in)e(whatever)h(order\).)0
1202 y(The)g(Monte)g(Carlo)f(method)g(thus)g(becomes)i(a)g(deterministic)d
(quadrature)i(scheme)h(\320)f(albeit)0 1252 y(a)g(simple)f(one)h(\320)f
(whose)g(fractional)g(error)g(decreases)i(at)f(least)f(as)h(fast)g(as)g
Fs(N)1145 1237 y Fl(\000)p Fr(1)1200 1252 y Fh(\(even)g(faster)0
1302 y(if)j(the)h(function)e(goes)i(to)f(zero)h(smoothly)e(at)i(the)g
(boundaries)f(of)g(the)h(sampled)g(region,)g(or)0 1352 y(is)j(periodic)g(in)g
(the)h(region\).)83 1402 y(The)12 b(trouble)f(with)f(a)i(grid)f(is)g(that)g
(one)h(has)g(to)f(decide)h Fa(in)e(advance)i Fh(how)f(\256ne)h(it)f(should)0
1451 y(be.)20 b(One)12 b(is)g(then)g(committed)f(to)g(completing)g(all)h(of)f
(its)g(sample)i(points.)19 b(W)n(ith)11 b(a)h(grid,)g(it)f(is)0
1501 y(not)g(convenient)g(to)h(\252sample)h Fa(until)p Fh(\272)e(some)h
(conver)o(gence)h(or)f(termination)f(criterion)f(is)i(met.)0
1551 y(One)h(might)e(ask)i(if)f(there)g(is)h(not)e(some)i(intermediate)f
(scheme,)j(some)f(way)e(to)g(pick)g(sample)0 1601 y(points)f(\252at)i
(random,\272)g(yet)f(spread)h(out)f(in)f(some)i(self-avoiding)e(way)m(,)j
(avoiding)c(the)j(chance)0 1651 y(clustering)h(that)g(occurs)h(with)e
(uniformly)g(random)i(points.)83 1700 y(A)8 b(similar)f(question)g(arises)h
(for)f(tasks)h(other)g(than)f(Monte)g(Carlo)g(integration.)13
b(W)m(e)8 b(might)0 1750 y(want)i(to)g(search)i(an)f Fs(n)p
Fh(-dimensional)e(space)j(for)e(a)h(point)e(where)i(some)g(\(locally)e
(computable\))0 1800 y(condition)k(holds.)29 b(Of)15 b(course,)j(for)c(the)h
(task)h(to)e(be)i(computationally)d(meaningful,)j(there)0 1850
y(had)f(better)g(be)h(continuity)m(,)e(so)i(that)e(the)h(desired)g(condition)
f(will)g(hold)g(in)g(some)i(\256nite)f Fs(n)p Fh(-)0 1900 y(dimensional)9
b(neighborhood.)k(W)m(e)d(may)h(not)e(know)g Fa(a)h(priori)f
Fh(how)h(lar)o(ge)g(that)f(neighborhood)0 1949 y(is,)h(however)n(.)15
b(W)m(e)10 b(want)g(to)f(\252sample)j Fa(until)p Fh(\272)c(the)i(desired)g
(point)e(is)i(found,)f(moving)g(smoothly)0 1999 y(to)14 b(\256ner)h(scales)h
(with)e(increasing)h(samples.)30 b(Is)15 b(there)g(any)g(way)g(to)f(do)g
(this)g(that)h(is)f(better)0 2049 y(than)j(uncorrelated,)i(random)e(samples?)
83 2099 y(The)g(answer)h(to)e(the)h(above)g(question)e(is)i(\252yes.\272)36
b(Sequences)18 b(of)f Fs(n)p Fh(-tuples)e(that)i(\256ll)0 2149
y Fs(n)p Fh(-space)e(more)e(uniformly)f(than)h(uncorrelated)g(random)h
(points)e(are)i(called)g Fa(quasi-random)0 2199 y(sequences)p
Fh(.)22 b(That)12 b(term)g(is)g(somewhat)g(of)g(a)h(misnomer)n(,)g(since)f
(there)g(is)g(nothing)e(\252random\272)0 2248 y(about)f(quasi-random)g
(sequences:)16 b(They)10 b(are)h(cleverly)e(crafted)h(to)g(be,)g(in)f(fact,)i
Fa(sub-)p Fh(random.)0 2298 y(The)i(sample)h(points)d(in)h(a)h(quasi-random)f
(sequence)i(are,)h(in)d(a)h(precise)g(sense,)i(\252maximally)0
2348 y(avoiding\272)j(of)g(each)i(other)n(.)83 2398 y(A)11
b(conceptually)e(simple)i(example)g(is)f Fa(Halton')-5 b(s)9
b(sequence)969 2394 y Fd([1)r(])1008 2398 y Fh(.)16 b(In)10
b(one)h(dimension,)f(the)0 2448 y Fs(j)r Fh(th)i(number)g Fs(H)238
2454 y Fp(j)268 2448 y Fh(in)g(the)g(sequence)h(is)f(obtained)g(by)g(the)g
(following)e(steps:)19 b(\(i\))11 b(W)n(rite)h Fs(j)j Fh(as)e(a)0
2497 y(number)h(in)f(base)i Fs(b)p Fh(,)g(where)f Fs(b)g Fh(is)g(some)g
(prime.)26 b(\(For)14 b(example)g Fs(j)k Fq(=)d(17)e Fh(in)h(base)h
Fs(b)f Fq(=)h(3)f Fh(is)0 2547 y(122.\))24 b(\(ii\))13 b(Reverse)h(the)g
(digits)e(and)h(put)g(a)h(radix)f(point)f(\(i.e.,)j(a)g(decimal)f(point)e
(base)i Fs(b)p Fh(\))f(in)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
