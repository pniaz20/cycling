%!PS-Adobe-2.0
%%Creator: dvips 5.47 Copyright 1986-91 Radical Eye Software
%%Pages: 5 1
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Roman Helvetica-Oblique Helvetica Helvetica-BoldOblique
%%+ Times-Italic
%%EndComments
%%BeginProcSet: tex.pro
/TeXDict 200 dict def TeXDict begin /N /def load def /B{bind def}N /S /exch
load def /X{S N}B /TR /translate load N /isls false N /vsize 10 N /@rigin{
isls{[0 1 -1 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
Resolution VResolution vsize neg mul TR matrix currentmatrix dup dup 4 get
round 4 exch put dup dup 5 get round 5 exch put setmatrix}N /@letter{/vsize 10
N}B /@landscape{/isls true N /vsize -1 N}B /@a4{/vsize 10.6929133858 N}B /@a3{
/vsize 15.5531 N}B /@ledger{/vsize 16 N}B /@legal{/vsize 13 N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0 0]N
/FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn begin
/FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X array
/BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo setfont}2
array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx FMat N df-tail}
B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{pop nn dup definefont
setfont}B /ch-width{ch-data dup length 5 sub get}B /ch-height{ch-data dup
length 4 sub get}B /ch-xoff{128 ch-data dup length 3 sub get sub}B /ch-yoff{
ch-data dup length 2 sub get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B
/ch-image{ch-data dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0
N /rw 0 N /rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S
dup /base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0
ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{ch-image}
imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn /base get cc ctr
put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1 sub dup 2 index S get sf
div put}if put /ctr ctr 1 add N}B /I{cc 1 add D}B /bop{userdict /bop-hook
known{bop-hook}if /SI save N @rigin 0 0 moveto}N /eop{clear SI restore
showpage userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if /VResolution X /Resolution X 1000 div /DVImag X /IE 256
array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for}N /p /show load N
/RMat[1 0 0 -1 0 0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X
/rulex X V}B /V statusdict begin /product where{pop product dup length 7 ge{0
7 getinterval(Display)eq}{pop false}ifelse}{false}ifelse end{{gsave TR -.1 -.1
TR 1 1 scale rulex ruley false RMat{BDot}imagemask grestore}}{{gsave TR -.1
-.1 TR rulex ruley scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /a{
moveto}B /delta 0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{
S p tail}B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B
/j{3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w
}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{clear SS restore}B end
%%EndProcSet
%%BeginProcSet: texps.pro
TeXDict begin /rf{655360 div mul Resolution mul 7227 div /PixPerEm X findfont
dup length 1 add dict /nn X{1 index /FID ne{nn 3 1 roll put}{pop pop}ifelse}
forall 256 dict begin nn /Encoding get 0 1 255{2 copy get 3 index 2 index get
1000 mul PixPerEm div def pop}for pop pop nn /Metrics currentdict put end
/fontname X /nn dup nn definefont[PixPerEm 0 0 PixPerEm neg 0 0]makefont N
fontname{/foo setfont}2 array copy cvx N fontname load 0 nn put}N
/ObliqueSlant{dup sin S cos div neg}B
/SlantFont{/foo X[1 0 foo 1 0 0] TransFont}N
/ExtendFont{/foo X 3 2 roll[S{foo div}forall]3 1 roll[foo 0 0 1 0 0]
TransFont}N
/ExpandFont{/foo X 3 2 roll[S{foo div}forall]3 1 roll[foo 0 0 foo 0 0]
TransFont}N
/TransFont{S findfont S makefont dup length dict /nn X{1 index
/FID ne{nn 3 1 roll put}{pop pop}ifelse}forall dup nn definefont pop}N end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N /vs
792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP false N /BBcalc false N
/p 3 def}B /@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{
@scaleunit div /vsc X}B /@hsize{/hs X /CLIP true N}B /@vsize{/vs X /CLIP true
N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{10 div /rwi X}
B /@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X /BBcalc true N}B
/magscale true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{md begin /letter{}N /note{}N /legal{}N /od{txpose 1 0 mtx
defaultmatrix dtransform S atan/pa X newpath clippath mark{transform{
itransform moveto}}{transform{itransform lineto}}{6 -2 roll transform 6 -2
roll transform 6 -2 roll transform{itransform 6 2 roll itransform 6 2 roll
itransform 6 2 roll curveto}}{{closepath}}pathforall newpath counttomark array
astore /gc xdf pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{
PaintBlack}if}N /txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR
pop 1 -1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0 TR}if
yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR pop pop 270
rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip not
and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg sub neg 0 TR}if yflip xflip
not and{TR pop pop 270 rotate ppr 2 get ppr 0 get neg sub neg 0 S TR}if}
ifelse scaleby96{ppr aload pop 4 -1 roll add 2 div 3 1 roll add 2 div 2 copy
TR .96 dup scale neg S neg S TR}if}N /cp{pop pop showpage pm restore}N end}if}
if}N /normalscale{Resolution 72 div VResolution 72 div neg scale magscale{
DVImag dup scale}if}N /psfts{S 65536 div N}N /startTexFig{/psf$SavedState save
N userdict maxlength dict begin /magscale false def normalscale currentpoint
TR /psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx psf$llx
sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy scale psf$cx
psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR /showpage{}N
/erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{psf$llx psf$lly
psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2 roll moveto 6 -1 roll
S lineto S lineto S lineto closepath clip newpath moveto}N /endTexFig{end
psf$SavedState restore}N /@beginspecial{SDict begin /SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults}N /@setspecial{CLIP{newpath 0 0
moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR
hsc vsc scale ang rotate BBcalc{rwi urx llx sub div dup scale llx neg lly neg
TR}if /showpage{}N /erasepage{}N /copypage{}N newpath}N /@endspecial{grestore
clear SpecialSave restore end}N /@defspecial{SDict begin}N /@fedspecial{end}B
/li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{/SaveX currentpoint /SaveY X N 1
setlinecap newpath}N /st{stroke SaveX SaveY moveto}N /fil{fill SaveX SaveY
moveto}N /ellipse{/endangle X /startangle X /yrad X /xrad X /savematrix matrix
currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc savematrix
setmatrix}N end
%%EndProcSet
TeXDict begin 1000 300 300 @start /Fa 24 122 df<00C003C007800F001E001C00380078
0070007000F000E000E000E000E000E000E000E000F00070007000780038001C001E000F000780
03C000C00A1D7A9914>40 D<C000F00078003C001E000E00070007800380038003C001C001C001
C001C001C001C001C003C003800380078007000E001E003C007800F000C0000A1D7D9914>I<01
C00001C00001C00001C00001C00001C00001C000FFFF80FFFF80FFFF8001C00001C00001C00001
C00001C00001C00001C00011117F9314>43 D<70F8FCFC7C1C1838F0C0060A798414>I<70F8F8
F8700505798414>46 D<0300070007000F003F00F7004700070007000700070007000700070007
00070007000700070007000700FFF0FFF00C177C9614>49 D<0FC03FF07838701CE01EE00EE00E
400E000E001E001C003C007800F001E003C007800F001E003C0E700EFFFEFFFE0F177E9614>I<
FFE0FFE0E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E0
00E000E000E000E000E000E000E000FFE0FFE00B1D799914>91 D<FFE0FFE000E000E000E000E0
00E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000
E000E0FFE0FFE00B1D7F9914>93 D<1FC0007FF000707800203C00001C00001C0007FC001FFC00
7C1C00F01C00E01C00E01C00E01C00707C003FFF800F8F8011107E8F14>97
D<007E00007E00000E00000E00000E00000E00000E0007CE001FFE003C3E00781E00700E00F00E
00E00E00E00E00E00E00E00E00F00E00701E00781E003C3E001FFFC007CFC012177F9614>100
D<07E01FF83C3C781C701EF00EE00EFFFEFFFEE000F0007000780E3C1E0FFC03F00F107E8F14>
I<FC0000FC00001C00001C00001C00001C00001C00001C78001DFE001F8F001E07001E07001C07
001C07001C07001C07001C07001C07001C07001C07001C0700FF9FE0FF9FE01317809614>104
D<03000780078003000000000000000000FF80FF80038003800380038003800380038003800380
038003800380FFFEFFFE0F187D9714>I<FC7800FDFE001F8F001E07001E07001C07001C07001C
07001C07001C07001C07001C07001C07001C0700FF9FE0FF9FE01310808F14>110
D<07C01FF03C78701C701CE00EE00EE00EE00EE00EE00E701C783C3C781FF007C00F107E8F14>
I<FCF800FFFE001F0F001E07801C03801C03C01C01C01C01C01C01C01C01C01C03C01E03801E07
801F0F001FFE001CF8001C00001C00001C00001C00001C00001C0000FF8000FF80001218808F14
>I<FF0F80FF3FC007F1C007C08007C00007800007000007000007000007000007000007000007
0000070000FFFC00FFFC001210808F14>114 D<0FD87FF8E078C038C038F0007F803FF007FC00
1EE00EE006F006F81CFFF8CFE00F107E8F14>I<07000700070007000700FFFCFFFC0700070007
0007000700070007000700070E070E070E079E03FC00F00F157F9414>I<FC3F00FC3F001C0700
1C07001C07001C07001C07001C07001C07001C07001C07001C07001C0F001E1F000FFFE003E7E0
1310808F14>I<FF7F80FF7F801C1C001C1C001C1C001C1C000E38000E38000E38000630000770
0007700007700003E00003E00003E00011107F8F14>I<FE7F80FE7F801E38000E780007700007
E00003E00001C00003C00003E0000770000E78000E38001C1C00FF7F80FF7F8011107F8F14>
120 D<FF3F80FF3F801C1C001C1C001C1C000E1C000E38000E3800073800073000073000037000
03700001E00001E00001E00001C00001C00001C0000380007380007700007E00003C000011187F
8F14>I E /Fb 34 122 df<E0E0E0604040C003077D820A>44 D<FF80FF80090280880C>I<E0E0
E003037D820A>I<00700000F80000F80001DC00019C00018C00038E00038E0003060007070007
07000E03800E03800C03801FFFC01FFFC03801E03800E03800E0700070700070600070E0003815
177F9618>65 D<FFFEFFFEE000E000E000E000E000E000E000E000FFF8FFF8E000E000E000E000
E000E000E000E000E000E000E0000F177D9614>70 D<00FE0003FF800783C01E00C01C00C03800
00700000700000E00000E00000E00000E00000E01FE0E01FE0E000E07000E07000E03800E01C00
E01E00E00781E003FFC000FE0013177E9618>I<E001C0E00380E00700E00E00E01C00E03800E0
7000E0E000E1C000E3C000E7E000EEF000FC7000F83800F03C00E01E00E00E00E00700E00780E0
0380E001C0E000E0E000F014177D9619>75 D<E000E000E000E000E000E000E000E000E000E000
E000E000E000E000E000E000E000E000E000E000E000FFFCFFFC0E177D9613>I<FFF000FFFC00
E01E00E00700E00380E00380E00380E00380E00700E01E00FFFC00FFF000E07000E03000E03800
E01C00E01C00E00E00E00E00E00700E00380E00380E001C012177D9617>82
D<07E01FF8383C600CC00CC000C000E00070007E003FE00FF001F8001C000E000600060006C006
E00CF8387FF00FC00F177E9614>I<FFFFF8FFFFF8007000007000007000007000007000007000
007000007000007000007000007000007000007000007000007000007000007000007000007000
00700000700015177F9618>I<1FC07FE0707040380038003801F81FF87E38F038E038E038F078
7FF83FB80D0F7F8E11>97 D<E000E000E000E000E000E000E000E000E7C0FFE0F870E038E038E0
1CE01CE01CE01CE01CE038E038F0F0FFE0E7800E177E9612>I<07E01FF8381870007000E000E0
00E000E000E0007000700838381FF807E00D0F7F8E10>I<001C001C001C001C001C001C001C00
1C079C1FFC3C3C701C701CE01CE01CE01CE01CE01C701C703C387C1FFC0F9C0E177F9612>I<0F
801FE0387070306038E018FFF8FFF8E000E0006000700038181FF807E00D0F7F8E10>I<03E007
E00C201C001C001C001C001C00FF80FF801C001C001C001C001C001C001C001C001C001C001C00
1C001C000B1780960B>I<0F9F1FFF38F0707070707070707038E03FC06F80600070007FF03FF8
7FFC701EE00EE00EE00E783C3FF80FE010167F8E12>I<E000E000E000E000E000E000E000E000
E7E0EFF0F878F038E038E038E038E038E038E038E038E038E038E038E0380D177E9612>I<E0E0
E0000000000000E0E0E0E0E0E0E0E0E0E0E0E0E0E0E003187E9708>I<E000E000E000E000E000
E000E000E000E0F8E1F0E3E0E3C0E780EF00FE00FF00FF80F380E1C0E1E0E0E0E0F0E0780D177E
9611>107 D<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E003177E9608>I<E7E1F8EF
F3FCF87E1EF03C0EE0380EE0380EE0380EE0380EE0380EE0380EE0380EE0380EE0380EE0380EE0
380E170F7E8E1C>I<E7E0EFF0F878F038E038E038E038E038E038E038E038E038E038E038E038
0D0F7E8E12>I<07C01FF03838701C701CE00EE00EE00EE00EE00E701C701C3C781FF007C00F0F
7F8E12>I<E7C0FFE0F870E038E038E01CE01CE01CE01CE01CE038E038F0F0FFE0E780E000E000
E000E000E000E0000E157E8E12>I<079C1FFC3C7C703C701CE01CE01CE01CE01CE01C701C701C
387C1FFC0F9C001C001C001C001C001C001C0E157F8E12>I<E380EF80FC00F800F000F000E000
E000E000E000E000E000E000E000E000090F7E8E0C>I<1F007FC0E0C0E000E000F0007F003F80
0FC001E080E0C0E0E1C07FC01F000B0F7F8E0E>I<3800380038003800FF80FF80380038003800
380038003800380038003800380038401FC01F000A137F920D>I<E038E038E038E038E038E038
E038E038E038E038E038E038E0F87FF83F380D0F7E8E12>I<E038E038E03870707070707038E0
38E038E01CC01DC00D800D800F8007000E0F7F8E10>I<E0F038E0F838E0D838E09838719C7071
9C70718C70310C603B0CE03B0EE03B06E01A06C01A06C01E07C00E0380160F7F8E18>I<E038E0
38703870707070386038E018E01CC01CC00DC00D800580070007000700060006008C00FC00F800
0E157F8E10>121 D E /Fc 47 126 df<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E060C00B097D93
12>34 D<0E700E700E700E70FFFEFFFE7FFE0E700E700E701CE01CE07FFEFFFEFFFE1CE01CE01C
E01CE01CE00F147F9312>I<018007800F001E003C00380078007000F000E000E000E000E000E0
00E000E000F0007000780038003C001E000F000780018009197B9612>40
D<C000F00078003C001E000E000F00070007800380038003800380038003800380078007000F00
0E001E003C007800F000C00009197D9612>I<070007000700E738FFF87FF01FC01FC07FF0FFF8
E7380700070007000D0E7E9012>I<038003800380038003800380FFFEFFFEFFFE038003800380
0380038003800F0F7F9112>I<307C7C3C0C1C38F0E006097A8312>I<FFF8FFF8FFF80D037E8B12
>I<60F0F0600404798312>I<0018003800380070007000E000E001C001C001C003800380070007
000E000E001C001C001C003800380070007000E000E000C0000D1A7E9612>I<07C00FE01C7038
38701C701CE00EE00EE00EE00EE00EE00EE00EE01E701C701C38381C700FE007C00F147F9312>
I<030007000F001F00FF00F7000700070007000700070007000700070007000700070007007FF0
7FF00C147E9312>I<0F803FE070F0F078E038E038403800380078007000F001E003C007800F00
1E0038387038FFF8FFF80D147E9312>I<00F001F00370037006700E700C701C70387038707070
E070FFFEFFFE007000700070007003FE03FE0F147F9312>52 D<7FF07FF0700070007000700070
0070007F807FE060F0007800384038E038E038E07070F03FC01F000D147E9312>I<01F007F81E
3C3C1C781C7000F000E7C0FFF0F83CF01CF01EE00EE00EF00E701E781C3C3C1FF007C00F147F93
12>I<3078783000000000000030787838183830F0C005137A8D12>59 D<0038007801F003E00F
801F003C00F800F000F8003C001F000F8003E001F0007800380D117E9212>I<FFFEFFFE7FFE00
00000000007FFEFFFEFFFE0F097F8E12>I<1F303FF070F0E0F0E070E070F000F0007F003FE00F
F000F000780038E038E038F078F070FFE0CF800D147E9312>83 D<FFC0FFC0E000E000E000E000
E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000FFC0FF
C00A1A7A9612>91 D<FFC0FFC001C001C001C001C001C001C001C001C001C001C001C001C001C0
01C001C001C001C001C001C001C001C001C0FFC0FFC00A1A7F9612>93 D<FFF8FFF8FFF80D037E
7F12>95 D<3F807FE070F0207000700FF03FF07870F070E070E070F0F07FFE1F3E0F0E7E8D12>
97 D<FC00FC001C001C001C001C001DF01FF81F1E1E0E1C0F1C071C071C071C071C0F1E0E1F1C
1FF81DE01014809312>I<07F01FF838387010F000E000E000E000E000F000703838781FF007E0
0D0E7E8D12>I<01F801F8003800380038003807B81FF838787078F038E038E038E038E038F038
707878F81FFF0FBF10147F9312>I<07801FE038F07078F038E038FFF8FFF8E000F00070383878
1FF007C00D0E7E8D12>I<007E01FF03C7038203800380FFFEFFFE038003800380038003800380
03800380038003807FFC7FFC1014809312>I<FC0000FC00001C00001C00001C00001C00001CF0
001FF8001F1C001E1C001C1C001C1C001C1C001C1C001C1C001C1C001C1C001C1C00FF9F80FF9F
801114809312>104 D<06000F000F000600000000000000FF00FF000700070007000700070007
000700070007000700FFF8FFF80D157D9412>I<FC0000FC00001C00001C00001C00001C00001F
FF001FFF001C78001CF0001DE0001FC0001FE0001FE0001EF0001C78001C3C001C3C00FF3F80FF
3F801114809312>107 D<FF80FF80038003800380038003800380038003800380038003800380
0380038003800380FFFEFFFE0F147F9312>I<FB8E00FFFF803EFB803CF38038E38038E38038E3
8038E38038E38038E38038E38038E380FEFBE0FEFBE0130E818D12>I<FCF000FFF8001F1C001E
1C001C1C001C1C001C1C001C1C001C1C001C1C001C1C001C1C00FF9F80FF9F80110E808D12>I<
0F803FE038E07070E038E038E038E038E038F078707038E03FE00F800D0E7E8D12>I<FDF0FFF8
1F1E1E0E1C0F1C071C071C071C071C0F1E0E1F1C1FF81DE01C001C001C001C001C00FF80FF8010
15808D12>I<FE7CFEFE0FCE0F840F000E000E000E000E000E000E000E00FFF0FFF00F0E7F8D12>
114 D<1FF07FF0E070C070E000FF003FE00FF00078E018E018F038FFF0DFC00D0E7E8D12>I<0E
000E000E000E00FFF8FFF80E000E000E000E000E000E000E000E380E380E7807F003C00D127F91
12>I<FCFC00FCFC001C1C001C1C001C1C001C1C001C1C001C1C001C1C001C1C001C1C001C3C00
0FFF8007DF80110E808D12>I<FEFEFEFE38383C781C701C701C700EE00EE00EE006C007C007C0
03800F0E7F8D12>I<FCFEFCFE1CF00EE00FC007C00380078007C00EE01EF01C70FEFEFEFE0F0E
7F8D12>120 D<FEFEFEFE3C381C381C701C700E700E600E6006E006E003C003C003C003800380
0380778077007E003C000F157F8D12>I<7FFC7FFC7038707000E001C0038007000E001C1C381C
701CFFFCFFFC0E0E7F8D12>I<00F803F80780070007000700070007000700070007000F00FE00
FE000F0007000700070007000700070007000700078003F800F80D1A7E9612>I<F800FE000F00
07000700070007000700070007000700078003F803F80780070007000700070007000700070007
000F00FE00F8000D1A7E9612>125 D E /Fd [ 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 11 14 17 17 28
26 11 11 11 17 19 8 11 8 9 17 17 17 17 17 17 17 17 17 17 9
9 19 19 19 15 31 24 22 22 24 20 18 24 24 11 13 24 20 30 24
24 18 24 22 18 20 24 24 31 24 24 20 11 9 11 16 17 11 15 17
15 17 15 11 17 17 9 9 17 9 26 17 17 17 17 11 13 9 17 17 24
17 17 15 16 7 16 18 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 11 17 17 6 17 17 17 17 6 15 17
11 11 18 18 0 17 17 17 8 0 15 12 11 15 15 17 33 33 0 15 0 11
11 11 11 11 11 11 11 0 11 11 0 11 11 11 33 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 30 0 9 0 0 0 0 20 24 30 10 0 0 0 0 0 22 0 0
0 9 0 0 9 17 24 17 0 0 0 0 ] /Times-Roman 1000 524288 rf /Fe
[ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 10 14 17 21 21 35 32 14 14 14 21 28 10 14 10 12 21 21
21 21 21 21 21 21 21 21 14 14 28 28 28 21 38 25 25 28 30 25
25 30 30 14 18 28 23 35 28 30 25 30 25 21 23 30 25 35 25 23
23 16 12 16 18 21 14 21 21 18 21 18 12 21 21 12 12 18 12 30
21 21 21 21 16 16 12 21 18 28 18 18 16 17 11 17 22 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
16 21 21 7 21 21 21 21 9 23 21 14 14 21 21 0 21 21 21 10 0
22 15 14 23 23 21 37 42 0 21 0 14 14 14 14 14 14 14 14 0 14
14 0 14 14 14 37 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 37 0 11 0
0 0 0 23 30 39 13 0 0 0 0 0 28 0 0 0 12 0 0 12 21 28 21 0 0
0 0 ] /Times-Italic 1000 655360 rf /Ff 2 2 df<00200040008001000300060006000C00
0C00180018003800300030007000700070006000E000E000E000E000E000E000E000E000E000E0
00E000E000E0006000700070007000300030003800180018000C000C0006000600030001000080
004000200B317A8113>0 D<800040002000100018000C000C0006000600030003000380018001
8001C001C001C000C000E000E000E000E000E000E000E000E000E000E000E000E000E000C001C0
01C001C001800180038003000300060006000C000C00180010002000400080000B317F8113>I
E /Fg [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 17 21 30 35 35 55 45 17 21 21 24 36 17 21 17 17
35 35 35 35 35 35 35 35 35 35 21 21 36 36 36 38 61 45 45 45
45 42 38 48 45 17 35 45 38 52 45 48 42 48 45 42 38 45 42 59
42 42 38 21 17 21 36 35 17 35 38 35 38 35 21 38 38 17 17 35
17 55 38 38 38 38 24 35 21 38 35 48 35 35 31 24 17 24 36 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 21 35 35 10 35 35 35 35 15 31 35 21 21 38 38 0 35 35
35 17 0 35 22 17 31 31 35 62 62 0 38 0 21 21 21 21 21 21 21
21 0 21 21 0 21 21 21 62 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 62
0 23 0 0 0 0 38 48 62 23 0 0 0 0 0 55 0 0 0 17 0 0 17 38 59
38 0 0 0 0 ] /Helvetica-BoldOblique 1000 983040 rf /Fh [ 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 9 9 12 18 18 30 22 7 11 11 13 19 9 11 9 9 18 18 18 18 18
18 18 18 18 18 9 9 19 19 19 18 34 22 22 24 24 22 20 26 24 9
17 22 18 28 24 26 22 26 24 22 20 24 22 31 22 22 20 9 9 9 16
18 7 18 18 17 18 18 9 18 18 7 7 17 7 28 18 18 18 18 11 17 9
18 17 24 17 17 17 11 9 11 19 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 11 18 18 6 18 18 18 18
6 11 18 11 11 17 17 0 18 18 18 9 0 18 12 7 11 11 18 33 33 0
20 0 11 11 11 11 11 11 11 11 0 11 11 0 11 11 11 33 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 33 0 12 0 0 0 0 18 26 33 12 0 0 0 0
0 30 0 0 0 9 0 0 7 20 31 20 0 0 0 0 ] /Helvetica-Oblique 1000
524288 rf /Fi [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 9 9 12 18 18 30 22 7 11 11 13 19 9 11 9
9 18 18 18 18 18 18 18 18 18 18 9 9 19 19 19 18 34 22 22 24
24 22 20 26 24 9 17 22 18 28 24 26 22 26 24 22 20 24 22 31
22 22 20 9 9 9 16 18 7 18 18 17 18 18 9 18 18 7 7 17 7 28 18
18 18 18 11 17 9 18 17 24 17 17 17 11 9 11 19 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 11 18
18 6 18 18 18 18 6 11 18 11 11 17 17 0 18 18 18 9 0 18 12 7
11 11 18 33 33 0 20 0 11 11 11 11 11 11 11 11 0 11 11 0 11
11 11 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 33 0 12 0 0 0 0 18
26 33 12 0 0 0 0 0 30 0 0 0 9 0 0 7 20 31 20 0 0 0 0 ] /Helvetica
1000 524288 rf /Fj [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 10 10 13 21 21 33 25 8 12 12 15 22
10 12 10 10 21 21 21 21 21 21 21 21 21 21 10 10 22 22 22 21
38 25 25 27 27 25 23 29 27 10 19 25 21 31 27 29 25 29 27 25
23 27 25 35 25 25 23 10 10 10 18 21 8 21 21 19 21 21 10 21
21 8 8 19 8 31 21 21 21 21 12 19 10 21 19 27 19 19 19 12 10
12 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 12 21 21 6 21 21 21 21 7 12 21 12 12 19 19 0
21 21 21 10 0 20 13 8 12 12 21 37 37 0 23 0 12 12 12 12 12
12 12 12 0 12 12 0 12 12 12 37 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 37 0 14 0 0 0 0 21 29 37 14 0 0 0 0 0 33 0 0 0 10 0 0 8
23 35 23 0 0 0 0 ] /Helvetica-Oblique 1000 589824 rf /Fk [
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 10 14 17 21 21 35 32 14 14 14 21 23 10 14 10 12 21 21 21
21 21 21 21 21 21 21 12 12 23 23 23 18 38 30 28 28 30 25 23
30 30 14 16 30 25 37 30 30 23 30 28 23 25 30 30 39 30 30 25
14 12 14 19 21 14 18 21 18 21 18 14 21 21 12 12 21 12 32 21
21 21 21 14 16 12 21 21 30 21 21 18 20 8 20 22 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 14
21 21 7 21 21 21 21 7 18 21 14 14 23 23 0 21 21 21 10 0 19
15 14 18 18 21 42 42 0 18 0 14 14 14 14 14 14 14 14 0 14 14
0 14 14 14 42 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 37 0 11 0 0 0
0 25 30 37 13 0 0 0 0 0 28 0 0 0 12 0 0 12 21 30 21 0 0 0 0
] /Times-Roman 1000 655360 rf /Fl 18 122 df<00E001E007C007000F001E003C00380078
00700070007000F000E000E000E000E000E000E000E000F000700070007000780038003C001E00
0F00070007C001E000E00B217A9C16>40 D<E000F0007C001C001E000F000780038003C001C001
C001C001E000E000E000E000E000E000E000E001E001C001C001C003C0038007800F001E001C00
7C00F000E0000B217C9C16>I<01C00001C00001C00001C00071C700F9CF807FFF001FFC0007F0
0007F0001FFC007FFF00F9CF8071C70001C00001C00001C00001C00011127E9516>I<1FE0007F
F8007FFC00783C00301E00000E00000E0003FE001FFE007E0E00F00E00E00E00E00E00F01E00F8
3E007FFFE03FE7E00F83E013127E9116>97 D<03F80FFE1FFE3C1E780C7000F000E000E000E000
E000F000700778073E0F1FFE0FFC03F010127D9116>99 D<003F00007F00003F00000700000700
00070000070003C7000FF7003FFF003C1F00780F00F00700F00700E00700E00700E00700E00700
F00700F00F00781F007C3F003FFFE01FF7F007C7E014197F9816>I<03E00FF81FFC3C1E780E70
07E007FFFFFFFFFFFFE000E000700778073C0F1FFE0FFC03F010127D9116>I<7E0000FE00007E
00000E00000E00000E00000E00000E3C000EFF000FFF800F87800F03800F03800E03800E03800E
03800E03800E03800E03800E03800E03800E03807FC7F0FFE7F87FC7F01519809816>104
D<018003C003C0018000000000000000007FC07FC07FC001C001C001C001C001C001C001C001C0
01C001C001C001C07FFFFFFF7FFF101A7D9916>I<F9C380FFEFC0FFFFE03E7CE03C78E03870E0
3870E03870E03870E03870E03870E03870E03870E03870E03870E0FE7CF8FE7CF8FE3C78151280
9116>109 D<7E3C00FEFF007FFF800F87800F03800F03800E03800E03800E03800E03800E0380
0E03800E03800E03800E03807FC7F0FFE7F87FC7F01512809116>I<03E0000FF8001FFC003C1E
00780F00700700E00380E00380E00380E00380E00380F00780700700780F003C1E001FFC000FF8
0003E00011127E9116>I<FF0FC0FF3FE0FF7FE007F04007E00007C00007800007800007000007
0000070000070000070000070000070000FFFC00FFFC00FFFC0013127F9116>114
D<0FEC3FFC7FFCF03CE01CE01CF0007F801FF007FC003EE00EE00EF00EF81EFFFCFFF8C7E00F12
7D9116>I<0300000700000700000700000700007FFF00FFFF00FFFF0007000007000007000007
000007000007000007000007010007038007038007078007878003FF0003FE0000F80011177F96
16>I<7F1FC0FF1FE07F1FC01C07001E0F000E0E000E0E000E0E00071C00071C00071C00071C00
03B80003B80003B80001F00001F00000E00013127F9116>118 D<7F1FC07F3FC07F1FC00F1C00
073C0003B80003F00001F00000E00001E00001F00003B800073C00071C000E0E007F1FC0FF3FE0
7F1FC013127F9116>120 D<7F1FC0FF9FE07F1FC01C07000E07000E0E000E0E00070E00071C00
071C00039C00039C0003980001B80001B80000F00000F00000F00000E00000E00000E00001C000
79C0007BC0007F80003F00003C0000131B7F9116>I E /Fm 3 116 df<0038006C007C004C00C0
00C000C007F800C001800180018001800180030003000300030003000300060006006600E400C8
0070000E1A7F9310>102 D<30F8590C4E0C9C0C980C180C180C30183019303130316032601C10
0D7F8C15>110 D<0700188019C0318038001E000F0003804180E180C10082007C000A0D7E8C10>
115 D E /Fn 2 121 df<FFFFFFE0FFFFFFE00000000000000000000000000000000000000000
0000000000000000FFFFFFE0FFFFFFE00000000000000000000000000000000000000000000000
0000000000FFFFFFE0FFFFFFE01B147E9320>17 D<1F00308070406060E0E0E0E0E040E0006000
7000300018001C003300718061C0E0C0E0E0E0E0E0E060E070C031C0198007000300018001C000
C000E040E0E0E0E0E0C0C041C021801F000B257D9C12>120 D E /Fo 7
62 df<004000800100020006000C000C0018001800300030007000600060006000E000E000E000
E000E000E000E000E000E000E000E000E000600060006000700030003000180018000C000C0006
0002000100008000400A2A7D9E10>40 D<800040002000100018000C000C000600060003000300
038001800180018001C001C001C001C001C001C001C001C001C001C001C001C001800180018003
8003000300060006000C000C00180010002000400080000A2A7E9E10>I<000600000006000000
060000000600000006000000060000000600000006000000060000000600000006000000060000
00060000FFFFFFE0FFFFFFE0000600000006000000060000000600000006000000060000000600
000006000000060000000600000006000000060000000600001B1C7E9720>43
D<07C01830201C400C400EF00FF80FF807F8077007000F000E000E001C001C00380070006000C0
0180030006010C01180110023FFE7FFEFFFE101C7E9B15>50 D<07E01830201C201C781E780E78
1E381E001C001C00180030006007E00030001C001C000E000F000F700FF80FF80FF80FF00E401C
201C183007E0101D7E9B15>I<00F0030C06040C0E181E301E300C700070006000E3E0E430E818
F00CF00EE006E007E007E007E007E007600760077006300E300C18180C3003E0101D7E9B15>54
D<7FFFFFC0FFFFFFE0000000000000000000000000000000000000000000000000000000000000
0000FFFFFFE07FFFFFC01B0C7E8F20>61 D E /Fp 6 54 df<0060000060000060000060000060
00006000006000006000006000006000FFFFF0FFFFF00060000060000060000060000060000060
0000600000600000600000600014167E9119>43 D<0C001C00EC000C000C000C000C000C000C00
0C000C000C000C000C000C000C000C000C00FFC00A137D9211>49 D<1F0060C06060F070F03060
3000700070006000C001C00180020004000810101020207FE0FFE00C137E9211>I<0FC0307070
38703870380038003000E00FC0007000380018001C601CF01CF018E03860701FC00E137F9211>
I<006000E000E00160026006600C600860106020606060C060FFFC0060006000600060006003FC
0E137F9211>I<60607FC07F8044004000400040004F0070C040E0006000700070E070E070E060
40E021C01F000C137E9211>I E /Fq 8 122 df<60F0F0701010101020204080040C7C830C>59
D<0003F800000E0E000038038000E001C001C001C0038000E0070000E00F0000F01E0000F01C00
00F03C0000F03C0000F0780000F0780000F0780000F0F00001E0F00001E0F00001E0F00003C0F0
0003C0F0000780F0000780F0000F0070000E0070001C00380038003C0070001C01C00007078000
01FC00001C1E7E9C20>79 D<0001E0000630000E78000CF0001C60001C00001C00001C00003C00
00380000380003FFC000380000380000700000700000700000700000700000E00000E00000E000
00E00000E00001C00001C00001C00001C00001C000018000038000038000630000F30000F60000
E4000078000015257E9C14>102 D<0FC00001C00001C000038000038000038000038000070000
0700000700000700000E3E000EC3000F03800E03801E03801C03801C03801C0380380700380700
380700380E00700E20700E20701C20701C40E00C80600700131D7E9C18>104
D<0FC00001C00001C0000380000380000380000380000700000700000700000700000E07000E18
800E21C00E23C01C47801C83001D00001E00003F800039C00038E00038E00070E10070E10070E1
0070E200E06200603C00121D7E9C16>107 D<381F004E61804681C04701C08F01C08E01C00E01
C00E01C01C03801C03801C03801C0700380710380710380E10380E2070064030038014127E9119
>110 D<07878008C84010F0C020F1E020E3C040E18000E00000E00001C00001C00001C00001C0
00638080F38080F38100E5810084C60078780013127E9118>120 D<1C00C02701C04701C04701
C08703808703800E03800E03801C07001C07001C07001C0700180E00180E00180E001C1E000C3C
0007DC00001C00001800603800F03000F06000E0C0004180003E0000121A7E9114>I
E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300
TeXDict begin 
%%EndSetup
%%Page: 710 1
bop 0 50 a Fk(710)194 b Fj(Chapter)10 b(16.)52 b(Integration)11
b(of)g(Ordinary)f(Differential)i(Equations)p 0 68 1395 2 v
0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial 46 x Fi(CITED)h(REFERENCES)g
(AND)f(FUR)o(THER)i(READING:)0 239 y(Gear)n(,)8 b(C.W)n(.)f(1971,)i
Fh(Numerical)f(Initial)h(V)o(alue)g(Problems)e(in)h(Ordinary)g(Differential)i
(Equations)f Fi(\(Englewood)80 280 y(Clif)o(fs,)15 b(NJ:)e(Prentice-Hall\))q
(.)0 330 y(Acton,)e(F)l(.S.)h(1970,)g Fh(Numerical)g(Methods)g(That)f(Work)p
Fi(;)g(1990,)i(corrected)f(edition)h(\(W)o(ashington:)g(Mathe-)80
371 y(matical)g(Association)h(of)g(America\),)f(Chapter)h(5.)0
421 y(Stoer)n(,)c(J.,)e(and)h(Bulirsch,)h(R.)e(1980,)i Fh(Introduction)i(to)d
(Numerical)g(Analysis)g Fi(\(New)f(Y)m(ork:)h(Springer-V)n(erl)q(ag\))q(,)80
463 y(Chapter)17 b(7.)0 513 y(Lambert,)11 b(J.)e(1973,)i Fh(Computation)q(al)
i(Methods)d(in)g(Ordinary)g(Differentia)q(l)i(Equations)g Fi(\(New)e(Y)m
(ork:)f(Wiley\).)0 562 y(Lapidus,)k(L.,)f(and)g(Seinfeld,)j(J.)10
b(1971,)j Fh(Numerical)g(Solution)g(of)f(Ordinary)g(Differential)j(Equations)
e Fi(\(New)80 604 y(Y)m(ork:)h(Academic)h(Press\).)0 845 y
Fg(16.1)h(Runge-Kutta)21 b(Method)83 970 y Fk(The)c(formula)f(for)g(the)g
(Euler)g(method)g(is)486 1072 y Fq(y)506 1078 y Fm(n)p Fp(+1)583
1072 y Fo(=)11 b Fq(y)646 1078 y Fm(n)679 1072 y Fo(+)e Fq(hf)t
Fo(\()p Fq(x)808 1078 y Fm(n)831 1072 y Fq(;)e(y)870 1078 y
Fm(n)893 1072 y Fo(\))350 b(\()p Fk(16.1.1)p Fo(\))0 1175 y
Fk(which)7 b(advances)h(a)g(solution)d(from)i Fq(x)547 1181
y Fm(n)576 1175 y Fk(to)g Fq(x)640 1181 y Fm(n)p Fp(+1)716
1175 y Fn(\021)12 b Fq(x)784 1181 y Fm(n)808 1175 y Fo(+)r
Fq(h)p Fk(.)j(The)8 b(formula)f(is)f(unsymmetrical:)0 1224
y(It)11 b(advances)i(the)f(solution)e(through)g(an)i(interval)e
Fq(h)p Fk(,)j(but)e(uses)h(derivative)f(information)f(only)0
1274 y(at)g(the)g(beginning)e(of)i(that)f(interval)g(\(see)i(Figure)e
(16.1.1\).)15 b(That)c(means)g(\(and)f(you)f(can)i(verify)0
1324 y(by)i(expansion)g(in)g(power)h(series\))g(that)f(the)h(step')n(s)f
(error)g(is)h(only)e(one)i(power)g(of)f Fq(h)h Fk(smaller)0
1374 y(than)h(the)g(correction,)h(i.e)g Fq(O)q Fo(\()p Fq(h)477
1359 y Fp(2)496 1374 y Fo(\))f Fk(added)h(to)e(\(16.1.1\).)83
1424 y(There)d(are)f(several)h(reasons)f(that)f(Euler)r(')n(s)g(method)h(is)f
(not)g(recommended)j(for)d(practical)0 1473 y(use,)20 b(among)e(them,)i
(\(i\))d(the)h(method)f(is)h(not)f(very)g(accurate)i(when)f(compared)h(to)e
(other)n(,)0 1523 y(fancier)n(,)j(methods)e(run)e(at)i(the)f(equivalent)g
(stepsize,)j(and)e(\(ii\))e(neither)h(is)g(it)g(very)g(stable)0
1573 y(\(see)k Fn(x)p Fk(16.6)f(below\).)83 1623 y(Consider)n(,)14
b(however)n(,)i(the)d(use)h(of)f(a)i(step)e(like)g(\(16.1.1\))h(to)f(take)h
(a)g(\252trial\272)f(step)h(to)f(the)0 1673 y(midpoint)j(of)h(the)g
(interval.)37 b(Then)18 b(use)g(the)f(value)h(of)f(both)g Fq(x)g
Fk(and)h Fq(y)h Fk(at)f(that)f(midpoint)0 1722 y(to)d(compute)g(the)g
(\252real\272)i(step)e(across)h(the)f(whole)g(interval.)26
b(Figure)14 b(16.1.2)g(illustrates)f(the)0 1772 y(idea.)44
b(In)19 b(equations,)462 1870 y Fq(k)484 1876 y Fp(1)514 1870
y Fo(=)12 b Fq(hf)t Fo(\()p Fq(x)646 1876 y Fm(n)669 1870 y
Fq(;)7 b(y)708 1876 y Fm(n)730 1870 y Fo(\))462 1952 y Fq(k)484
1958 y Fp(2)514 1952 y Fo(=)12 b Fq(hf)613 1918 y Ff(\000)632
1952 y Fq(x)656 1958 y Fm(n)688 1952 y Fo(+)734 1936 y Fp(1)p
734 1943 17 2 v 734 1966 a(2)756 1952 y Fq(h;)7 b(y)819 1958
y Fm(n)850 1952 y Fo(+)897 1936 y Fp(1)p 897 1943 V 897 1966
a(2)918 1952 y Fq(k)940 1958 y Fp(1)959 1918 y Ff(\001)417
2034 y Fq(y)437 2040 y Fm(n)p Fp(+1)514 2034 y Fo(=)12 b Fq(y)578
2040 y Fm(n)610 2034 y Fo(+)d Fq(k)673 2040 y Fp(2)701 2034
y Fo(+)g Fq(O)q Fo(\()p Fq(h)815 2017 y Fp(3)834 2034 y Fo(\))1259
1961 y(\()p Fk(16.1.2)p Fo(\))0 2149 y Fk(As)k(indicated)f(in)g(the)h(error)f
(term,)i(this)e(symmetrization)h(cancels)h(out)e(the)g(\256rst-order)g(error)
0 2199 y(term,)18 b(making)e(the)g(method)f Fe(second)g(or)n(der)p
Fk(.)33 b([A)16 b(method)g(is)f(conventionally)f(called)j Fq(n)p
Fk(th)0 2248 y(order)g(if)f(its)h(error)g(term)g(is)g Fq(O)q
Fo(\()p Fq(h)513 2233 y Fm(n)p Fp(+1)578 2248 y Fo(\))p Fk(.])36
b(In)16 b(fact,)k(\(16.1.2\))d(is)g(called)g(the)g Fe(second-or)n(der)0
2298 y(Runge-Kutta)f Fk(or)h Fe(midpoint)e Fk(method.)83 2348
y(W)m(e)g(needn')o(t)f(stop)f(there.)28 b(There)15 b(are)g(many)f(ways)h(to)f
(evaluate)h(the)f(right-hand)e(side)0 2398 y Fq(f)t Fo(\()p
Fq(x;)7 b(y)q Fo(\))j Fk(that)f(all)f(agree)i(to)f(\256rst)f(order)n(,)i(but)
e(that)h(have)g(dif)o(ferent)g(coef)o(\256cients)g(of)g(higher)o(-order)0
2448 y(error)k(terms.)25 b(Adding)12 b(up)h(the)g(right)f(combination)g(of)h
(these,)i(we)f(can)g(eliminate)f(the)g(error)0 2497 y(terms)c(order)g(by)f
(order)n(.)14 b(That)9 b(is)g(the)f(basic)h(idea)g(of)g(the)g(Runge-Kutta)e
(method.)14 b(Abramowitz)0 2547 y(and)8 b(Stegun)193 2543 y
Fi([1)r(])232 2547 y Fk(,)h(and)f(Gear)409 2543 y Fi([2)r(])448
2547 y Fk(,)h(give)f(various)g(speci\256c)h(formulas)f(that)g(derive)g(from)g
(this)f(basic)p eop
%%Page: 711 2
bop 426 50 a Fj(16.1)10 b(Runge-Kutta)h(Method)467 b Fk(711)p
0 68 1395 2 v 0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial
127 697 a @beginspecial 111 @llx 369 @lly 385 @urx 501 @ury
2740 @rwi @setspecial
%%BeginDocument: epsf/fig16x1x1.ps
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
/TX {pop} def
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def	% - cf flatness
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
[/_Times-Italic/Times-Italic 0 0 1 TZ
[/_Times-Roman/Times-Roman 0 0 1 TZ
0 A
0 To
1 0 0 1 120.75 480.375 0 Tp
TP
0 Tr
0 O
0 g
0 i 0 J 0 j 1 w 4 M []0 d
0 D
/_Times-Italic 9 Tf
0 Ts
100 Tz
0 Tt
1 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
0 0 Tl
0 Tc
0 Tw
(y) Tx 0 -60 Tk
/_Times-Roman 9 Tf
(\() Tx
/_Times-Italic 9 Tf
(x) Tx
/_Times-Roman 9 Tf
(\)) Tx
(\r) TX 
TO
u
0 R
0 G
0.5 w
139.0007 498.7126 m
139.0007 383.7234 L
375.8103 383.7233 L
S
U
1 w [3 3 ]0 d
200.7633 429.9647 m
214.8845 438.7096 l
S
219.662 441.6681 m
263.1556 468.6025 l
281.2016 472.8141 l
S
284.6277 473.6137 m
325.6224 483.1812 l
S
u
0.5 w []0 d
200.7276 387.3176 m
200.7276 380.1603 L
S
U
u
263.1035 387.3177 m
263.1035 380.1603 L
S
U
u
325.4795 387.3177 m
325.4795 380.1604 L
S
U
u
0 O
0 g
1 w
200.75 428.125 m
201.8545 428.125 202.75 429.0205 202.75 430.125 c
202.75 431.2295 201.8545 432.125 200.75 432.125 c
199.6455 432.125 198.75 431.2295 198.75 430.125 c
198.75 429.0205 199.6455 428.125 200.75 428.125 c
f
200.75 430.125 m
F
U
u
263.125 466.625 m
264.2295 466.625 265.125 467.5205 265.125 468.625 c
265.125 469.7295 264.2295 470.625 263.125 470.625 c
262.0205 470.625 261.125 469.7295 261.125 468.625 c
261.125 467.5205 262.0205 466.625 263.125 466.625 c
f
263.125 468.625 m
F
U
u
325.5 481.125 m
326.6045 481.125 327.5 482.0205 327.5 483.125 c
327.5 484.2295 326.6045 485.125 325.5 485.125 c
324.3955 485.125 323.5 484.2295 323.5 483.125 c
323.5 482.0205 324.3955 481.125 325.5 481.125 c
f
325.5 483.125 m
F
U
u
214.1975 438.2653 m
211.6157 439.6198 L
218.0404 440.6066 L
218.0404 440.6066 L
214.2171 435.3499 L
214.1975 438.2653 L
f
U
0 R
0 G
200.7173 429.9907 m
215.1492 438.8565 l
S
u
0 O
0 g
278.5066 472.1542 m
276.4822 474.2522 L
282.8911 473.1675 L
282.8911 473.1675 L
277.608 469.3807 L
278.5066 472.1542 L
f
U
0 R
0 G
263.1075 468.5412 m
279.596 472.4159 l
S
u
0.5 w
199.125 434.5625 m
202.1625 434.5625 204.625 437.025 204.625 440.0625 c
204.625 443.1 202.1625 445.5625 199.125 445.5625 c
196.0875 445.5625 193.625 443.1 193.625 440.0625 c
193.625 437.025 196.0875 434.5625 199.125 434.5625 c
s
199.125 440.0625 m
S
U
0 To
1 0 0 1 199 437.3125 0 Tp
TP
-2.25 0 Td
0 Tr
0 O
0 g
1 w
1 Ta
(1) Tx
(\r) TX 
TO
u
0 R
0 G
0.5 w
262.625 473.1875 m
265.6625 473.1875 268.125 475.65 268.125 478.6875 c
268.125 481.725 265.6625 484.1875 262.625 484.1875 c
259.5875 484.1875 257.125 481.725 257.125 478.6875 c
257.125 475.65 259.5875 473.1875 262.625 473.1875 c
s
262.625 478.6875 m
S
U
0 To
1 0 0 1 262.5 475.9375 0 Tp
TP
-2.25 0 Td
0 Tr
0 O
0 g
1 w
(2) Tx
(\r) TX 
TO
0 To
1 0 0 1 200.8125 372.125 0 Tp
TP
-3.6223 0 Td
0 Tr
/_Times-Italic 9 Tf
(x) Tx
/_Times-Roman 6.5 Tf
-1.5 Ts
(1) Tx
(\r) TX 
TO
0 To
1 0 0 1 263.1885 372.125 0 Tp
TP
-3.8923 0 Td
0 Tr
/_Times-Italic 9 Tf
0 Ts
(x) Tx 0 -60 Tk
/_Times-Roman 6.5 Tf
-1.5 Ts
(2) Tx
(\r) TX 
TO
0 To
1 0 0 1 325.5644 372.125 0 Tp
TP
-3.8023 0 Td
0 Tr
/_Times-Italic 9 Tf
0 Ts
(x) Tx 0 -40 Tk
/_Times-Roman 6.5 Tf
-1.5 Ts
(3) Tx
(\r) TX 
TO
0 To
1 0 0 1 373.1904 372.125 0 Tp
TP
-1.9973 0 Td
0 Tr
/_Times-Italic 9 Tf
0 Ts
(x) Tx
(\r) TX 
TO
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 0 759 a Fd(Figure)11 b(16.1.1.)40 b(Euler)q(')n(s)12
b(method.)19 b(In)11 b(this)g(simplest)g(\(and)f(least)h(accurate\))f(method)
g(for)h(integrating)f(an)g(ODE,)0 797 y(the)h(derivative)e(at)i(the)g
(starting)f(point)g(of)h(each)f(interval)g(is)h(extrapolated)e(to)i(\256nd)g
(the)f(next)g(function)g(value.)19 b(The)0 834 y(method)13
b(has)i(\256rst-order)f(accuracy)n(.)135 1378 y @beginspecial
112 @llx 369 @lly 382 @urx 486 @ury 2700 @rwi @setspecial
%%BeginDocument: epsf/fig16x1x2.ps
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
/TX {pop} def
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def	% - cf flatness
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
[/_Times-Italic/Times-Italic 0 0 1 TZ
[/_Times-Roman/Times-Roman 0 0 1 TZ
0 A
0 R
0 G
0 i 0 J 0 j 1 w 4 M []0 d
0 D
293.375 439.875 m
311.625 439.875 l
S
0 To
1 0 0 1 121.75 471.375 0 Tp
TP
0 Tr
0 O
0 g
/_Times-Italic 9 Tf
0 Ts
100 Tz
0 Tt
1 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
0 0 Tl
0 Tc
0 Tw
(y) Tx 0 -60 Tk
/_Times-Roman 9 Tf
(\() Tx
/_Times-Italic 9 Tf
(x) Tx
/_Times-Roman 9 Tf
(\)) Tx
(\r) TX 
TO
u
0 R
0 G
0.5 w
200.3125 415.625 m
201.417 415.625 202.3125 416.5205 202.3125 417.625 c
202.3125 418.7295 201.417 419.625 200.3125 419.625 c
199.208 419.625 198.3125 418.7295 198.3125 417.625 c
198.3125 416.5205 199.208 415.625 200.3125 415.625 c
b
200.3125 417.625 m
B
U
u
1 w
248.3426 435.0049 m
246.5758 436.7425 L
252.0456 435.9634 L
252.0456 435.9634 L
247.6408 432.6282 L
248.3426 435.0049 L
f
U
0 R
0 G
232.983 430.98 m
249.3639 435.2848 l
S
u
0.5 w
191.625 418.5625 m
194.6625 418.5625 197.125 421.025 197.125 424.0625 c
197.125 427.1 194.6625 429.5625 191.625 429.5625 c
188.5875 429.5625 186.125 427.1 186.125 424.0625 c
186.125 421.025 188.5875 418.5625 191.625 418.5625 c
s
191.625 424.0625 m
S
U
0 To
1 0 0 1 191.5 420.8125 0 Tp
TP
-2.25 0 Td
0 Tr
0 O
0 g
1 w
1 Ta
(1) Tx
(\r) TX 
TO
u
0 R
0 G
0.5 w
231.25 435.0625 m
234.2875 435.0625 236.75 437.525 236.75 440.5625 c
236.75 443.6 234.2875 446.0625 231.25 446.0625 c
228.2125 446.0625 225.75 443.6 225.75 440.5625 c
225.75 437.525 228.2125 435.0625 231.25 435.0625 c
s
231.25 440.5625 m
S
U
0 To
1 0 0 1 231.125 437.3125 0 Tp
TP
-2.25 0 Td
0 Tr
0 O
0 g
1 w
(2) Tx
(\r) TX 
TO
0 To
1 0 0 1 200.3125 372.125 0 Tp
TP
-3.6223 0 Td
0 Tr
/_Times-Italic 9 Tf
(x) Tx
/_Times-Roman 6.5 Tf
-1.5 Ts
(1) Tx
(\r) TX 
TO
0 To
1 0 0 1 262.1885 372.125 0 Tp
TP
-3.8923 0 Td
0 Tr
/_Times-Italic 9 Tf
0 Ts
(x) Tx 0 -60 Tk
/_Times-Roman 6.5 Tf
-1.5 Ts
(2) Tx
(\r) TX 
TO
0 To
1 0 0 1 323.9394 372.125 0 Tp
TP
-3.8023 0 Td
0 Tr
/_Times-Italic 9 Tf
0 Ts
(x) Tx 0 -40 Tk
/_Times-Roman 6.5 Tf
-1.5 Ts
(3) Tx
(\r) TX 
TO
0 To
1 0 0 1 370.1904 372.125 0 Tp
TP
-1.9973 0 Td
0 Tr
/_Times-Italic 9 Tf
0 Ts
(x) Tx
(\r) TX 
TO
0 R
0 G
0.5 w
200.2194 386.9923 m
200.2194 379.8924 l
S
262.0453 386.9923 m
262.0453 379.8924 l
S
323.8712 386.9923 m
323.8712 379.8924 l
S
139.8397 483.7513 m
139.8397 383.4542 l
372.4431 383.4542 l
S
1 w [3 2 ]0 d
200.2194 417.6211 m
262.0453 433.8911 l
323.8712 433.8911 l
S
u
0 O
0 g
0.5 w []0 d
262.0625 431.875 m
263.167 431.875 264.0625 432.7705 264.0625 433.875 c
264.0625 434.9795 263.167 435.875 262.0625 435.875 c
260.958 435.875 260.0625 434.9795 260.0625 433.875 c
260.0625 432.7705 260.958 431.875 262.0625 431.875 c
b
262.0625 433.875 m
B
U
u
323.9375 431.875 m
325.042 431.875 325.9375 432.7705 325.9375 433.875 c
325.9375 434.9795 325.042 435.875 323.9375 435.875 c
322.833 435.875 321.9375 434.9795 321.9375 433.875 c
321.9375 432.7705 322.833 431.875 323.9375 431.875 c
b
323.9375 433.875 m
B
U
u
1 g
292.9375 437.875 m
294.042 437.875 294.9375 438.7705 294.9375 439.875 c
294.9375 440.9795 294.042 441.875 292.9375 441.875 c
291.833 441.875 290.9375 440.9795 290.9375 439.875 c
290.9375 438.7705 291.833 437.875 292.9375 437.875 c
b
292.9375 439.875 m
B
U
u
231.0625 428.5 m
232.167 428.5 233.0625 429.3955 233.0625 430.5 c
233.0625 431.6045 232.167 432.5 231.0625 432.5 c
229.958 432.5 229.0625 431.6045 229.0625 430.5 c
229.0625 429.3955 229.958 428.5 231.0625 428.5 c
b
231.0625 430.5 m
B
U
u
0 g
1 w
214.9099 423.8782 m
212.9087 425.3397 L
218.4335 425.3666 L
218.4335 425.3666 L
214.5623 421.4248 L
214.9099 423.8782 L
f
U
0 R
0 G
200.2318 417.6464 m
215.8099 424.294 l
S
u
0 O
0 g
310.8567 439.87 m
309.5867 441.998 L
314.6817 439.8611 L
314.6817 439.8611 L
309.5767 437.7481 L
310.8567 439.87 L
f
U
u
279.4129 437.7577 m
277.6989 439.5475 L
283.1428 438.6048 L
283.1428 438.6048 L
278.6401 435.4032 L
279.4129 437.7577 L
f
U
0 R
0 G
263.9395 434.1951 m
280.4421 438.0069 l
S
u
0.5 w
263.25 419.0625 m
266.2875 419.0625 268.75 421.525 268.75 424.5625 c
268.75 427.6 266.2875 430.0625 263.25 430.0625 c
260.2125 430.0625 257.75 427.6 257.75 424.5625 c
257.75 421.525 260.2125 419.0625 263.25 419.0625 c
s
263.25 424.5625 m
S
U
0 To
1 0 0 1 263.125 421.3125 0 Tp
TP
-2.25 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Roman 9 Tf
(3) Tx
(\r) TX 
TO
u
0 R
0 G
0.5 w
293 444.3125 m
296.0375 444.3125 298.5 446.775 298.5 449.8125 c
298.5 452.85 296.0375 455.3125 293 455.3125 c
289.9625 455.3125 287.5 452.85 287.5 449.8125 c
287.5 446.775 289.9625 444.3125 293 444.3125 c
s
293 449.8125 m
S
U
0 To
1 0 0 1 292.875 446.5625 0 Tp
TP
-2.25 0 Td
0 Tr
0 O
0 g
1 w
(4) Tx
(\r) TX 
TO
u
0 R
0 G
0.5 w
325.5 418.9375 m
328.5375 418.9375 331 421.4 331 424.4375 c
331 427.475 328.5375 429.9375 325.5 429.9375 c
322.4625 429.9375 320 427.475 320 424.4375 c
320 421.4 322.4625 418.9375 325.5 418.9375 c
s
325.5 424.4375 m
S
U
0 To
1 0 0 1 325.375 421.1875 0 Tp
TP
-2.25 0 Td
0 Tr
0 O
0 g
1 w
(5) Tx
(\r) TX 
TO
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 0 1440 a(Figure)c(16.1.2.)37 b(Midpoint)9 b(method.)18
b(Second-order)8 b(accuracy)h(is)h(obtained)f(by)h(using)f(the)h(initial)h
(derivative)f(at)0 1478 y(each)g(step)g(to)h(\256nd)g(a)g(point)f(halfway)g
(across)g(the)g(interval,)i(then)e(using)g(the)g(midpoint)g(derivative)g
(across)g(the)h(full)0 1515 y(width)e(of)h(the)f(interval.)16
b(In)10 b(the)f(\256gure,)h(\256lled)g(dots)f(represent)g(\256nal)g(function)
g(values,)g(while)h(open)e(dots)h(represent)0 1553 y(function)f(values)h
(that)h(are)f(discarded)f(once)g(their)i(derivatives)e(have)h(been)f
(calculated)h(and)f(used.)0 1644 y Fk(idea.)20 b(By)11 b(far)h(the)g(most)f
(often)g(used)h(is)g(the)g(classical)g Fe(fourth-or)n(der)e(Runge-Kutta)g
(formula)p Fk(,)0 1694 y(which)k(has)h(a)g(certain)f(sleekness)i(of)e(or)o
(ganization)f(about)h(it:)369 1793 y Fq(k)391 1799 y Fp(1)421
1793 y Fo(=)e Fq(hf)t Fo(\()p Fq(x)553 1799 y Fm(n)576 1793
y Fq(;)7 b(y)615 1799 y Fm(n)638 1793 y Fo(\))369 1876 y Fq(k)391
1882 y Fp(2)421 1876 y Fo(=)12 b Fq(hf)t Fo(\()p Fq(x)553 1882
y Fm(n)585 1876 y Fo(+)632 1848 y Fq(h)p 632 1867 24 2 v 634
1905 a Fo(2)661 1876 y Fq(;)7 b(y)700 1882 y Fm(n)731 1876
y Fo(+)778 1848 y Fq(k)800 1854 y Fp(1)p 778 1867 41 2 v 788
1905 a Fo(2)823 1876 y(\))369 1978 y Fq(k)391 1984 y Fp(3)421
1978 y Fo(=)12 b Fq(hf)t Fo(\()p Fq(x)553 1984 y Fm(n)585 1978
y Fo(+)632 1950 y Fq(h)p 632 1969 24 2 v 634 2007 a Fo(2)661
1978 y Fq(;)7 b(y)700 1984 y Fm(n)731 1978 y Fo(+)778 1950
y Fq(k)800 1956 y Fp(2)p 778 1969 41 2 v 788 2007 a Fo(2)823
1978 y(\))369 2055 y Fq(k)391 2061 y Fp(4)421 2055 y Fo(=)12
b Fq(hf)t Fo(\()p Fq(x)553 2061 y Fm(n)585 2055 y Fo(+)e Fq(h;)d(y)690
2061 y Fm(n)721 2055 y Fo(+)j Fq(k)785 2061 y Fp(3)803 2055
y Fo(\))325 2139 y Fq(y)345 2145 y Fm(n)p Fp(+1)421 2139 y
Fo(=)i Fq(y)485 2145 y Fm(n)517 2139 y Fo(+)564 2110 y Fq(k)586
2116 y Fp(1)p 564 2129 V 573 2167 a Fo(6)618 2139 y(+)665 2110
y Fq(k)687 2116 y Fp(2)p 665 2129 V 674 2167 a Fo(3)719 2139
y(+)766 2110 y Fq(k)788 2116 y Fp(3)p 766 2129 V 775 2167 a
Fo(3)820 2139 y(+)866 2110 y Fq(k)888 2116 y Fp(4)p 866 2129
V 876 2167 a Fo(6)921 2139 y(+)d Fq(O)q Fo(\()p Fq(h)1035 2121
y Fp(5)1054 2139 y Fo(\))189 b(\()p Fk(16.1.3)p Fo(\))83 2248
y Fk(The)16 b(fourth-order)d(Runge-Kutta)g(method)i(requires)g(four)f
(evaluations)g(of)h(the)g(right-)0 2298 y(hand)8 b(side)g(per)g(step)g
Fq(h)g Fk(\(see)h(Figure)f(16.1.3\).)14 b(This)8 b(will)f(be)h(superior)g(to)
f(the)h(midpoint)e(method)0 2348 y(\(16.1.2\))i Fe(if)f Fk(at)i(least)f
(twice)g(as)h(lar)o(ge)g(a)g(step)f(is)g(possible)f(with)g(\(16.1.3\))h(for)g
(the)g(same)i(accuracy)m(.)0 2398 y(Is)i(that)f(so?)19 b(The)12
b(answer)g(is:)17 b(often,)12 b(perhaps)g(even)g(usually)m(,)f(but)g(surely)g
(not)g(always!)19 b(This)0 2448 y(takes)e(us)g(back)g(to)f(a)i(central)e
(theme,)k(namely)d(that)f Fe(high)d(or)n(der)18 b Fk(does)f(not)f(always)h
(mean)0 2497 y Fe(high)12 b(accuracy)p Fk(.)31 b(The)16 b(statement)f
(\252fourth-order)e(Runge-Kutta)h(is)h(generally)f(superior)g(to)0
2547 y(second-order)r(\272)h(is)f(a)i(true)e(one,)j(but)d(you)g(should)g
(recognize)h(it)g(as)g(a)h(statement)f(about)f(the)p eop
%%Page: 712 3
bop 0 50 a Fk(712)189 b Fj(Chapter)11 b(16.)55 b(Integration)11
b(of)f(Ordinary)h(Differential)h(Equations)p 0 68 1395 2 v
0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial 285 589 a @beginspecial
147 @llx 427 @lly 345 @urx 533 @ury 1980 @rwi @setspecial
%%BeginDocument: epsf/fig16x1x3.ps
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
/TX {pop} def
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def	% - cf flatness
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
[/_Symbol/Symbol 0 0 0 TZ
[/_Times-Italic/Times-Italic 0 0 1 TZ
[/_Times-Roman/Times-Roman 0 0 1 TZ
0 A
u
0 O
0 g
0 R
0 G
0 i 0 J 0 j 0.5 w 4 M []0 d
0 D
176.125 509.25 m
177.2295 509.25 178.125 510.1455 178.125 511.25 c
178.125 512.3545 177.2295 513.25 176.125 513.25 c
175.0205 513.25 174.125 512.3545 174.125 511.25 c
174.125 510.1455 175.0205 509.25 176.125 509.25 c
b
176.125 511.25 m
B
U
0 To
1 0 0 1 176.875 516.0625 0 Tp
TP
-2.25 0 Td
0 Tr
1 w
/_Times-Roman 9 Tf
0 Ts
100 Tz
0 Tt
1 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 Tq
0 0 Tl
0 Tc
0 Tw
(1) Tx
(\r) TX 
TO
0 R
0 G
0.5 w [3 2 ]0 d
149.7326 530.5658 m
197.2459 491.1902 292.7725 447.8144 342.0609 435.4767 c
S
1 w []0 d
231.109 487.1213 m
259.0657 474.6524 l
S
229.6652 472.4211 m
257.8845 459.9521 l
S
298.8352 444.9893 m
327.1857 435.8017 l
S
u
0.5 w
244.5 479.125 m
245.6045 479.125 246.5 480.0205 246.5 481.125 c
246.5 482.2295 245.6045 483.125 244.5 483.125 c
243.3955 483.125 242.5 482.2295 242.5 481.125 c
242.5 480.0205 243.3955 479.125 244.5 479.125 c
s
244.5 481.125 m
S
U
u
244.125 464 m
245.2295 464 246.125 464.8955 246.125 466 c
246.125 467.1045 245.2295 468 244.125 468 c
243.0205 468 242.125 467.1045 242.125 466 c
242.125 464.8955 243.0205 464 244.125 464 c
s
244.125 466 m
S
U
u
312.8125 438.375 m
313.917 438.375 314.8125 439.2705 314.8125 440.375 c
314.8125 441.4795 313.917 442.375 312.8125 442.375 c
311.708 442.375 310.8125 441.4795 310.8125 440.375 c
310.8125 439.2705 311.708 438.375 312.8125 438.375 c
s
312.8125 440.375 m
S
U
u
0 O
0 g
313.25 442.4625 m
314.3545 442.4625 315.25 443.358 315.25 444.4625 c
315.25 445.567 314.3545 446.4625 313.25 446.4625 c
312.1455 446.4625 311.25 445.567 311.25 444.4625 c
311.25 443.358 312.1455 442.4625 313.25 442.4625 c
b
313.25 444.4625 m
B
U
0 To
1 0 0 1 244.75 484.8125 0 Tp
TP
-2.25 0 Td
0 Tr
1 w
(2) Tx
(\r) TX 
TO
0 To
1 0 0 1 244.5 454.8125 0 Tp
TP
-2.25 0 Td
0 Tr
(3) Tx
(\r) TX 
TO
0 To
1 0 0 1 313.375 429.5625 0 Tp
TP
-2.25 0 Td
0 Tr
(4) Tx
(\r) TX 
TO
0 To
1 0 0 1 316.125 450.4375 0 Tp
TP
-8.656 0 Td
0 Tr
/_Times-Italic 9 Tf
(y) Tx
/_Times-Italic 6.5 Tf
-1.5 Ts
(n) Tx
/_Times-Roman 6.5 Tf
( ) Tx
/_Symbol 6.5 Tf
(+) Tx
/_Times-Roman 6.5 Tf
( 1) Tx
(\r) TX 
TO
0 To
1 0 0 1 174.8125 503.08 0 Tp
TP
-3.6223 0 Td
0 Tr
/_Times-Italic 9 Tf
0 Ts
(y) Tx
/_Times-Italic 6.5 Tf
-1.5 Ts
(n) Tx
(\r) TX 
TO
0 R
0 G
158 523.5 m
193.875 499.5 l
S
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 0 651 a Fd(Figure)e(16.1.3.)35 b(Fourth-order)9
b(Runge-Kutta)g(method.)16 b(In)10 b(each)f(step)h(the)g(derivative)f(is)h
(evaluated)f(four)h(times:)0 689 y(once)e(at)h(the)f(initial)i(point,)f
(twice)g(at)g(trial)h(midpoints,)e(and)g(once)g(at)h(a)g(trial)g(endpoint.)k
(From)c(these)f(derivatives)g(the)0 726 y(\256nal)j(function)e(value)g
(\(shown)g(as)i(a)f(\256lled)h(dot\))f(is)g(calculated.)18
b(\(See)10 b(text)h(for)f(details.\))0 825 y Fk(contemporary)f(practice)g(of)
g(science)h(rather)f(than)g(as)g(a)h(statement)f(about)f(strict)h
(mathematics.)0 875 y(That)f(is,)g(it)e(re\257ects)j(the)e(nature)g(of)g(the)
h(problems)f(that)f(contemporary)h(scientists)g(like)g(to)g(solve.)83
925 y(For)i(many)h(scienti\256c)g(users,)g(fourth-order)e(Runge-Kutta)g(is)h
(not)g(just)g(the)g(\256rst)g(word)g(on)0 975 y(ODE)i(integrators,)e(but)h
(the)g(last)g(word)g(as)h(well.)k(In)10 b(fact,)h(you)f(can)h(get)f(pretty)g
(far)g(on)g(this)g(old)0 1025 y(workhorse,)i(especially)h(if)f(you)f(combine)
h(it)g(with)f(an)i(adaptive)f(stepsize)g(algorithm.)20 b(Keep)0
1074 y(in)12 b(mind,)h(however)n(,)g(that)f(the)h(old)e(workhorse')n(s)h
(last)g(trip)f(may)i(well)f(be)h(to)f(take)g(you)g(to)g(the)0
1124 y(poorhouse:)20 b(Bulirsch-Stoer)12 b(or)i(predictor)o(-corrector)e
(methods)h(can)i(be)f(very)f(much)h(more)0 1174 y(ef)o(\256cient)g(for)f
(problems)g(where)h(very)f(high)g(accuracy)i(is)e(a)h(requirement.)25
b(Those)14 b(methods)0 1224 y(are)f(the)g(high-strung)d(racehorses.)23
b(Runge-Kutta)12 b(is)g(for)g(ploughing)e(the)j(\256elds.)22
b(However)n(,)0 1274 y(even)12 b(the)f(old)f(workhorse)g(is)h(more)h(nimble)e
(with)g(new)i(horseshoes.)18 b(In)11 b Fn(x)p Fk(16.2)g(we)g(will)f(give)0
1323 y(a)g(modern)g(implementation)f(of)g(a)i(Runge-Kutta)d(method)i(that)f
(is)g(quite)g(competitive)g(as)i(long)0 1373 y(as)17 b(very)f(high)f
(accuracy)j(is)e(not)g(required.)32 b(An)16 b(excellent)g(discussion)g(of)g
(the)g(pitfalls)e(in)0 1423 y(constructing)f(a)i(good)f(Runge-Kutta)f(code)i
(is)f(given)g(in)864 1419 y Fi([3)r(])903 1423 y Fk(.)83 1473
y(Here)j(is)e(the)h(routine)e(for)i(carrying)f(out)g(one)h(classical)h
(Runge-Kutta)d(step)i(on)f(a)i(set)0 1523 y(of)c Fl(n)f Fk(dif)o(ferential)g
(equations.)23 b(Y)l(ou)12 b(input)g(the)g(values)h(of)g(the)g(independent)f
(variables,)i(and)0 1573 y(you)d(get)g(out)f(new)i(values)g(which)e(are)j
(stepped)e(by)g(a)h(stepsize)g Fl(h)f Fk(\(which)g(can)h(be)f(positive)f(or)0
1622 y(negative\).)19 b(Y)l(ou)11 b(will)g(notice)g(that)g(the)h(routine)e
(requires)i(you)f(to)g(supply)g(not)g(only)f(function)0 1672
y Fl(derivs)h Fk(for)g(calculating)h(the)g(right-hand)e(side,)j(but)e(also)h
(values)g(of)g(the)g(derivatives)f(at)h(the)0 1722 y(starting)e(point.)18
b(Why)11 b(not)g(let)g(the)g(routine)f(call)i Fl(derivs)e Fk(for)h(this)g
(\256rst)g(value?)19 b(The)12 b(answer)0 1772 y(will)h(become)j(clear)f(only)
e(in)h(the)h(next)f(section,)h(but)f(in)g(brief)g(is)g(this:)22
b(This)14 b(call)h(may)g(not)0 1822 y(be)g(your)f(only)g(one)h(with)f(these)i
(starting)d(conditions.)28 b(Y)l(ou)14 b(may)i(have)f(taken)g(a)h(previous)0
1871 y(step)11 b(with)f(too)g(lar)o(ge)i(a)f(stepsize,)i(and)e(this)f(is)h
(your)f(replacement.)19 b(In)11 b(that)f(case,)k(you)c(do)h(not)0
1921 y(want)j(to)g(call)h Fl(derivs)f Fk(unnecessarily)g(at)h(the)f(start.)28
b(Note)15 b(that)f(the)g(routine)f(that)h(follows)0 1971 y(has,)k(therefore,)
g(only)e(three)g(calls)g(to)g Fl(derivs)o Fk(.)0 2062 y Fc(#include)f
("nrutil.h")0 2136 y(void)h(rk4\(float)f(y[],)h(float)g(dydx[],)f(int)h(n,)h
(float)f(x,)h(float)f(h,)h(float)f(yout[],)66 2174 y(void)h(\(*derivs\))o
(\(fl)o(oat)o(,)e(float)g([],)i(float)f([]\)\))0 2211 y Fb(Given)11
b(values)g(fo)o(r)g(the)g(va)o(riables)h Fa(y[1..n])c Fb(and)k(their)f
(derivatives)g Fa(dydx[1..n])c Fb(kno)o(wn)12 b(at)f Fa(x)o
Fb(,)h(use)e(the)0 2248 y(fourth-o)o(rder)k(Runge-Kutta)f(metho)q(d)i(to)f
(advance)h(the)f(solution)h(over)g(an)g(interval)g Fa(h)g Fb(and)g(return)g
(the)0 2286 y(incremented)f(va)o(riables)h(as)f Fa(yout[1..n)o(])m
Fb(,)h(which)g(need)f(not)g(b)q(e)g(a)h(distinct)f(a)o(rra)o(y)h(from)f
Fa(y)o Fb(.)k(The)c(user)0 2323 y(supplies)f(the)f(routine)h
Fa(derivs\(x,)o(y,d)o(yd)o(x\))m Fb(,)f(which)i(returns)e(derivatives)h
Fa(dydx)e Fb(at)h Fa(x)p Fb(.)0 2360 y Fc({)66 2398 y(int)17
b(i;)66 2435 y(float)f(xh,hh,h6,*d)o(ym,)o(*dy)o(t,)o(*yt)o(;)66
2510 y(dym=vector\()o(1,n)o(\);)66 2547 y(dyt=vector\()o(1,n)o(\);)p
eop
%%Page: 713 4
bop 426 50 a Fj(16.1)10 b(Runge-Kutta)g(Method)461 b Fk(713)p
0 68 1395 2 v 0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial
66 180 a Fc(yt=vector\(1)o(,n\))o(;)66 218 y(hh=h*0.5;)66 255
y(h6=h/6.0;)66 293 y(xh=x+hh;)66 330 y(for)17 b(\(i=1;i<=n;)o(i++)o(\))e
(yt[i]=y[i)o(]+h)o(h*d)o(ydx)o([i)o(];)128 b Fb(First)13 b(step.)66
367 y Fc(\(*derivs\)\(x)o(h,y)o(t,d)o(yt\))o(;)481 b Fb(Second)12
b(step.)66 405 y Fc(for)17 b(\(i=1;i<=n;)o(i++)o(\))e(yt[i]=y[i)o(]+h)o(h*d)o
(yt[)o(i])o(;)66 442 y(\(*derivs\)\(x)o(h,y)o(t,d)o(ym\))o(;)481
b Fb(Third)14 b(step.)66 479 y Fc(for)j(\(i=1;i<=n;)o(i++)o(\))e({)133
517 y(yt[i]=y[i])o(+h*)o(dy)o(m[i)o(];)133 554 y(dym[i])g(+=)i(dyt[i];)66
591 y(})66 629 y(\(*derivs\)\(x)o(+h,)o(yt,)o(dyt)o(\);)463
b Fb(F)o(ourth)13 b(step.)66 666 y Fc(for)k(\(i=1;i<=n;)o(i++)o(\))534
b Fb(Accumulate)7 b(increments)h(with)g(p)o(rop)q(er)981 703
y(w)o(eights.)-968 b Fc(yout[i]=y[)o(i]+)o(h6)o(*\(d)o(ydx)o([i])o(+dy)o(t[)o
(i]+)o(2.0)o(*dy)o(m[i)o(]\))o(;)66 741 y(free_vector)o(\(yt)o(,1,)o(n\);)66
778 y(free_vector)o(\(dy)o(t,1)o(,n\))o(;)66 816 y(free_vector)o(\(dy)o(m,1)o
(,n\))o(;)0 853 y(})83 975 y Fk(The)14 b(Runge-Kutta)e(method)h(treats)h
(every)g(step)f(in)g(a)h(sequence)h(of)e(steps)h(in)f(identical)0
1024 y(manner)n(.)45 b(Prior)19 b(behavior)g(of)h(a)g(solution)e(is)i(not)f
(used)h(in)f(its)h(propagation.)42 b(This)20 b(is)0 1074 y(mathematically)8
b(proper)n(,)h(since)f(any)h(point)d(along)i(the)g(trajectory)f(of)h(an)g
(ordinary)f(dif)o(ferential)0 1124 y(equation)g(can)h(serve)g(as)g(an)g
(initial)e(point.)12 b(The)d(fact)e(that)g(all)g(steps)h(are)g(treated)g
(identically)e(also)0 1174 y(makes)12 b(it)d(easy)j(to)e(incorporate)f
(Runge-Kutta)h(into)f(relatively)g(simple)i(\252driver)r(\272)f(schemes.)83
1224 y(W)m(e)f(consider)f(adaptive)g(stepsize)h(control,)e(discussed)i(in)e
(the)i(next)e(section,)i(an)g(essential)0 1273 y(for)f(serious)h(computing.)k
(Occasionally)m(,)c(however)n(,)h(you)e(just)g(want)g(to)g(tabulate)h(a)g
(function)e(at)0 1323 y(equally)g(spaced)h(intervals,)f(and)g(without)f
(particularly)f(high)h(accuracy)m(.)16 b(In)7 b(the)g(most)g(common)0
1373 y(case,)18 b(you)d(want)g(to)f(produce)i(a)f(graph)g(of)g(the)g
(function.)28 b(Then)16 b(all)f(you)f(need)i(may)g(be)f(a)0
1423 y(simple)9 b(driver)g(program)g(that)g(goes)h(from)f(an)h(initial)d
Fq(x)806 1429 y Fm(s)833 1423 y Fk(to)i(a)h(\256nal)f Fq(x)1010
1429 y Fm(f)1041 1423 y Fk(in)g(a)h(speci\256ed)g(number)0
1473 y(of)h(steps.)17 b(T)m(o)12 b(check)f(accuracy)m(,)j(double)c(the)h
(number)g(of)f(steps,)i(repeat)f(the)g(integration,)f(and)0
1522 y(compare)i(results.)17 b(This)10 b(approach)i(surely)e(does)h(not)f
(minimize)h(computer)g(time,)g(and)g(it)f(can)0 1572 y(fail)f(for)f(problems)
h(whose)h(nature)f Fe(r)n(equir)n(es)h Fk(a)g(variable)f(stepsize,)h(but)f
(it)f(may)i(well)f(minimize)0 1622 y(user)j(ef)o(fort.)19 b(On)12
b(small)f(problems,)h(this)f(may)h(be)g(the)g(paramount)f(consideration.)83
1672 y(Here)g(is)f(such)g(a)h(driver)n(,)f(self-explanatory)m(,)g(which)g
(tabulates)g(the)g(integrated)f(functions)0 1722 y(in)17 b(the)g(global)f
(arrays)h Fl(*x)g Fk(and)g Fl(**y)p Fk(;)j(be)d(sure)h(to)e(allocate)h
(memory)h(for)f(them)g(with)f(the)0 1772 y(routines)e Fl(vector\(\))g
Fk(and)h Fl(matrix\(\))o Fk(,)i(respectively)m(.)0 1875 y Fc(#include)e
("nrutil.h")0 1949 y(float)h(**y,*xx;)371 b Fb(F)o(o)o(r)13
b(communication)g(back)g(to)f Fc(main)n Fb(.)0 2024 y Fc(void)k(rkdumb\(floa)
o(t)f(vstart[],)f(int)j(nvar,)e(float)h(x1,)h(float)f(x2,)g(int)h(nstep,)66
2062 y(void)g(\(*derivs\))o(\(fl)o(oat)o(,)e(float)g([],)i(float)f([]\)\))0
2099 y Fb(Sta)o(rting)g(from)g(initial)j(values)e Fa(vstart[1)o(..n)o(var)o
(])d Fb(kno)o(wn)j(at)f Fa(x1)g Fb(use)g(fourth-o)o(rder)g(Runge-Kutta)0
2136 y(to)g(advance)h Fa(nstep)e Fb(equal)i(increments)f(to)g
Fa(x2)o Fb(.)i(The)e(user-supplied)h(routine)g Fa(derivs\(x,)o(v,d)o(vdx)o
(\))0 2174 y Fb(evaluates)e(derivatives.)j(Results)c(a)o(re)h(sto)o(red)f(in)
i(the)g(global)f(va)o(riables)h Fa(y[1..nvar])o([1.)o(.n)o(ste)o(p+1)o(])0
2211 y Fb(and)h Fa(xx[1..ns)o(tep)o(+1])l Fb(.)0 2248 y Fc({)66
2286 y(void)g(rk4\(float)d(y[],)i(float)g(dydx[],)f(int)i(n,)g(float)f(x,)h
(float)e(h,)i(float)f(yout[],)133 2323 y(void)g(\(*derivs\)\()o(flo)o(at,)e
(float)i([],)g(float)g([]\)\);)66 2360 y(int)h(i,k;)66 2398
y(float)f(x,h;)66 2435 y(float)g(*v,*vout,*d)o(v;)66 2510 y(v=vector\(1,)o
(nva)o(r\);)66 2547 y(vout=vector)o(\(1,)o(nva)o(r\);)p eop
%%Page: 714 5
bop 0 50 a Fk(714)194 b Fj(Chapter)10 b(16.)52 b(Integration)11
b(of)g(Ordinary)f(Differential)i(Equations)p 0 68 1395 2 v
0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial 66 180 a Fc(dv=vector\(1)o
(,nv)o(ar\))o(;)66 218 y(for)17 b(\(i=1;i<=nv)o(ar;)o(i++)o(\))e({)148
b Fb(Load)14 b(sta)o(rting)f(values.)133 255 y Fc(v[i]=vstar)o(t[i)o(];)133
293 y(y[i][1]=v[)o(i];)66 330 y(})66 367 y(xx[1]=x1;)66 405
y(x=x1;)66 442 y(h=\(x2-x1\)/n)o(ste)o(p;)66 479 y(for)k(\(k=1;k<=ns)o(tep)o
(;k+)o(+\))d({)131 b Fb(T)m(ak)o(e)14 b Fc(nstep)e Fb(steps.)133
517 y Fc(\(*derivs\)\()o(x,v)o(,d)o(v\);)133 554 y(rk4\(v,dv,n)o(var)o(,x)o
(,h,)o(vou)o(t,d)o(eri)o(vs)o(\);)133 591 y(if)17 b(\(\(float\)\(x)o(+h)o(\))
e(==)i(x\))g(nrerror\(")o(Ste)o(p)e(size)h(too)g(small)g(in)h(routine)e
(rkdumb"\);)133 629 y(x)i(+=)g(h;)133 666 y(xx[k+1]=x;)308
b Fb(Sto)o(re)13 b(intermediate)g(steps.)133 703 y Fc(for)j(\(i=1;i<=nva)o
(r;i)o(++\))e({)199 741 y(v[i]=vout[i)o(];)199 778 y(y[i][k+1]=v)o([i])o(;)
133 816 y(})66 853 y(})66 890 y(free_vector)o(\(dv)o(,1,)o(nva)o(r\);)66
928 y(free_vector)o(\(vo)o(ut,)o(1,n)o(var)o(\);)66 965 y(free_vector)o(\(v,)
o(1,n)o(var)o(\);)0 1002 y(})0 1215 y Fi(CITED)f(REFERENCES)g(AND)f(FUR)o
(THER)i(READING:)0 1265 y(Abramowitz,)f(M.,)e(and)h(Stegun,)h(I.A.)f(1964,)h
Fh(Handbook)g(of)e(Mathematical)j(Functions)p Fi(,)f(Applied)g(Mathe-)80
1306 y(matics)d(Series,)i(V)n(olume)h(55)e(\(W)o(ashington:)j(National)f
(Bureau)g(of)e(Standards;)j(reprinted)f(1968)g(by)80 1348 y(Dover)g
(Publications,)j(New)d(Y)m(ork\),)g Fn(x)p Fi(25.5.)h([1])0
1398 y(Gear)n(,)8 b(C.W)n(.)f(1971,)i Fh(Numerical)f(Initial)h(V)o(alue)g
(Problems)e(in)h(Ordinary)g(Differential)i(Equations)f Fi(\(Englewood)80
1439 y(Clif)o(fs,)14 b(NJ:)e(Prentice-Hall\),)k(Chapter)f(2.)f([2])0
1489 y(Shampine,)g(L.F)l(.,)e(and)h(W)o(atts,)f(H.A.)f(1977,)i(in)f
Fh(Mathematical)h(Software)g(III)p Fi(,)f(J.R.)f(Rice,)h(ed.)g(\(New)f(Y)m
(ork:)80 1531 y(Academic)17 b(Press\),)g(pp.)g(257\261275)q(;)i(1979,)g
Fh(Applied)g(Mathematics)f(and)g(Computation)p Fi(,)i(vol.)d(5,)80
1572 y(pp.)e(93\261121.)j([3])0 1622 y(Rice,)10 b(J.R.)g(1983,)h
Fh(Numerical)g(Methods,)g(Software,)h(and)e(Analysis)h Fi(\(New)e(Y)m(ork:)h
(McGraw-Hill\),)h Fn(x)p Fi(9.2.)0 1874 y Fg(16.2)16 b(Adaptive)f(Stepsize)f
(Control)j(for)e(Runge-Kutta)83 1999 y Fk(A)6 b(good)g(ODE)g(integrator)g
(should)g(exert)g(some)g(adaptive)g(control)g(over)g(its)g(own)g(progress,)0
2049 y(making)i(frequent)g(changes)h(in)f(its)f(stepsize.)15
b(Usually)8 b(the)g(purpose)g(of)g(this)f(adaptive)h(stepsize)0
2099 y(control)13 b(is)i(to)f(achieve)i(some)f(predetermined)g(accuracy)h(in)
e(the)h(solution)e(with)g(minimum)0 2149 y(computational)g(ef)o(fort.)26
b(Many)15 b(small)f(steps)g(should)f(tiptoe)g(through)f(treacherous)j
(terrain,)0 2199 y(while)g(a)g(few)h(great)f(strides)g(should)f(speed)i
(through)d(smooth)i(uninteresting)e(countryside.)0 2248 y(The)j(resulting)e
(gains)i(in)f(ef)o(\256ciency)h(are)h(not)d(mere)j(tens)f(of)f(percents)h(or)
f(factors)h(of)f(two;)0 2298 y(they)h(can)g(sometimes)h(be)g(factors)f(of)f
(ten,)j(a)f(hundred,)g(or)f(more.)33 b(Sometimes)16 b(accuracy)0
2348 y(may)d(be)h(demanded)f(not)f(directly)g(in)g(the)h(solution)e(itself,)i
(but)f(in)g(some)i(related)e(conserved)0 2398 y(quantity)k(that)h(can)i(be)f
(monitored.)83 2448 y(Implementation)7 b(of)h(adaptive)g(stepsize)h(control)e
(requires)h(that)g(the)g(stepping)f(algorithm)0 2497 y(signal)g(information)g
(abou)o(t)g(i)o(ts)g(p)o(erformance,)f(most)h(important,)f(an)h(estimate)g
(of)g(its)g(truncation)0 2547 y(error)n(.)14 b(In)8 b(this)g(section)g(we)h
(will)e(learn)i(how)f(such)h(information)d(can)k(be)e(obtained.)14
b(Obviously)m(,)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
