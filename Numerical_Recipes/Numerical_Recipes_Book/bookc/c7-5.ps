%!PS-Adobe-2.0
%%Creator: dvips 5.47 Copyright 1986-91 Radical Eye Software
%%Pages: 5 1
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Roman Helvetica-Oblique Helvetica Helvetica-BoldOblique
%%+ Times-Italic
%%EndComments
%%BeginProcSet: tex.pro
/TeXDict 200 dict def TeXDict begin /N /def load def /B{bind def}N /S /exch
load def /X{S N}B /TR /translate load N /isls false N /vsize 10 N /@rigin{
isls{[0 1 -1 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
Resolution VResolution vsize neg mul TR matrix currentmatrix dup dup 4 get
round 4 exch put dup dup 5 get round 5 exch put setmatrix}N /@letter{/vsize 10
N}B /@landscape{/isls true N /vsize -1 N}B /@a4{/vsize 10.6929133858 N}B /@a3{
/vsize 15.5531 N}B /@ledger{/vsize 16 N}B /@legal{/vsize 13 N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0 0]N
/FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn begin
/FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X array
/BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo setfont}2
array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx FMat N df-tail}
B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{pop nn dup definefont
setfont}B /ch-width{ch-data dup length 5 sub get}B /ch-height{ch-data dup
length 4 sub get}B /ch-xoff{128 ch-data dup length 3 sub get sub}B /ch-yoff{
ch-data dup length 2 sub get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B
/ch-image{ch-data dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0
N /rw 0 N /rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S
dup /base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0
ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{ch-image}
imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn /base get cc ctr
put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1 sub dup 2 index S get sf
div put}if put /ctr ctr 1 add N}B /I{cc 1 add D}B /bop{userdict /bop-hook
known{bop-hook}if /SI save N @rigin 0 0 moveto}N /eop{clear SI restore
showpage userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if /VResolution X /Resolution X 1000 div /DVImag X /IE 256
array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for}N /p /show load N
/RMat[1 0 0 -1 0 0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X
/rulex X V}B /V statusdict begin /product where{pop product dup length 7 ge{0
7 getinterval(Display)eq}{pop false}ifelse}{false}ifelse end{{gsave TR -.1 -.1
TR 1 1 scale rulex ruley false RMat{BDot}imagemask grestore}}{{gsave TR -.1
-.1 TR rulex ruley scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /a{
moveto}B /delta 0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{
S p tail}B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B
/j{3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w
}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{clear SS restore}B end
%%EndProcSet
%%BeginProcSet: texps.pro
TeXDict begin /rf{655360 div mul Resolution mul 7227 div /PixPerEm X findfont
dup length 1 add dict /nn X{1 index /FID ne{nn 3 1 roll put}{pop pop}ifelse}
forall 256 dict begin nn /Encoding get 0 1 255{2 copy get 3 index 2 index get
1000 mul PixPerEm div def pop}for pop pop nn /Metrics currentdict put end
/fontname X /nn dup nn definefont[PixPerEm 0 0 PixPerEm neg 0 0]makefont N
fontname{/foo setfont}2 array copy cvx N fontname load 0 nn put}N
/ObliqueSlant{dup sin S cos div neg}B
/SlantFont{/foo X[1 0 foo 1 0 0] TransFont}N
/ExtendFont{/foo X 3 2 roll[S{foo div}forall]3 1 roll[foo 0 0 1 0 0]
TransFont}N
/ExpandFont{/foo X 3 2 roll[S{foo div}forall]3 1 roll[foo 0 0 foo 0 0]
TransFont}N
/TransFont{S findfont S makefont dup length dict /nn X{1 index
/FID ne{nn 3 1 roll put}{pop pop}ifelse}forall dup nn definefont pop}N end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N /vs
792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP false N /BBcalc false N
/p 3 def}B /@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{
@scaleunit div /vsc X}B /@hsize{/hs X /CLIP true N}B /@vsize{/vs X /CLIP true
N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{10 div /rwi X}
B /@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X /BBcalc true N}B
/magscale true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{md begin /letter{}N /note{}N /legal{}N /od{txpose 1 0 mtx
defaultmatrix dtransform S atan/pa X newpath clippath mark{transform{
itransform moveto}}{transform{itransform lineto}}{6 -2 roll transform 6 -2
roll transform 6 -2 roll transform{itransform 6 2 roll itransform 6 2 roll
itransform 6 2 roll curveto}}{{closepath}}pathforall newpath counttomark array
astore /gc xdf pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{
PaintBlack}if}N /txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR
pop 1 -1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0 TR}if
yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR pop pop 270
rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip not
and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg sub neg 0 TR}if yflip xflip
not and{TR pop pop 270 rotate ppr 2 get ppr 0 get neg sub neg 0 S TR}if}
ifelse scaleby96{ppr aload pop 4 -1 roll add 2 div 3 1 roll add 2 div 2 copy
TR .96 dup scale neg S neg S TR}if}N /cp{pop pop showpage pm restore}N end}if}
if}N /normalscale{Resolution 72 div VResolution 72 div neg scale magscale{
DVImag dup scale}if}N /psfts{S 65536 div N}N /startTexFig{/psf$SavedState save
N userdict maxlength dict begin /magscale false def normalscale currentpoint
TR /psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx psf$llx
sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy scale psf$cx
psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR /showpage{}N
/erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{psf$llx psf$lly
psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2 roll moveto 6 -1 roll
S lineto S lineto S lineto closepath clip newpath moveto}N /endTexFig{end
psf$SavedState restore}N /@beginspecial{SDict begin /SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults}N /@setspecial{CLIP{newpath 0 0
moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR
hsc vsc scale ang rotate BBcalc{rwi urx llx sub div dup scale llx neg lly neg
TR}if /showpage{}N /erasepage{}N /copypage{}N newpath}N /@endspecial{grestore
clear SpecialSave restore end}N /@defspecial{SDict begin}N /@fedspecial{end}B
/li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{/SaveX currentpoint /SaveY X N 1
setlinecap newpath}N /st{stroke SaveX SaveY moveto}N /fil{fill SaveX SaveY
moveto}N /ellipse{/endangle X /startangle X /yrad X /xrad X /savematrix matrix
currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc savematrix
setmatrix}N end
%%EndProcSet
TeXDict begin 1000 300 300 @start /Fa 1 1 df<FFFFC0FFFFC012027D8618>0
D E /Fb [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 8 11 14 17 17 28 26 11 11 11 17 19 8 11 8 9 17
17 17 17 17 17 17 17 17 17 9 9 19 19 19 15 31 24 22 22 24 20
18 24 24 11 13 24 20 30 24 24 18 24 22 18 20 24 24 31 24 24
20 11 9 11 16 17 11 15 17 15 17 15 11 17 17 9 9 17 9 26 17
17 17 17 11 13 9 17 17 24 17 17 15 16 7 16 18 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 11 17
17 6 17 17 17 17 6 15 17 11 11 18 18 0 17 17 17 8 0 15 12 11
15 15 17 33 33 0 15 0 11 11 11 11 11 11 11 11 0 11 11 0 11
11 11 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 30 0 9 0 0 0 0 20
24 30 10 0 0 0 0 0 22 0 0 0 9 0 0 9 17 24 17 0 0 0 0 ] /Times-Roman
1000 524288 rf /Fc [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 9 12 16 19 19 31 29 12 12 12 19 25
9 12 9 10 19 19 19 19 19 19 19 19 19 19 12 12 25 25 25 19 34
23 23 25 27 23 23 27 27 12 17 25 21 31 25 27 23 27 23 19 21
27 23 31 23 21 21 15 10 15 16 19 12 19 19 17 19 17 10 19 19
10 10 17 10 27 19 19 19 19 15 15 10 19 17 25 17 17 15 15 10
15 20 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 15 19 19 6 19 19 19 19 8 21 19 12 12 19 19 0
19 19 19 9 0 20 13 12 21 21 19 33 37 0 19 0 12 12 12 12 12
12 12 12 0 12 12 0 12 12 12 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 33 0 10 0 0 0 0 21 27 35 12 0 0 0 0 0 25 0 0 0 10 0 0 10
19 25 19 0 0 0 0 ] /Times-Italic 1000 589824 rf /Fd [ 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9
12 15 19 19 31 29 12 12 12 19 21 9 12 9 10 19 19 19 19 19 19
19 19 19 19 10 10 21 21 21 17 34 27 25 25 27 23 21 27 27 12
15 27 23 33 27 27 21 27 25 21 23 27 27 35 27 27 23 12 10 12
18 19 12 17 19 17 19 17 12 19 19 10 10 19 10 29 19 19 19 19
12 15 10 19 19 27 19 19 17 18 7 18 20 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 12 19 19 6 19
19 19 19 7 17 19 12 12 21 21 0 19 19 19 9 0 17 13 12 17 17
19 37 37 0 17 0 12 12 12 12 12 12 12 12 0 12 12 0 12 12 12
37 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 33 0 10 0 0 0 0 23 27 33
12 0 0 0 0 0 25 0 0 0 10 0 0 10 19 27 19 0 0 0 0 ] /Times-Roman
1000 589824 rf /Fe [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 17 21 30 35 35 55 45 17 21 21 24
36 17 21 17 17 35 35 35 35 35 35 35 35 35 35 21 21 36 36 36
38 61 45 45 45 45 42 38 48 45 17 35 45 38 52 45 48 42 48 45
42 38 45 42 59 42 42 38 21 17 21 36 35 17 35 38 35 38 35 21
38 38 17 17 35 17 55 38 38 38 38 24 35 21 38 35 48 35 35 31
24 17 24 36 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 21 35 35 10 35 35 35 35 15 31 35 21 21
38 38 0 35 35 35 17 0 35 22 17 31 31 35 62 62 0 38 0 21 21
21 21 21 21 21 21 0 21 21 0 21 21 21 62 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 62 0 23 0 0 0 0 38 48 62 23 0 0 0 0 0 55 0 0 0
17 0 0 17 38 59 38 0 0 0 0 ] /Helvetica-BoldOblique 1000 983040
rf /Ff [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 9 9 12 18 18 30 22 7 11 11 13 19 9 11 9 9 18
18 18 18 18 18 18 18 18 18 9 9 19 19 19 18 34 22 22 24 24 22
20 26 24 9 17 22 18 28 24 26 22 26 24 22 20 24 22 31 22 22
20 9 9 9 16 18 7 18 18 17 18 18 9 18 18 7 7 17 7 28 18 18 18
18 11 17 9 18 17 24 17 17 17 11 9 11 19 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 11 18 18 6
18 18 18 18 6 11 18 11 11 17 17 0 18 18 18 9 0 18 12 7 11 11
18 33 33 0 20 0 11 11 11 11 11 11 11 11 0 11 11 0 11 11 11
33 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 33 0 12 0 0 0 0 18 26 33
12 0 0 0 0 0 30 0 0 0 9 0 0 7 20 31 20 0 0 0 0 ] /Helvetica-Oblique
1000 524288 rf /Fg [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 12 18 18 30 22 7 11 11 13 19
9 11 9 9 18 18 18 18 18 18 18 18 18 18 9 9 19 19 19 18 34 22
22 24 24 22 20 26 24 9 17 22 18 28 24 26 22 26 24 22 20 24
22 31 22 22 20 9 9 9 16 18 7 18 18 17 18 18 9 18 18 7 7 17
7 28 18 18 18 18 11 17 9 18 17 24 17 17 17 11 9 11 19 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 11 18 18 6 18 18 18 18 6 11 18 11 11 17 17 0 18 18 18 9 0
18 12 7 11 11 18 33 33 0 20 0 11 11 11 11 11 11 11 11 0 11
11 0 11 11 11 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 33 0 12 0
0 0 0 18 26 33 12 0 0 0 0 0 30 0 0 0 9 0 0 7 20 31 20 0 0 0
0 ] /Helvetica 1000 524288 rf /Fh [ 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 10 10 13 21 21 33 25
8 12 12 15 22 10 12 10 10 21 21 21 21 21 21 21 21 21 21 10
10 22 22 22 21 38 25 25 27 27 25 23 29 27 10 19 25 21 31 27
29 25 29 27 25 23 27 25 35 25 25 23 10 10 10 18 21 8 21 21
19 21 21 10 21 21 8 8 19 8 31 21 21 21 21 12 19 10 21 19 27
19 19 19 12 10 12 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 12 21 21 6 21 21 21 21 7 12 21
12 12 19 19 0 21 21 21 10 0 20 13 8 12 12 21 37 37 0 23 0 12
12 12 12 12 12 12 12 0 12 12 0 12 12 12 37 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 37 0 14 0 0 0 0 21 29 37 14 0 0 0 0 0 33 0
0 0 10 0 0 8 23 35 23 0 0 0 0 ] /Helvetica-Oblique 1000 589824
rf /Fi [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 10 14 17 21 21 35 32 14 14 14 21 23 10 14 10
12 21 21 21 21 21 21 21 21 21 21 12 12 23 23 23 18 38 30 28
28 30 25 23 30 30 14 16 30 25 37 30 30 23 30 28 23 25 30 30
39 30 30 25 14 12 14 19 21 14 18 21 18 21 18 14 21 21 12 12
21 12 32 21 21 21 21 14 16 12 21 21 30 21 21 18 20 8 20 22
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 14 21 21 7 21 21 21 21 7 18 21 14 14 23 23 0 21 21
21 10 0 19 15 14 18 18 21 42 42 0 18 0 14 14 14 14 14 14 14
14 0 14 14 0 14 14 14 42 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 37
0 11 0 0 0 0 25 30 37 13 0 0 0 0 0 28 0 0 0 12 0 0 12 21 30
21 0 0 0 0 ] /Times-Roman 1000 655360 rf /Fj 2 117 df<040C00000000007058989830
30606464683006127E910B>105 D<08181818FF30303030606062646438080F7E8E0C>116
D E /Fk 3 121 df<FFFFFEFFFFFE17027D891E>0 D<60F0F06004047D8A0B>I<1E0031806080
E0C0E1C0E080E000E0006000300018001C0073006380E180E1C0E1C0E1C061C0718033800E0006
000300018001C001C041C0E1C0C1C0418063001E000A217D9911>120 D
E /Fl 6 62 df<000C0000000C0000000C0000000C0000000C0000000C0000000C0000000C0000
000C0000000C0000000C0000000C0000FFFFFF80FFFFFF80000C0000000C0000000C0000000C00
00000C0000000C0000000C0000000C0000000C0000000C0000000C0000000C0000191A7E951E>
43 D<078018603030303060186018E01CE01CE01CE01CE01CE01CE01CE01CE01CE01CE01CE01C
6018601870383030186007800E187E9713>48 D<03000700FF0007000700070007000700070007
000700070007000700070007000700070007000700070007000700FFF00C187D9713>I<0F8010
6020304038803CC01CE01C401C003C003800380070006000C00180010002000404080410043008
3FF87FF8FFF80E187E9713>I<00300030007000F000F001700370027004700C70087010703070
20704070C070FFFF00700070007000700070007007FF10187F9713>52 D<FFFFFF80FFFFFF8000
0000000000000000000000000000000000000000000000FFFFFF80FFFFFF80190A7E8D1E>61
D E /Fm 8 115 df<60F0F06004047D830B>58 D<60F0F07010101020204080040B7D830B>I<00
07E040003C18C000E005C001C003C003800180070001800E0001801C0001803C00010038000100
7800000078000000F0000000F0000000F0000000F0000000F0000400F0000400F0000400F00008
007000100030001000380060001C0080000703000001FC00001A1A7E991B>67
D<01F803FC003C00E0003C0040003C0040004E0080004E0080004E008000470080008701000083
010000838100008381000101C2000101C2000101C2000100E2000200E4000200E4000200740002
0074000400780004003800040038000C0038001C001000FF8010001E1A7E991F>78
D<00E60317060E0E0E0C0E1C0E381C381C381C381C303830383038387818F00F700070007000E0
60E0E1C0C3807E0010177F8F12>103 D<03000380030000000000000000000000000000003C00
4E004E008E008E009C001C001C0038003800390071007100720072003C00091A7E990D>105
D<383C004CC6008F07008E07008E07008E07001C0E001C0E001C0E001C1C00381C40381C403838
40383880701900300E0012107E8F17>110 D<38704D988F388E188E008E001C001C001C001C00
3800380038003800700030000D107E8F11>114 D E /Fn 4 58 df<0C003C00CC000C000C000C
000C000C000C000C000C000C000C000C000C00FF8009107E8F0F>49 D<1F00618040C08060C060
0060006000C00180030006000C00102020207FC0FFC00B107F8F0F>I<1F00218060C060C000C0
008001800F00008000400060C060C060804060801F000B107F8F0F>I<1F00318060C0C040C060
C060C06040E021E01E600060004060C0608043003E000B107F8F0F>57 D
E /Fo 1 1 df<FFFFF0FFFFF014027D881B>0 D E /Fp 2 111 df<00E2031E060E0C0E0C0C18
0C180C180C101810181018183808F00730003000306060E060C1C07F000F14808D11>103
D<383C0044C6004702004602008E06000C06000C06000C0C00180C00180C401818401818803008
80300F00120E7F8D15>110 D E /Fq 1 62 df<FFFFFCFFFFFC00000000000000000000000000
0000000000FFFFFCFFFFFC160A7E8C1B>61 D E /Fr 27 121 df<0700001FC0001DE00038E000
38E00038E00038E00039CF803B9F803F9C001F1C001E3C001E38003E38007F7800777000E7F000
E3E000E1E380E1E380F3F3807F7F001E1E0011177F9614>38 D<00C003C007800F001E001C0038
00780070007000F000E000E000E000E000E000E000E000F00070007000780038001C001E000F00
078003C000C00A1D7A9914>40 D<C000F00078003C001E000E00070007800380038003C001C001
C001C001C001C001C001C003C003800380078007000E001E003C007800F000C0000A1D7D9914>
I<70F8FCFC7C1C1838F0C0060A798414>44 D<07C00FE01C7038383018701C701CE00EE00EE00E
E00EE00EE00EE00EE00EE00E701C701C383838381C700FE007C00F177E9614>48
D<0300070007000F003F00F7004700070007000700070007000700070007000700070007000700
07000700FFF0FFF00C177C9614>I<00780000F80001B80001B8000338000338000638000E3800
0C38001C3800383800303800703800E03800FFFF80FFFF80003800003800003800003800003800
03FF8003FF8011177F9614>52 D<01F007F80E1C1C1C381C78007000F000E000E7C0FFF0FC38F0
1CF01EE00EF00EF00E700E701E381C3C381FF007C00F177E9614>54 D<000E003E007C00F003E0
07C01F003E00F800F000F8003E001F0007C003E000F0007C003E000E0F137E9414>60
D<4000E000F8007C001E000F8007C001F000F8003E001E003E00F801F007C00F801E007C00F800
E00040000F157E9514>62 D<03C60FFE1C3E3C1E381E700E700EF00EE000E000E000E000E000E0
00E000F00E700E700E381E3C1C1C380FF003C00F177E9614>67 D<1FC0007FF000707800203C00
001C00001C0007FC001FFC007C1C00F01C00E01C00E01C00E01C00707C003FFF800F8F8011107E
8F14>97 D<007E00007E00000E00000E00000E00000E00000E0007CE001FFE003C3E00781E0070
0E00F00E00E00E00E00E00E00E00E00E00F00E00701E00781E003C3E001FFFC007CFC012177F96
14>100 D<07E01FF83C3C781C701EF00EE00EFFFEFFFEE000F0007000780E3C1E0FFC03F00F10
7E8F14>I<007C01FE03CE0384038003800380FFFEFFFE03800380038003800380038003800380
03800380038003807FFC7FFC0F177F9614>I<07CF001FFF803C7B80783C00701C00701C00701C
00783C003C78003FF00077C0007000007000003FF8003FFE003FFF00700F80F00780E00380E003
80E003807007007C1F001FFC0007F00011197F8F14>I<03000780078003000000000000000000
FF80FF80038003800380038003800380038003800380038003800380FFFEFFFE0F187D9714>
105 D<FF80FF800380038003800380038003800380038003800380038003800380038003800380
038003800380FFFEFFFE0F177E9614>108 D<FB8E00FFFF803EFB803CF38038E38038E38038E3
8038E38038E38038E38038E38038E38038E38038E380FEFBE0FEFBE01310808F14>I<FC7800FD
FE001F8F001E07001E07001C07001C07001C07001C07001C07001C07001C07001C07001C0700FF
9FE0FF9FE01310808F14>I<07C01FF03C78701C701CE00EE00EE00EE00EE00EE00E701C783C3C
781FF007C00F107E8F14>I<FCF800FFFE001F0F001E07801C03801C03C01C01C01C01C01C01C0
1C01C01C03C01E03801E07801F0F001FFE001CF8001C00001C00001C00001C00001C00001C0000
FF8000FF80001218808F14>I<FF0F80FF3FC007F1C007C08007C0000780000700000700000700
00070000070000070000070000070000FFFC00FFFC001210808F14>114
D<0FD87FF8E078C038C038F0007F803FF007FC001EE00EE006F006F81CFFF8CFE00F107E8F14>
I<FC3F00FC3F001C07001C07001C07001C07001C07001C07001C07001C07001C07001C07001C0F
001E1F000FFFE003E7E01310808F14>117 D<FF7F80FF7F80380E00380E00380E00380E0039CE
0039CE0019CC001B6C001B6C001A6C001A6C001E7C000E78000E780011107F8F14>119
D<FE7F80FE7F801E38000E780007700007E00003E00001C00003C00003E0000770000E78000E38
001C1C00FF7F80FF7F8011107F8F14>I E /Fs 52 123 df<03F0F807F1F80E13081C07001C07
001C07001C07001C0700FF87E0FF87E01C07001C07001C07001C07001C07001C07001C07001C07
001C07001C07001C07001C07001C07001517809615>11 D<000703C70FC70C401C001C001C001C
001C00FFC7FFC71C071C071C071C071C071C071C071C071C071C071C071C071C071018809713>
I<03C70FC70C471C071C071C071C071C07FFC7FFC71C071C071C071C071C071C071C071C071C07
1C071C071C071C071017809613>I<E1C0E1C0E1C060C040804080C1800A077F9612>34
D<E0E0E0604040C003077D960A>39 D<0180030006000C001C0018003800300070007000700060
00E000E000E000E000E000E000E000E000E000E00060007000700070003000380018001C000C00
06000300018009227E980E>I<C0006000300018001C000C000E00060007000700070003000380
038003800380038003800380038003800380030007000700070006000E000C001C001800300060
00C00009227E980E>I<E0E0E0604040C003077D820A>44 D<FF80FF80090280880C>I<E0E0E003
037D820A>I<07C01FF03C78701C701C600CE00EE00EE00EE00EE00EE00EE00EE00EE00EE00E70
1C701C783C3C781FF007C00F167F9512>48 D<01000700FF00FF00070007000700070007000700
07000700070007000700070007000700070007007FF07FF00C167E9512>I<0FC03FE070706038
E01C401C401C001C001C00380038007000E000C00180030006000C00180030007FFC7FFC0E167F
9512>I<07C01FF03838701C201C001C001C0038007007E007E00038001C000C000E000E800EC0
0E601C38381FF007C00F167F9512>I<00F00070017001700370067006700C701C701870387030
707070E070FFFEFFFE0070007000700070007000700F167F9512>I<01F007F80E081C00380070
0070006080E7F0FFF8F81CF01CE00EE00EE00EE00E700E700C301C3C381FF007C00F167F9512>
54 D<E0E0E0000000000000000000E0E0E0604040C003137D8E0A>59 D<00700000F80000F800
01DC00019C00018C00038E00038E000306000707000707000E03800E03800C03801FFFC01FFFC0
3801E03800E03800E0700070700070600070E0003815177F9618>65 D<FFF000FFFC00E01E00E0
0700E00380E00380E00380E00380E00700E01E00FFFC00FFFC00E01F00E00780E00180E001C0E0
01C0E001C0E001C0E00380E00F00FFFE00FFF80012177D9618>I<FFF000FFFC00E01E00E00700
E00380E00380E001C0E001C0E000E0E000E0E000E0E000E0E000E0E000E0E000E0E000C0E001C0
E001C0E00380E00700E01E00FFFC00FFF00013177D9619>68 D<FFFEFFFEE000E000E000E000E0
00E000E000E000FFFCFFFCE000E000E000E000E000E000E000E000E000FFFFFFFF10177D9615>
I<F8001FF8001FE80017EC0037EC0037EE0077E60067E60067E700E7E300C7E381C7E381C7E181
87E1C387E1C387E0C307E0E707E0E707E06607E06607E03C07E03C07E03C0718177D961F>77
D<FFF000FFFC00E01E00E00700E00380E00380E00380E00380E00380E00700E01E00FFFC00FFF0
00E00000E00000E00000E00000E00000E00000E00000E00000E00000E0000011177D9617>80
D<FFF000FFFC00E01E00E00700E00380E00380E00380E00380E00700E01E00FFFC00FFF000E070
00E03000E03800E01C00E01C00E00E00E00E00E00700E00380E00380E001C012177D9617>82
D<07E01FF8383C600CC00CC000C000E00070007E003FE00FF001F8001C000E000600060006C006
E00CF8387FF00FC00F177E9614>I<FFFFF8FFFFF8007000007000007000007000007000007000
007000007000007000007000007000007000007000007000007000007000007000007000007000
00700000700015177F9618>I<60C040804080C180E1C0E1C0E1C00A077A9612>92
D<1FC07FE0707040380038003801F81FF87E38F038E038E038F0787FF83FB80D0F7F8E11>97
D<E000E000E000E000E000E000E000E000E7C0FFE0F870E038E038E01CE01CE01CE01CE01CE038
E038F0F0FFE0E7800E177E9612>I<07E01FF8381870007000E000E000E000E000E00070007008
38381FF807E00D0F7F8E10>I<001C001C001C001C001C001C001C001C079C1FFC3C3C701C701C
E01CE01CE01CE01CE01C701C703C387C1FFC0F9C0E177F9612>I<0F801FE0387070306038E018
FFF8FFF8E000E0006000700038181FF807E00D0F7F8E10>I<03E007E00C201C001C001C001C00
1C00FF80FF801C001C001C001C001C001C001C001C001C001C001C001C001C000B1780960B>I<
0F9F1FFF38F0707070707070707038E03FC06F80600070007FF03FF87FFC701EE00EE00EE00E78
3C3FF80FE010167F8E12>I<E000E000E000E000E000E000E000E000E7E0EFF0F878F038E038E0
38E038E038E038E038E038E038E038E038E0380D177E9612>I<E0E0E0000000000000E0E0E0E0
E0E0E0E0E0E0E0E0E0E0E003187E9708>I<E000E000E000E000E000E000E000E000E0F8E1F0E3
E0E3C0E780EF00FE00FF00FF80F380E1C0E1E0E0E0E0F0E0780D177E9611>107
D<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E003177E9608>I<E7E1F8EFF3FCF87E
1EF03C0EE0380EE0380EE0380EE0380EE0380EE0380EE0380EE0380EE0380EE0380EE0380E170F
7E8E1C>I<E7E0EFF0F878F038E038E038E038E038E038E038E038E038E038E038E0380D0F7E8E
12>I<07C01FF03838701C701CE00EE00EE00EE00EE00E701C701C3C781FF007C00F0F7F8E12>I<
E7C0FFE0F870E038E038E01CE01CE01CE01CE01CE038E038F0F0FFE0E780E000E000E000E000E0
00E0000E157E8E12>I<079C1FFC3C7C703C701CE01CE01CE01CE01CE01C701C701C387C1FFC0F
9C001C001C001C001C001C001C0E157F8E12>I<E380EF80FC00F800F000F000E000E000E000E0
00E000E000E000E000E000090F7E8E0C>I<1F007FC0E0C0E000E000F0007F003F800FC001E080
E0C0E0E1C07FC01F000B0F7F8E0E>I<3800380038003800FF80FF803800380038003800380038
00380038003800380038401FC01F000A137F920D>I<E038E038E038E038E038E038E038E038E0
38E038E038E038E0F87FF83F380D0F7E8E12>I<E038E038E03870707070707038E038E038E01C
C01DC00D800D800F8007000E0F7F8E10>I<E0F038E0F838E0D838E09838719C70719C70718C70
310C603B0CE03B0EE03B06E01A06C01A06C01E07C00E0380160F7F8E18>I<701C783838701C70
0EE007C00380038007C00EE00C601C703838701CF01E0F0F808E10>I<E038E038703870707070
386038E018E01CC01CC00DC00D800580070007000700060006008C00FC00F8000E157F8E10>I<
FFE0FFE001C001C00380070007000E001C001C00380070007000FFF0FFF00C0F7F8E0F>I
E /Ft 2 51 df<030007003F00C700070007000700070007000700070007000700070007000700
07000700070007000700070007000700070007000F80FFF80D1C7C9B15>49
D<07C01830201C400C400EF00FF80FF807F8077007000F000E000E001C001C00380070006000C0
0180030006010C01180110023FFE7FFEFFFE101C7E9B15>I E /Fu 2 57
df<0C001C00EC000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C00FF
C00A137D9211>49 D<0FC0003000084008600870083C103F600F800FE031F06078C01CC00CC00C
C00C601830300FC00E137F9211>56 D E /Fv 63 127 df<0E700E700E700E70FFFEFFFE7FFE0E
700E700E701CE01CE07FFEFFFEFFFE1CE01CE01CE01CE01CE00F147F9312>35
D<0F001F8039C039C039C039C03BBE3BBE3F781E701C703EF07EE0EFE0E7C0E7C4E3CEF7EE7FFC
3C380F147F9312>38 D<018007800F001E003C00380078007000F000E000E000E000E000E000E0
00E000F0007000780038003C001E000F000780018009197B9612>40 D<C000F00078003C001E00
0E000F00070007800380038003800380038003800380078007000F000E001E003C007800F000C0
0009197D9612>I<070007000700E738FFF87FF01FC01FC07FF0FFF8E7380700070007000D0E7E
9012>I<038003800380038003800380FFFEFFFEFFFE0380038003800380038003800F0F7F9112>
I<307C7C3C0C1C38F0E006097A8312>I<FFF8FFF8FFF80D037E8B12>I<60F0F0600404798312>
I<07C00FE01C703838701C701CE00EE00EE00EE00EE00EE00EE00EE01E701C701C38381C700FE0
07C00F147F9312>48 D<030007000F001F00FF00F7000700070007000700070007000700070007
000700070007007FF07FF00C147E9312>I<0F803FE070F0F078E038E038403800380078007000
F001E003C007800F001E0038387038FFF8FFF80D147E9312>I<0FE03FF0783C701C701C001C00
3C007807F007F0003C001C000E000EE00EE00EE01CF83C3FF00FC00F147F9312>I<00F001F003
70037006700E700C701C70387038707070E070FFFEFFFE007000700070007003FE03FE0F147F93
12>I<7FF07FF07000700070007000700070007F807FE060F0007800384038E038E038E07070F0
3FC01F000D147E9312>I<01F007F81E3C3C1C781C7000F000E7C0FFF0F83CF01CF01EE00EE00E
F00E701E781C3C3C1FF007C00F147F9312>I<E000FFFEFFFEE03CE078007000E001E001C003C0
03800780070007000F000E000E000E000E000E000E000F157F9412>I<07C01FF03C78783C701C
701C701C38380FE007C03C78701CE00EE00EE00EE00E701C783C1FF00FE00F147F9312>I<07C0
1FF07878703CE01CE01EE01EE01EF01E783E3FFE0FCE000E001E001C703C707878F03FE00F800F
147F9312>I<3078783000000000000030787838183830F0C005137A8D12>59
D<0038007801F003E00F801F003C00F800F000F8003C001F000F8003E001F0007800380D117E92
12>I<FFFEFFFE7FFE0000000000007FFEFFFEFFFE0F097F8E12>I<4000E000F0007C003E000F80
07C001E000F8007800F801E007C00F803E007C00F000E00040000D137E9312>I<038007C007C0
06C006C00EE00EE00EE00EE00C601C701C701C701FF01FF0383838383838FEFEFEFE0F147F9312
>65 D<FFFEFFFE380E380E380E3800380038E038E03FE03FE038E038E03800380E380E380E380E
FFFEFFFE0F147F9312>69 D<FFF8FFF80700070007000700070007000700070007000700070007
000700070007000700FFF8FFF80D147E9312>73 D<FF80FF801C001C001C001C001C001C001C00
1C001C001C001C001C001C021C071C071C07FFFFFFFF1014809312>76 D<FEFEFEFE3A383A383B
383B383B383B383B383B3839B839B839B839B839B839B838B838B8FEF8FEF80F147F9312>78
D<FF80FFE038F03878383838383838387838F03FE03FE038F0387038703870387038773877FE3F
FE1C10147F9312>82 D<FFFEFFFEE38EE38EE38E03800380038003800380038003800380038003
800380038003801FF01FF00F147F9312>84 D<FC7EFC7E38383838383838383C781C701C701C70
1C700C600EE00EE00EE006C006C007C007C003800F147F9312>86 D<FCFCFCFC1C701CE00EE00F
E00FC007C007800380078007C00FC00EE01EE01C701C703838FEFEFEFE0F147F9312>88
D<FFC0FFC0E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000
E000E000E000E000E000FFC0FFC00A1A7A9612>91 D<FFC0FFC001C001C001C001C001C001C001
C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C0FFC0FFC00A1A7F96
12>93 D<0E003F80FFE0F1E0C0600B057D9312>I<FFF8FFF8FFF80D037E7F12>I<3F807FE070F0
207000700FF03FF07870F070E070E070F0F07FFE1F3E0F0E7E8D12>97 D<FC00FC001C001C001C
001C001DF01FF81F1E1E0E1C0F1C071C071C071C071C0F1E0E1F1C1FF81DE01014809312>I<07
F01FF838387010F000E000E000E000E000F000703838781FF007E00D0E7E8D12>I<01F801F800
3800380038003807B81FF838787078F038E038E038E038E038F038707878F81FFF0FBF10147F93
12>I<07801FE038F07078F038E038FFF8FFF8E000F000703838781FF007C00D0E7E8D12>I<007E
01FF03C7038203800380FFFEFFFE03800380038003800380038003800380038003807FFC7FFC10
14809312>I<0F9E1FFF38E7707070707070707038E03FC07F8070003FE03FF87FFCF01EE00EE0
0EE00EF01E783C3FF80FE010167F8D12>I<FC0000FC00001C00001C00001C00001C00001CF000
1FF8001F1C001E1C001C1C001C1C001C1C001C1C001C1C001C1C001C1C001C1C00FF9F80FF9F80
1114809312>I<06000F000F000600000000000000FF00FF000700070007000700070007000700
070007000700FFF8FFF80D157D9412>I<00C001E001E000C00000000000003FE03FE000E000E0
00E000E000E000E000E000E000E000E000E000E000E000E000E041E0E1C0FF807E000B1C7E9412
>I<FC0000FC00001C00001C00001C00001C00001FFF001FFF001C78001CF0001DE0001FC0001F
E0001FE0001EF0001C78001C3C001C3C00FF3F80FF3F801114809312>I<FF80FF800380038003
800380038003800380038003800380038003800380038003800380FFFEFFFE0F147F9312>I<FB
8E00FFFF803EFB803CF38038E38038E38038E38038E38038E38038E38038E38038E380FEFBE0FE
FBE0130E818D12>I<FCF000FFF8001F1C001E1C001C1C001C1C001C1C001C1C001C1C001C1C00
1C1C001C1C00FF9F80FF9F80110E808D12>I<0F803FE038E07070E038E038E038E038E038F078
707038E03FE00F800D0E7E8D12>I<FDF0FFF81F1E1E0E1C0F1C071C071C071C071C0F1E0E1F1C
1FF81DE01C001C001C001C001C00FF80FF801015808D12>I<FE7CFEFE0FCE0F840F000E000E00
0E000E000E000E000E00FFF0FFF00F0E7F8D12>114 D<1FF07FF0E070C070E000FF003FE00FF0
0078E018E018F038FFF0DFC00D0E7E8D12>I<0E000E000E000E00FFF8FFF80E000E000E000E00
0E000E000E000E380E380E7807F003C00D127F9112>I<FCFC00FCFC001C1C001C1C001C1C001C
1C001C1C001C1C001C1C001C1C001C1C001C3C000FFF8007DF80110E808D12>I<FEFEFEFE3838
3C781C701C701C700EE00EE00EE006C007C007C003800F0E7F8D12>I<FEFEFEFE701C701C3018
38383BB83FF83FF83AB838B81CF01CF01CF00F0E7F8D12>I<FCFEFCFE1CF00EE00FC007C00380
078007C00EE01EF01C70FEFEFEFE0F0E7F8D12>I<00F803F80780070007000700070007000700
070007000F00FE00FE000F0007000700070007000700070007000700078003F800F80D1A7E9612
>123 D<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0031A799612>I<F800FE
000F0007000700070007000700070007000700078003F803F80780070007000700070007000700
070007000F00FE00F8000D1A7E9612>I<1C607EE0EFC0C7000B047D9312>I
E /Fw 2 121 df<00060000000600000006000000060000000600000006000000060000000600
000006000000060000000600000006000000060000FFFFFFE0FFFFFFE000060000000600000006
00000006000000060000000600000006000000060000000600000006000000060000FFFFFFE0FF
FFFFE01B1C7E9A20>6 D<1F00308070406060E0E0E0E0E040E00060007000300018001C003300
718061C0E0C0E0E0E0E0E0E060E070C031C0198007000300018001C000C000E040E0E0E0E0E0C0
C041C021801F000B257D9C12>120 D E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300
TeXDict begin 
%%EndSetup
%%Page: 300 1
bop 0 50 a Fi(300)419 b Fh(Chapter)11 b(7.)52 b(Random)9 b(Numbers)p
0 68 1395 2 v 0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial
46 x Fi(random)17 b(\257oating-point)d(number)n(.)36 b(They)17
b(are)h(not)e(very)h(random)g(for)g(that)f(purpose;)k(see)0
239 y(Knuth)113 235 y Fg([1)r(])152 239 y Fi(.)i(Examples)13
b(of)g(acceptable)g(uses)g(of)g(these)g(random)f(bits)g(are:)19
b(\(i\))12 b(multiplying)d(a)0 288 y(signal)h(randomly)f(by)h
Fw(\006)p Ft(1)h Fi(at)f(a)h(rapid)f(\252chip)h(rate,\272)g(so)g(as)g(to)e
(spread)i(its)f(spectrum)h(uniformly)0 338 y(\(but)16 b(recoverably\))g
(across)i(some)f(desired)g(bandpass,)i(or)d(\(ii\))g(Monte)g(Carlo)g
(exploration)0 388 y(of)g(a)i(binary)e(tree,)j(where)e(decisions)f(as)i(to)e
(whether)g(to)g(branch)h(left)f(or)h(right)e(are)i(to)g(be)0
438 y(made)k(randomly)m(.)83 488 y(Now)14 b(we)h(do)f(not)g(want)g(you)f(to)h
(go)g(through)f(life)h(thinking)d(that)j(there)h(is)f(something)0
537 y(special)i(about)e(the)h(primitive)e(polynomial)h(of)h(degree)h(18)e
(used)i(in)e(the)h(above)h(examples.)0 587 y(\(W)m(e)d(chose)g(18)f(because)i
Ft(2)407 572 y Fu(18)455 587 y Fi(is)e(small)g(enough)g(for)g(you)g(to)g
(verify)g(our)g(claims)h(directly)e(by)0 637 y(numerical)i(experiment.\))23
b(The)13 b(accompanying)h(table)835 633 y Fg([2)r(])888 637
y Fi(lists)d(one)i(primitive)f(polynomial)0 687 y(for)j(each)i(degree)g(up)e
(to)g(100.)32 b(\(In)15 b(fact)h(there)g(exist)f(many)h(such)g(for)g(each)h
(degree.)32 b(For)0 737 y(example,)16 b(see)f Fw(x)q Fi(7.7)f(for)g(a)g
(complete)h(table)e(up)h(to)g(degree)g(10.\))0 859 y Fg(CITED)f(REFERENCES)g
(AND)f(FUR)o(THER)i(READING:)0 909 y(Knuth,)8 b(D.E.)f(1981,)h
Ff(Seminumerical)g(Algorithms)p Fg(,)g(2nd)g(ed.,)f(vol.)g(2)g(of)f
Ff(The)h(Art)g(of)g(Computer)g(Programming)80 950 y Fg(\(Reading,)15
b(MA:)d(Addison-W)o(e)q(sley\),)j(pp.)f(29f)o(f.)g([1])0 1000
y(Horowitz,)8 b(P)l(.,)f(and)i(Hill,)f(W)n(.)g(1989,)g Ff(The)h(Art)e(of)g
(Electronics)p Fg(,)i(2nd)f(ed.)g(\(Cambridge:)i(Cambridge)f(University)80
1041 y(Press\),)14 b Fw(xx)q Fg(9.32\2619.37.)0 1091 y(T)l(ausworthe,)g(R.C.)
d(1965,)h Ff(Mathematics)g(of)f(Computation)p Fg(,)j(vol.)d(19,)h(pp.)g
(201\261209.)0 1141 y(W)o(atson,)g(E.J.)f(1962,)i Ff(Mathematics)f(of)f
(Computation)p Fg(,)j(vol.)d(16,)h(pp.)g(368\261369.)i([2])0
1360 y Fe(7.5)j(Random)24 b(Sequences)d(Based)i(on)h(Data)104
1434 y(Encryption)83 1551 y Fd(In)6 b Fc(Numerical)g(Recipes')g
Fd(\256rst)g(edition,)t(we)g(described)g(how)g(to)g(us)o(e)g(the)f(Data)h(En)
o(cryption)g(Stan)o(dard)0 1592 y(\(DES\))105 1588 y Fg([1-3)r(])188
1592 y Fd(for)16 b(the)f(generation)f(of)h(random)g(numbers.)30
b(Unfortunately)n(,)16 b(when)e(implemented)h(in)0 1634 y(software)8
b(in)g(a)g(high-level)g(language)f(like)h Fr(C)p Fd(,)h(DES)e(is)i(very)f
(slow)n(,)g(so)f(excruciatingly)g(slow)n(,)h(in)h(fact,)g(that)0
1675 y(our)i(previous)e(implementation)h(can)g(be)g(viewed)f(as)h(more)h
(mischievous)d(than)i(useful.)18 b(Here)10 b(we)g(give)0 1717
y(a)g(much)f(faster)h(and)f(simpler)h(algorithm)g(which,)g(though)f(it)i(may)
e(not)h(be)f(secure)f(in)j(the)e(cryptographic)0 1759 y(sense,)k(generates)f
(about)h(equally)g(good)f(random)h(numbers.)83 1800 y(DES,)e(like)g(its)g
(progenitor)f(cryptographic)f(system)h(LUCIFER,)h(is)f(a)h(so-called)e
(\252block)h(product)0 1842 y(cipher)q(\272)121 1838 y Fg([4)r(])160
1842 y Fd(.)j(It)8 b(acts)f(on)g(64)g(bits)g(of)h(input)f(by)g(iteratively)h
(applying)e(\(16)i(times,)g(in)g(fact\))g(a)f(kind)g(of)g(highly)0
1883 y(nonlinear)13 b(bit-mixing)i(function.)27 b(Figure)13
b(7.5.1)h(shows)e(the)h(\257ow)h(of)g(information)g(in)g(DES)f(during)0
1925 y(this)d(mixing.)17 b(The)9 b(function)h Fm(g)q Fd(,)i(which)d(takes)g
(32-bits)h(into)h(32-bits,)f(is)h(called)e(the)h(\252cipher)f(function.\272)0
1966 y(Meyer)h(and)g(Matyas)292 1962 y Fg([4)r(])342 1966 y
Fd(discuss)f(the)h(importance)g(of)h(the)g(cipher)f(function)g(being)g
(nonlinear)o(,)g(as)g(well)0 2008 y(as)17 b(other)g(design)f(criteria.)83
2049 y(DES)11 b(constructs)e(its)i(cipher)f(function)h Fm(g)h
Fd(from)g(an)e(intricate)h(set)g(of)g(bit)g(permutations)f(and)g(table)0
2091 y(lookups)f(acting)h(on)g(short)g(sequences)e(of)i(consecutive)e(bits.)
18 b(Apparently)n(,)10 b(this)h(function)f(was)g(chosen)0 2132
y(to)i(be)g(particularly)h(strong)e(cryptographically)g(\(or)i(conceivably)d
(as)h(some)h(critics)g(contend,)g(to)g(have)0 2174 y(an)f(exquisitely)f
(subtle)h(cryptographic)f(\257aw!\).)21 b(For)12 b(our)f(purposes,)f(a)h(dif)
o(ferent)i(function)e Fm(g)i Fd(that)f(can)0 2215 y(be)f(rapidly)h(computed)f
(in)h(a)g(high-level)f(computer)h(language)e(is)i(preferable.)21
b(Such)11 b(a)h(function)f(may)0 2257 y(weaken)e(the)i(algorithm)g
(cryptographically)n(.)16 b(Our)11 b(purposes)e(are)h(not,)i(however)o(,)d
(cryptographic:)16 b(W)m(e)0 2298 y(want)9 b(to)g(\256nd)f(the)h(fastest)f
Fm(g)q Fd(,)j(and)d(smallest)g(number)g(of)i(iterations)f(of)g(the)g(mixing)g
(procedure)e(in)i(Figure)0 2340 y(7.5.1,)15 b(such)d(that)h(our)h(output)f
(random)g(sequence)d(passes)h(the)i(standard)g(tests)g(that)g(are)g
(customarily)0 2381 y(applied)d(to)g(random)g(number)g(generators.)16
b(The)10 b(resulting)g(algorithm)h(will)h(not)f(be)e(DES,)i(but)f(rather)h(a)
0 2423 y(kind)i(of)g(\252pseudo-DES,\272)d(better)j(suited)g(to)g(the)g
(purpose)e(at)i(hand.)83 2464 y(Following)h(the)h(criterion,)i(mentioned)c
(above,)i(that)f Fm(g)j Fd(should)c(be)h(nonlinear)o(,)h(we)f(must)g(give)0
2506 y(the)i(integer)h(multiply)g(operation)f(a)h(prominent)f(place)f(in)i
Fm(g)q Fd(.)37 b(Because)14 b(64-bit)j(registers)g(are)f(not)0
2547 y(generally)9 b(accessible)e(in)i(high-level)g(languages,)f(we)h(must)g
(con\256ne)e(ourselves)h(to)i(multiplying)g(16-bit)p eop
%%Page: 301 2
bop 220 50 a Fh(7.5)11 b(Random)e(Sequences)f(Based)i(on)g(Data)g(Encryption)
257 b Fi(301)p 0 68 1395 2 v 0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore

@endspecial 60 1310 a @beginspecial 230 @llx 419 @lly 536
@urx 698 @ury 3060 @rwi @setspecial
%%BeginDocument: epsf/fig7x5x1.ps
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
/TX {pop} def
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def	% - cf flatness
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
[/_Helvetica/Helvetica 0 0 1 TZ
[/_Times-Italic/Times-Italic 0 0 1 TZ
[/_Times-Roman/Times-Roman 0 0 1 TZ
0 A
u
0 R
0 G
0 i 0 J 0 j 1 w 4 M []0 d
0 D
367.4655 554.8706 m
367.4655 579.4286 L
233.0663 579.4286 L
233.0663 554.8706 L
367.4655 554.8706 L
s
300.2659 567.1496 m
S
U
u
532.6739 554.8706 m
532.6739 579.4286 L
398.2746 579.4286 L
398.2746 554.8706 L
532.6739 554.8706 L
s
465.4743 567.1496 m
S
U
300.4892 554.8706 m
300.4892 538.7963 l
410.5537 489.9035 L
430.7991 489.9035 l
S
u
481.3253 514.2383 m
481.3253 537.4567 L
450.0697 537.4567 L
450.0697 514.2383 L
481.3253 514.2383 L
s
465.6975 525.8475 m
S
U
u
496.0601 481.6431 m
496.0601 498.1639 L
435.3349 498.1639 L
435.3349 481.6431 L
496.0601 481.6431 L
s
465.6975 489.9035 m
S
U
300.4892 468.2473 m
300.4892 486.5547 l
437.1209 546.3869 l
465.6975 546.3869 l
S
465.6975 554.8706 m
465.6975 542.2067 l
S
465.6975 514.2383 m
465.6975 503.0389 l
S
465.6975 481.6431 m
465.6975 468.2563 l
S
u
367.4655 422.8785 m
367.4655 447.4365 L
233.0663 447.4365 L
233.0663 422.8785 L
367.4655 422.8785 L
s
300.2659 435.1575 m
S
U
u
532.6739 422.8785 m
532.6739 447.4365 L
398.2746 447.4365 L
398.2746 422.8785 L
532.6739 422.8785 L
s
465.4743 435.1575 m
S
U
0 To
1 0 0 1 465.491 486.5794 0 Tp
TP
-21.3108 0 Td
0 Tr
0 O
0 g
/_Times-Roman 9 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 Tq
11 0 Tl
0 Tc
0 Tw
(32-bit) Tx 
/_Times-Roman 6.5 Tf
-1.5 Ts
( ) Tx 
/_Helvetica 9 Tf
0 Ts
(XOR) Tx 
(\r) TX 
TO
0 To
1 0 0 1 465.491 564.3294 0 Tp
TP
-30.7419 0 Td
0 Tr
/_Times-Roman 9 Tf
(right 32-bit word) Tx 
(\r) TX 
TO
0 To
1 0 0 1 300.491 564.3294 0 Tp
TP
-28.2393 0 Td
0 Tr
(left 32-bit word) Tx 
(\r) TX 
TO
0 To
1 0 0 1 465.491 432.2044 0 Tp
TP
-30.7419 0 Td
0 Tr
(right 32-bit word) Tx 
(\r) TX 
TO
0 To
1 0 0 1 300.491 432.2044 0 Tp
TP
-28.2393 0 Td
0 Tr
(left 32-bit word) Tx 
(\r) TX 
TO
0 To
1 0 0 1 465.741 524.8294 0 Tp
TP
-2.25 0 Td
0 Tr
/_Times-Italic 9 Tf
(g) Tx 
(\r) TX 
TO
u
430.6356 489.892 m
429.1448 487.3866 L
435.1355 489.9086 L
435.1355 489.9086 L
429.1263 492.3864 L
430.6356 489.892 L
f
U
u
300.477 468.5848 m
297.9715 470.0756 L
300.4936 464.0848 L
300.4936 464.0848 L
302.9714 470.094 L
300.477 468.5848 L
f
U
u
465.727 468.5848 m
463.2215 470.0756 L
465.7436 464.0848 L
465.7436 464.0848 L
468.2214 470.094 L
465.727 468.5848 L
f
U
u
465.727 503.3973 m
463.2215 504.8881 L
465.7436 498.8973 L
465.7436 498.8973 L
468.2214 504.9065 L
465.727 503.3973 L
f
U
u
465.6645 542.5848 m
463.159 544.0756 L
465.6811 538.0848 L
465.6811 538.0848 L
468.1589 544.094 L
465.6645 542.5848 L
f
U
u
451.3464 546.267 m
452.8372 543.7616 L
446.8465 546.2836 L
446.8465 546.2836 L
452.8557 548.7614 L
451.3464 546.267 L
f
U
u
0 R
0 G
367.4655 670.3706 m
367.4655 694.9286 L
233.0663 694.9286 L
233.0663 670.3706 L
367.4655 670.3706 L
s
300.2659 682.6496 m
S
U
u
532.6739 670.3706 m
532.6739 694.9286 L
398.2746 694.9286 L
398.2746 670.3706 L
532.6739 670.3706 L
s
465.4743 682.6496 m
S
U
300.4892 670.3706 m
300.4892 654.2963 l
410.5537 605.4035 L
430.7991 605.4035 l
S
u
481.3253 629.7383 m
481.3253 652.9567 L
450.0697 652.9567 L
450.0697 629.7383 L
481.3253 629.7383 L
s
465.6975 641.3475 m
S
U
u
496.0601 597.1431 m
496.0601 613.6639 L
435.3349 613.6639 L
435.3349 597.1431 L
496.0601 597.1431 L
s
465.6975 605.4035 m
S
U
300.4892 584.2473 m
300.4892 602.0547 l
437.1209 661.8869 l
465.6975 661.8869 l
S
465.6975 670.3706 m
465.6975 657.7067 l
S
465.6975 629.7383 m
465.6975 618.5389 l
S
465.6975 597.1431 m
465.6975 584.2563 l
S
0 To
1 0 0 1 465.491 602.0794 0 Tp
TP
-21.3108 0 Td
0 Tr
0 O
0 g
/_Times-Roman 9 Tf
(32-bit) Tx 
/_Times-Roman 6.5 Tf
-1.5 Ts
( ) Tx 
/_Helvetica 9 Tf
0 Ts
(XOR) Tx 
(\r) TX 
TO
0 To
1 0 0 1 465.491 679.8294 0 Tp
TP
-30.7419 0 Td
0 Tr
/_Times-Roman 9 Tf
(right 32-bit word) Tx 
(\r) TX 
TO
0 To
1 0 0 1 300.491 679.8294 0 Tp
TP
-28.2393 0 Td
0 Tr
(left 32-bit word) Tx 
(\r) TX 
TO
0 To
1 0 0 1 465.741 640.3294 0 Tp
TP
-2.25 0 Td
0 Tr
/_Times-Italic 9 Tf
(g) Tx 
(\r) TX 
TO
u
430.6356 605.392 m
429.1448 602.8866 L
435.1355 605.4086 L
435.1355 605.4086 L
429.1263 607.8864 L
430.6356 605.392 L
f
U
u
300.477 584.5848 m
297.9715 586.0756 L
300.4936 580.0848 L
300.4936 580.0848 L
302.9714 586.094 L
300.477 584.5848 L
f
U
u
465.727 584.5848 m
463.2215 586.0756 L
465.7436 580.0848 L
465.7436 580.0848 L
468.2214 586.094 L
465.727 584.5848 L
f
U
u
465.727 618.8973 m
463.2215 620.3881 L
465.7436 614.3973 L
465.7436 614.3973 L
468.2214 620.4065 L
465.727 618.8973 L
f
U
u
465.6645 658.0848 m
463.159 659.5756 L
465.6811 653.5848 L
465.6811 653.5848 L
468.1589 659.594 L
465.6645 658.0848 L
f
U
u
451.3464 661.767 m
452.8372 659.2616 L
446.8465 661.7836 L
446.8465 661.7836 L
452.8557 664.2614 L
451.3464 661.767 L
f
U
0 R
0 G
1 J 1.2 w [0 5 ]0 d
300.4598 460.8965 m
300.4598 450.3248 l
S
465.8598 460.8965 m
465.8598 450.3248 l
S
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 0 1372 a Fb(Figure)9 b(7.5.1.)27 b(The)8 b(Data)h(Encryption)e
(Standard)h(\(DES\))i(iterates)f(a)g(nonlinear)e(function)g
Fp(g)j Fb(on)e(two)h(32-bit)f(words,)0 1409 y(in)k(the)g(manner)g(shown)f
(here)g(\(after)i(Meyer)e(and)g(Matyas)723 1405 y Fg([4)r(])762
1409 y Fb(\).)0 1509 y Fd(operands)c(into)j(a)f(32-bit)h(result.)k(So,)9
b(the)g(general)g(idea)f(of)i Fm(g)q Fd(,)g(almost)g(forced,)f(is)g(to)h
(calculate)e(the)h(three)0 1551 y(distinct)14 b(32-bit)h(products)e(of)h(the)
g(high)f(and)h(low)g(16-bit)g(input)g(half-words,)i(and)d(then)h(to)g
(combine)0 1592 y(these,)f(and)f(perhaps)g(additional)g(\256xed)g(constants,)
h(by)f(fast)i(operations)d(\(e.g.,)k(add)d(or)i(exclusive-or\))0
1634 y(into)j(a)g(single)g(32-bit)g(result.)83 1675 y(There)d(are)g(only)f(a)
h(limited)i(number)d(of)i(ways)e(of)i(ef)o(fecting)f(this)h(general)e
(scheme,)h(allowing)0 1717 y(systematic)d(exploration)g(of)h(the)g
(alternatives.)21 b(Experimentation,)13 b(and)e(tests)g(of)h(the)g
(randomness)e(of)0 1759 y(the)g(output,)h(lead)f(to)h(the)f(sequence)d(of)k
(operations)e(shown)h(in)g(Figure)g(7.5.2.)18 b(The)9 b(few)i(new)f(elements)
0 1800 y(in)h(the)g(\256gure)g(need)f(explanation:)16 b(The)10
b(values)g Fm(C)683 1804 y Fn(1)712 1800 y Fd(and)g Fm(C)804
1804 y Fn(2)833 1800 y Fd(are)h(\256xed)f(constants,)h(chosen)e(randomly)0
1842 y(with)i(the)g(constraint)f(that)h(they)f(have)f(exactly)h(16)g(1-bits)h
(and)e(16)i(0-bits;)h(combining)d(these)h(constants)0 1883
y(via)h(exclusive-or)f(ensures)g(that)h(the)h(overall)f Fm(g)i
Fd(has)d(no)h(bias)g(towards)g(0)g(or)g(1)h(bits.)83 1925 y(The)e
(\252reverse)f(half-words\272)h(operation)g(in)g(Figure)g(7.5.2)h(turns)f
(out)g(to)h(be)f(essential;)g(otherwise,)0 1966 y(the)k(very)f(lowest)h(and)f
(very)h(highest)f(bits)h(are)g(not)g(properly)f(mixed)h(by)g(the)f(three)h
(multiplications.)0 2008 y(The)g(nonobvious)e(choices)g(in)j
Fm(g)h Fd(are)e(therefore:)24 b(where)14 b(along)g(the)g(vertical)g
(\252pipeline\272)g(to)g(do)g(the)0 2049 y(reverse;)d(in)f(what)h(order)f(to)
h(combine)e(the)h(three)h(products)e(and)h Fm(C)894 2053 y
Fn(2)911 2049 y Fd(;)i(and)e(with)h(which)f(operation)f(\(add)0
2091 y(or)f(exclusive-or\))g(should)f(each)g(combining)g(be)h(done?)j(W)m(e)d
(tested)g(these)f(choices)f(exhaustively)g(before)0 2132 y(settling)15
b(on)f(the)h(algorithm)g(shown)e(in)i(the)f(\256gure.)83 2174
y(It)c(remains)e(to)h(determine)f(the)g(smallest)h(number)f(of)h(iterations)f
Fm(N)965 2178 y Fj(it)999 2174 y Fd(that)h(we)f(can)g(get)g(away)g(with.)0
2215 y(The)13 b(minimum)g(meaningful)g Fm(N)445 2219 y Fj(it)483
2215 y Fd(is)g(evidently)g(two,)i(since)d(a)h(single)g(iteration)h(simply)f
(moves)f(one)0 2257 y(32-bit)g(word)g(without)g(altering)g(it.)22
b(One)12 b(can)e(use)h(the)h(constants)e Fm(C)929 2261 y Fn(1)958
2257 y Fd(and)h Fm(C)1051 2261 y Fn(2)1081 2257 y Fd(to)h(help)f(determine)h
(an)0 2298 y(appropriate)e Fm(N)212 2302 y Fj(it)237 2298 y
Fd(:)18 b(When)10 b Fm(N)396 2302 y Fj(it)434 2298 y Fl(=)i(2)g
Fd(and)e Fm(C)599 2302 y Fn(1)629 2298 y Fl(=)i Fm(C)698 2302
y Fn(2)729 2298 y Fl(=)g(0)f Fd(\(an)g(intentionally)h(very)e(poor)h
(choice\),)g(the)0 2340 y(generator)g(fails)g(several)g(tests)g(of)g
(randomness)e(by)i(easily)g(measurable,)f(though)g(not)i(overwhelming,)0
2381 y(amounts.)35 b(When)16 b Fm(N)309 2385 y Fj(it)351 2381
y Fl(=)i(4)p Fd(,)h(on)d(the)h(other)f(hand,)i(or)f(with)g
Fm(N)919 2385 y Fj(it)962 2381 y Fl(=)g(2)g Fd(but)g(with)g(the)g(constants)0
2423 y Fm(C)27 2427 y Fn(1)45 2423 y Fm(;)6 b(C)89 2427 y Fn(2)118
2423 y Fd(nonsparse,)j(we)h(have)g(been)f(unable)h(to)h(\256nd)f
Fc(any)g Fd(statistical)h(deviation)g(from)g(randomness)e(in)0
2464 y(sequences)c(of)10 b(up)e(to)h Fl(10)323 2448 y Fn(9)350
2464 y Fd(\257oating)f(numbers)g Fm(r)628 2468 y Fj(i)650 2464
y Fd(derived)g(from)i(this)f(scheme.)j(The)c(combined)f(strength)0
2506 y(of)12 b Fm(N)74 2510 y Fj(it)113 2506 y Fl(=)h(4)g Fd(and)e(nonsparse)
f Fm(C)443 2510 y Fn(1)460 2506 y Fm(;)c(C)504 2510 y Fn(2)535
2506 y Fd(should)k(therefore)j(give)e(sequences)e(that)k(are)e(random)h(to)g
(tests)0 2547 y(even)d(far)i(beyond)d(those)i(that)g(we)g(have)f(actually)h
(tried.)18 b(These)8 b(are)j(our)f(recommended)e(conservative)p
eop
%%Page: 302 3
bop 0 50 a Fi(302)417 b Fh(Chapter)10 b(7.)55 b(Random)10 b(Numbers)p
0 68 1395 2 v 0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial
256 1360 a @beginspecial 184 @llx 222 @lly 396 @urx 513 @ury
2120 @rwi @setspecial
%%BeginDocument: epsf/fig7x5x2.ps
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
Adobe_packedarray /initialize get exec
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
/TX {pop} def
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def	% - cf flatness
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
/annotatepage
{
} def
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
[/_Symbol/Symbol 0 0 0 TZ
[/_Times-Italic/Times-Italic 0 0 1 TZ
[/_Times-Roman/Times-Roman 0 0 1 TZ
0 A
0 R
0 G
0 i 0 J 0 j 1 w 4 M []0 d
0 D
276.225 360.5 m
310.8748 360.5 L
316.287 360.5 320.6748 364.8875 320.6748 370.2998 C
320.6748 452.5496 L
S
261.525 479.8495 m
217.4252 479.8495 L
S
217.4252 288.7503 m
261.525 288.7503 L
S
271.325 251.6505 m
363.3742 251.6505 L
368.7865 251.6505 373.1745 256.0378 373.1745 261.4497 C
373.1745 442.7504 L
373.1745 448.1623 368.7865 452.5496 363.3742 452.5496 C
268.175 452.5496 L
S
268.175 509.2494 m
268.175 225.7506 l
S
u
0 O
1 g
233.8751 471.4495 m
233.8751 488.5995 L
187.3253 488.5995 L
187.3253 471.4495 L
233.8751 471.4495 L
b
210.6002 480.0245 m
B
U
u
233.8751 280.0004 m
233.8751 297.1503 L
187.3253 297.1503 L
187.3253 280.0004 L
233.8751 280.0004 L
b
210.6002 288.5753 m
B
U
u
268.175 466.6602 m
275.5558 466.6602 281.5393 472.6437 281.5393 480.0245 c
281.5393 487.4053 275.5558 493.3888 268.175 493.3888 c
260.7942 493.3888 254.8107 487.4053 254.8107 480.0245 c
254.8107 472.6437 260.7942 466.6602 268.175 466.6602 c
b
268.175 480.0245 m
B
U
u
268.175 347.1357 m
275.5558 347.1357 281.5393 353.1192 281.5393 360.5 c
281.5393 367.8808 275.5558 373.8643 268.175 373.8643 c
260.7942 373.8643 254.8107 367.8808 254.8107 360.5 c
254.8107 353.1192 260.7942 347.1357 268.175 347.1357 c
b
268.175 360.5 m
B
U
u
268.175 275.1585 m
275.5558 275.1585 281.5393 281.1421 281.5393 288.5228 c
281.5393 295.9036 275.5558 301.8871 268.175 301.8871 c
260.7942 301.8871 254.8107 295.9036 254.8107 288.5228 c
254.8107 281.1421 260.7942 275.1585 268.175 275.1585 c
b
268.175 288.5228 m
B
U
u
268.175 238.2162 m
275.5558 238.2162 281.5393 244.1997 281.5393 251.5805 c
281.5393 258.9612 275.5558 264.9448 268.175 264.9448 c
260.7942 264.9448 254.8107 258.9612 254.8107 251.5805 c
254.8107 244.1997 260.7942 238.2162 268.175 238.2162 c
b
268.175 251.5805 m
B
U
283.5749 312.5502 m
283.5749 337.0501 L
252.7751 337.0501 L
252.7751 312.5502 L
283.5749 312.5502 L
b
0.5 w
252.7751 337.0501 m
283.5749 312.5502 L
B
252.7751 312.5502 m
283.5749 337.0501 L
B
1 w
281.4749 384.6499 m
281.4749 398.9998 L
254.8751 398.9998 L
254.8751 384.6499 L
281.4749 384.6499 L
b
268.175 410.6498 m
287.5749 437.1497 L
248.7751 437.1497 L
268.175 410.6498 L
b
320.6748 410.6498 m
340.0747 437.1497 L
301.2748 437.1497 L
320.6748 410.6498 L
b
373.1745 410.6498 m
392.5745 437.1497 L
353.7746 437.1497 L
373.1745 410.6498 L
b
0 To
0.981 0 0 0.981 321.2891 426.3838 0 Tp
TP
-5.5054 0 Td
0 Tr
0 g
/_Times-Roman 9.1837 Tf
0 Ts
100 Tz
0 Tt
1 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 Tq
11.2245 0 Tl
0 Tc
0 Tw
(lo) Tx 0 -60 Tk
/_Times-Roman 6.6327 Tf
2.0408 Ts
(2) Tx
(\r) TX 
TO
0 To
0.9799 0 0 0.9799 267.9143 425.9014 0 Tp
TP
-5.5054 0 Td
0 Tr
/_Times-Roman 9.1837 Tf
0 Ts
(hi) Tx 0 -60 Tk
/_Times-Roman 6.6327 Tf
2.0408 Ts
(2) Tx
(\r) TX 
TO
0 To
0.9803 0 0 0.9803 267.9143 476.9011 0 Tp
TP
-9.6927 0 Td
0 Tr
/_Times-Roman 9.1837 Tf
0 Ts
(XOR) Tx
(\r) TX 
TO
0 To
0.9803 0 0 0.9803 210.772 476.7939 0 Tp
TP
-4.7209 0 Td
0 Tr
/_Times-Italic 9.1837 Tf
(C) Tx
/_Times-Roman 6.6327 Tf
-1.5306 Ts
(1) Tx
(\r) TX 
TO
0 To
0.686 0 0 0.686 267.94 285.4066 0 Tp
TP
-13.8468 0 Td
0 Tr
/_Times-Roman 13.1197 Tf
0 Ts
(XOR) Tx
(\r) TX 
TO
0 To
0.9803 0 0 0.9803 210.6648 285.3665 0 Tp
TP
-4.7209 0 Td
0 Tr
/_Times-Italic 9.1837 Tf
(C) Tx
/_Times-Roman 6.6327 Tf
-1.5306 Ts
(2) Tx
(\r) TX 
TO
0 To
0.9803 0 0 0.9803 267.807 388.6159 0 Tp
TP
-9.4348 0 Td
0 Tr
/_Times-Roman 9.1837 Tf
0 Ts
(NOT) Tx
(\r) TX 
TO
0 To
0.9803 0 0 0.9803 268.3072 248.1169 0 Tp
TP
-3.9202 0 Td
0 Tr
/_Symbol 14.2858 Tf
(+) Tx
(\r) TX 
TO
u
244.2909 479.8533 m
243.2473 478.0996 L
247.4408 479.865 L
247.4408 479.865 L
243.2344 481.5995 L
244.2909 479.8533 L
f
U
u
244.2909 288.7542 m
243.2473 287.0004 L
247.4408 288.7658 L
247.4408 288.7658 L
243.2344 290.5003 L
244.2909 288.7542 L
f
U
u
295.4782 452.5534 m
294.4346 450.7997 L
298.6281 452.5651 L
298.6281 452.5651 L
294.4217 454.2996 L
295.4782 452.5534 L
f
U
u
345.3529 452.5534 m
344.3094 450.7997 L
348.5029 452.5651 L
348.5029 452.5651 L
344.2964 454.2996 L
345.3529 452.5534 L
f
U
u
268.1788 461.6025 m
266.4251 462.6461 L
268.1905 458.4526 L
268.1905 458.4526 L
269.925 462.659 L
268.1788 461.6025 L
f
U
u
268.1788 445.5463 m
266.4251 446.5899 L
268.1905 442.3964 L
268.1905 442.3964 L
269.925 446.6029 L
268.1788 445.5463 L
f
U
u
268.1788 406.8278 m
266.4251 407.8713 L
268.1905 403.6779 L
268.1905 403.6779 L
269.925 407.8843 L
268.1788 406.8278 L
f
U
u
268.1788 379.9216 m
266.4251 380.9652 L
268.1905 376.7717 L
268.1905 376.7717 L
269.925 380.9781 L
268.1788 379.9216 L
f
U
u
268.1788 342.8218 m
266.4251 343.8654 L
268.1905 339.6719 L
268.1905 339.6719 L
269.925 343.8783 L
268.1788 342.8218 L
f
U
u
268.1788 308.2157 m
266.4251 309.2593 L
268.1905 305.0658 L
268.1905 305.0658 L
269.925 309.2722 L
268.1788 308.2157 L
f
U
u
268.1788 270.7658 m
266.4251 271.8094 L
268.1905 267.6159 L
268.1905 267.6159 L
269.925 271.8224 L
268.1788 270.7658 L
f
U
u
268.1788 226.9285 m
266.4251 227.9721 L
268.1905 223.7786 L
268.1905 223.7786 L
269.925 227.9851 L
268.1788 226.9285 L
f
U
u
268.1788 501.3273 m
266.4251 502.3709 L
268.1905 498.1774 L
268.1905 498.1774 L
269.925 502.3839 L
268.1788 501.3273 L
f
U
u
320.6786 445.5463 m
318.9248 446.5899 L
320.6903 442.3964 L
320.6903 442.3964 L
322.4248 446.6029 L
320.6786 445.5463 L
f
U
u
301.4216 360.4961 m
302.4651 362.2499 L
298.2716 360.4845 L
298.2716 360.4845 L
302.4781 358.75 L
301.4216 360.4961 L
f
U
u
301.4216 251.6466 m
302.4651 253.4004 L
298.2716 251.6349 L
298.2716 251.6349 L
302.4781 249.9005 L
301.4216 251.6466 L
f
U
0 To
0.9803 0 0 0.9803 373.3065 427.0086 0 Tp
TP
-10.403 0 Td
0 Tr
/_Times-Roman 9.1837 Tf
(hi ) Tx 0 60 Tk
(\245 ) Tx 0 80 Tk
(lo) Tx
(\r) TX 
TO
0 To
0.686 0 0 0.686 293.1399 325.9564 0 Tp
TP
0 Tr
/_Times-Roman 13.1197 Tf
0 Ta
13.1197 0 Tl
(reverse\r) Tx
T*
(half-words) Tx
(\r) TX 
TO
0 To
0.9803 0 0 0.9803 268.3072 356.991 0 Tp
TP
-3.9202 0 Td
0 Tr
/_Symbol 14.2858 Tf
1 Ta
11.2245 0 Tl
(+) Tx
(\r) TX 
TO
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EndDocument
 @endspecial 0 1422 a Fb(Figure)h(7.5.2.)42 b(The)12 b(nonlinear)d(function)h
Fp(g)j Fb(used)d(by)h(the)g(routine)f Fv(psdes)n Fb(.)0 1519
y Fd(parameter)h(values,)h(notwithstanding)e(the)i(fact)g(that)g
Fm(N)756 1523 y Fj(it)794 1519 y Fl(=)h(2)f Fd(\(which)f(is,)i(of)f(course,)g
(twice)f(as)g(fast\))0 1560 y(has)j(no)h(nonrandomness)c(discernible)j(\(by)h
(us\).)83 1602 y(Implementation)f(of)g(these)f(ideas)g(is)h(straightforward.)
28 b(The)14 b(following)g(routine)g(is)g(not)g(quite)0 1643
y(strictly)h(portable,)g(since)d(it)j(assumes)c(that)j Fr(unsigned)j(long)12
b Fd(integers)h(are)h(32-bits,)h(as)e(is)h(the)f(case)0 1685
y(on)e(most)h(machines.)19 b(However)o(,)12 b(there)f(is)h(no)f(reason)g(to)h
(believe)f(that)h Fc(longer)e Fd(integers)h(would)h(be)f(in)0
1726 y(any)i(way)f(inferior)j(\(with)f(suitable)f(extensions)f(of)h(the)h
(constants)d Fm(C)946 1730 y Fn(1)964 1726 y Fm(;)6 b(C)1008
1730 y Fn(2)1026 1726 y Fd(\).)27 b Fr(C)13 b Fd(does)f(not)h(provide)g(a)0
1768 y(convenient,)5 b(portable)i(way)f(to)g(divide)g(a)h(long)f(integer)g
(into)h(half)g(words,)g(so)f(we)g(must)g(use)g(a)g(combination)0
1809 y(of)14 b(masking)f(\()p Fr(&)20 b(0xffff)m Fd(\))15 b(with)f(left-)h
(and)e(right-shifts)j(by)d(16)g(bits)h(\()p Fr(<<16)f Fd(and)g
Fr(>>16)o Fd(\).)28 b(On)14 b(some)0 1851 y(machines)8 b(the)i(half-word)g
(extraction)g(could)f(be)g(made)g(faster)i(by)e(the)h(use)f(of)h
Fr(C)o Fd(')n(s)h(union)e(construction,)0 1892 y(but)i(this)f(would)h
(generally)f(not)g(be)g(portable)h(between)e(\252big-endian\272)g(and)h
(\252little-endian\272)g(machines.)0 1934 y(\(Big-)i(and)d(little-endian)j
(refer)f(to)f(the)h(order)f(in)h(which)f(the)h(bytes)e(are)h(stored)g(in)h(a)
g(word.\))0 2024 y Fv(#define)k(NITER)h(4)0 2099 y(void)g(psdes\(unsig)o(ned)
e(long)i(*lword,)f(unsigned)g(long)h(*irword\))0 2136 y Fs(\\Pseudo-DES")c
(hashing)i(of)f(the)g(64-bit)g(w)o(o)o(rd)h Fr(\(lword,irw)o(or)o(d\))m
Fs(.)j(Both)c(32-bit)g(a)o(rguments)g(a)o(re)g(re-)0 2174 y(turned)j(hashed)g
(on)g(all)h(bits.)0 2211 y Fv({)66 2248 y(unsigned)e(long)h(i,ia,ib,isw)o
(ap,)o(itm)o(ph=)o(0,i)o(tm)o(pl=)o(0;)66 2286 y(static)g(unsigned)f(long)h
(c1[NITER]=)o({)133 2323 y(0xbaa96887)o(L,)e(0x1e17d32cL)o(,)h(0x03bcdc3)o
(cL,)f(0x0f33d1b2)o(L};)66 2360 y(static)i(unsigned)f(long)h(c2[NITER]=)o({)
133 2398 y(0x4b0f3b58)o(L,)e(0xe874f0c3L)o(,)h(0x6955c5a)o(6L,)f(0x55a7ca46)o
(L};)66 2473 y(for)j(\(i=0;i<NIT)o(ER;)o(i++)o(\))e({)66 2510
y Fs(P)o(erfo)o(rm)10 b Fv(niter)f Fs(iterations)h(of)g(DES)g(logic,)h(using)
g(a)f(simpler)h(\(non-cryptographic\))f(nonlinea)o(r)h(func-)66
2547 y(tion)16 b(instead)g(of)f(DES's.)p eop
%%Page: 303 4
bop 217 50 a Fh(7.5)11 b(Random)e(Sequences)f(Based)i(on)g(Data)g(Encryption)
252 b Fi(303)p 0 68 1395 2 v 0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore

@endspecial 133 180 a Fv(ia=\(iswap=)o(\(*i)o(rw)o(ord)o(\)\))14
b(^)k(c1[i];)154 b Fs(The)17 b(bit-rich)g(constants)d Fv(c1)i
Fs(and)h(\(b)q(elo)o(w\))861 218 y Fv(c2)c Fs(gua)o(rantee)g(lots)g(of)g
(nonlinea)o(r)i(mix-)861 255 y(ing.)133 218 y Fv(itmpl)h(=)h(ia)g(&)g
(0xffff;)133 255 y(itmph)f(=)h(ia)g(>>)g(16;)133 293 y(ib=itmpl*i)o(tmp)o(l+)
d(~\(itmph*itm)o(ph)o(\);)133 330 y(*irword=\(*)o(lwo)o(rd)o(\))h(^)i
(\(\(\(ia)f(=)h(\(ib)g(>>)g(16\))f(|)199 367 y(\(\(ib)g(&)i(0xffff\))d(<<)i
(16\)\))f(^)h(c2[i]\)+itmp)o(l*i)o(tmp)o(h\);)133 405 y(*lword=isw)o(ap;)66
442 y(})0 479 y(})83 579 y Fd(The)11 b(routine)g Fr(ran4)n
Fd(,)i(listed)e(below)n(,)h(uses)d Fr(psdes)h Fd(to)i(generate)e(uniform)h
(random)g(deviates.)19 b(W)m(e)0 620 y(adopt)6 b(the)h(convention)e(that)i(a)
g(negative)f(value)g(of)h(the)g(ar)o(gument)f Fr(idum)g Fd(sets)g(the)h(left)
h(32-bit)f(word,)h(while)0 662 y(a)j(positive)g(value)g Fm(i)h
Fd(sets)f(the)g(right)h(32-bit)g(word,)h(returns)e(the)h Fm(i)p
Fd(th)g(random)f(deviate,)g(and)g(increments)0 703 y Fr(idum)e
Fd(to)i Fm(i)e Fl(+)g(1)p Fd(.)19 b(This)10 b(is)h(no)f(more)g(than)g(a)h
(convenient)e(way)h(of)g(de\256ning)g(many)g(dif)o(ferent)h(sequences)0
745 y(\(negative)f(values)g(of)h Fr(idum)o Fd(\),)h(but)f(still)h(with)g
(random)e(access)f(to)i(each)f(sequence)e(\(positive)j(values)f(of)0
786 y Fr(idum)n Fd(\).)25 b(For)13 b(getting)f(a)g(\257oating-point)h(number)
f(from)h(the)f(32-bit)h(integer)o(,)g(we)g(like)g(to)f(do)g(it)i(by)e(the)0
828 y(masking)6 b(trick)i(described)e(at)h(the)g(end)g(of)g
Fk(x)p Fd(7.1,)h(above.)k(The)6 b(hex)h(constants)e(3F800000)g(and)i
(007FFFFF)0 870 y(are)i(the)g(appropriate)f(ones)g(for)h(computers)f(using)g
(the)h(IEEE)g(representation)f(for)i(32-bit)f(\257oating-point)0
911 y(numbers)j(\(e.g.,)i(IBM)f(PCs)g(and)e(most)i(UNIX)g(workstations\).)24
b(For)13 b(DEC)f(V)-5 b(AXes,)14 b(the)e(correct)h(hex)0 953
y(constants)7 b(are,)j(respectively)n(,)d(00004080)g(and)h(FFFF007F)m(.)17
b(For)9 b(greater)h(portability)n(,)f(you)g(can)f(instead)0
994 y(construct)g(a)h(\257oating)g(number)g(by)g(making)f(the)h(\(signed\))g
(32-bit)h(integer)f(nonnegative)e(\(typically)n(,)j(you)0 1036
y(add)c(exactly)g Fl(2)195 1020 y Fn(31)235 1036 y Fd(if)i(it)g(is)g
(negative\))e(and)g(then)h(multiplying)g(it)h(by)f(a)g(\257oating)f(constant)
g(\(typically)i Fl(2)p Fm(:)1317 1020 y Fa(\000)p Fn(31)1373
1036 y Fd(\).)83 1077 y(An)g(interesting,)g(and)f(sometimes)g(useful,)h
(feature)f(of)h(the)g(routine)g Fr(ran4)n Fd(,)h(below)n(,)f(is)f(that)h(it)h
(allows)0 1119 y(random)f(access)e(to)i(the)g Fm(n)p Fd(th)h(random)f(value)f
(in)i(a)f(sequence,)e(without)i(the)g(necessity)f(of)h(\256rst)h(generating)0
1160 y(values)e Fl(1)f Fk(\001)g(\001)g(\001)g Fm(n)g Fk(\000)g
Fl(1)p Fd(.)14 b(This)8 b(property)g(is)g(shared)f(by)g(any)g(random)h
(number)f(generator)h(based)e(on)h Fc(hashing)0 1202 y Fd(\(the)j(technique)f
(of)h(mapping)f(data)g(keys,)h(which)f(may)h(be)f(highly)h(clustered)f(in)h
(value,)g(approximately)0 1243 y(uniformly)g(into)g(a)f(storage)g(address)f
(space\))597 1239 y Fg([5,6)r(])664 1243 y Fd(.)15 b(One)9
b(might)h(have)e(a)h(simulation)h(problem)f(in)g(which)0 1285
y(some)f(certain)h(rare)g(situation)g(becomes)e(recognizable)h(by)g(its)i
(consequen)o(ces)5 b(only)k(considerably)e(after)0 1326 y(it)i(has)e
(occurred.)12 b(One)7 b(may)g(wish)h(to)g(restart)g(the)g(simulation)f(back)g
(at)h(that)g(occurrence,)e(using)h(identical)0 1368 y(random)i(values)g(but,)
i(say)n(,)e(varying)h(some)f(other)h(control)g(parameters.)16
b(The)9 b(relevant)h(question)f(might)0 1409 y(then)i(be)g(something)g(like)h
(\252what)f(random)g(numbers)g(were)g(used)g(in)h(cycle)e(number)h
(337098901?\272)18 b(It)0 1451 y(might)9 b(already)f(be)g(cycle)f(number)h
(395100273)e(before)i(the)g(question)g(comes)f(up.)13 b(Random)7
b(generators)0 1492 y(based)i(on)i(recursion,)f(rather)h(than)g(hashing,)f
(cannot)g(easily)g(answer)g(such)f(a)i(question.)0 1576 y Fv(float)16
b(ran4\(long)e(*idum\))0 1613 y Fs(Returns)g(a)g(unifo)o(rm)h(random)g
(deviate)g(in)g(the)f(range)g(0.0)g(to)g(1.0,)g(generated)g(b)o(y)h
(pseudo-DES)f(\(DES-)0 1651 y(lik)o(e\))f(hashing)f(of)g(the)f(64-bit)h(w)o
(o)o(rd)g Fr(\(idums,idu)o(m\))m Fs(,)g(where)g Fr(idums)e
Fs(w)o(as)i(set)f(b)o(y)h(a)g(p)o(revious)h(call)f(with)0 1688
y(negative)i Fr(idum)o Fs(.)j(Also)d(increments)g Fr(idum)n
Fs(.)k(Routine)c(can)g(b)q(e)h(used)f(to)g(generate)g(a)g(random)h(sequence)0
1725 y(b)o(y)g(successive)e(calls,)i(leaving)g Fr(idum)f Fs(unaltered)g(b)q
(et)o(w)o(een)g(calls;)i(o)o(r)f(it)f(can)h(randomly)g(access)e(the)h
Fp(n)p Fs(th)0 1763 y(deviate)c(in)h(a)g(sequence)e(b)o(y)i(calling)g(with)g
Fr(idum)d Fq(=)i Fp(n)p Fs(.)18 b(Di\013erent)10 b(sequences)f(a)o(re)h
(initialized)j(b)o(y)e(calls)f(with)0 1800 y(di\013ering)16
b(negative)f(values)g(of)g Fr(idum)o Fs(.)0 1837 y Fv({)66
1875 y(void)i(psdes\(uns)o(ign)o(ed)d(long)i(*lword,)g(unsigned)e(long)j
(*irword\);)66 1912 y(unsigned)e(long)h(irword,item)o(p,l)o(wor)o(d;)66
1949 y(static)g(long)g(idums)g(=)h(0;)66 1987 y Fs(The)9 b(hexadecimal)g
(constants)d Fv(jflone)h Fs(and)h Fv(jflmsk)f Fs(b)q(elo)o(w)h(a)o(re)g(used)
g(to)g(p)o(ro)q(duce)g(a)g(\015oating)g(numb)q(er)66 2024 y(b)q(et)o(w)o(een)
k(1.)17 b(and)c(2.)k(b)o(y)c(bit)o(wise)f(masking.)18 b(They)12
b(a)o(re)g(machine-dep)q(endent.)18 b(See)11 b(text.)0 2062
y Fv(#if)17 b(defined\(v)o(ax\))d(||)j(defined\(_v)o(ax_)o(\))d(||)j
(defined\(__v)o(ax_)o(_\))d(||)j(defined\(VAX)o(\))66 2099
y(static)f(unsigned)f(long)h(jflone)f(=)j(0x0000408)o(0;)66
2136 y(static)e(unsigned)f(long)h(jflmsk)f(=)j(0xffff007)o(f;)0
2174 y(#else)66 2211 y(static)e(unsigned)f(long)h(jflone)f(=)j(0x3f80000)o
(0;)66 2248 y(static)e(unsigned)f(long)h(jflmsk)f(=)j(0x007ffff)o(f;)0
2286 y(#endif)66 2360 y(if)f(\(*idum)f(<)h(0\))g({)392 b Fs(Reset)12
b Fv(idums)g Fs(and)h(p)o(repa)o(re)g(to)g(return)g(the)g(\014rst)801
2398 y(deviate)g(in)g(its)g(sequence.)-1014 b Fv(idums)16 b(=)h(-\(*idum\);)
133 2435 y(*idum=1;)66 2473 y(})66 2510 y(irword=\(*id)o(um\))o(;)66
2547 y(lword=idums)o(;)p eop
%%Page: 304 5
bop 0 50 a Fi(304)422 b Fh(Chapter)10 b(7.)52 b(Random)9 b(Numbers)p
0 68 1395 2 v 0 143 a @beginspecial @setspecial
 gsave 0.0 setgray 394 -72 translate -90 rotate /Helvetica findfont
7 scalefont setfont 0 0 moveto (Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING (ISBN 0-521-43108-5))
show 0 -8 moveto (Copyright (C) 1988-1992 by Cambridge University Press.
Programs Copyright (C) 1988-1992 by Numerical Recipes Software. ) show
0 -16 moveto (Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copying of machine-)
show 0 -24 moveto (readable files (including this one) to any server
computer, is strictly prohibited. To order Numerical Recipes books,
diskettes, or CDROMs) show 0 -32 moveto (visit website http://www.nr.com or call 1-800-872-7423 (North America only),
or send email to trade@cup.cam.ac.uk (outside North America).) show
grestore 
@endspecial
66 180 a Fv(psdes\(&lwor)o(d,&)o(irw)o(ord)o(\);)283 b Fs(\\Pseudo-DES")11
b(enco)q(de)g(the)h(w)o(o)o(rds.)66 218 y Fv(itemp=jflon)o(e)j(|)i(\(jflmsk)e
(&)i(irword\);)90 b Fs(Mask)15 b(to)g(a)g(\015oating)g(numb)q(er)h(b)q(et)o
(w)o(een)e(1)h(and)801 255 y(2.)-763 b Fv(++\(*idum\);)66 293
y(return)16 b(\(*\(float)f(*\)&itemp\))o(-1.)o(0;)142 b Fs(Subtraction)12
b(moves)f(range)h(to)g(0.)17 b(to)11 b(1.)0 330 y Fv(})83 430
y Fd(The)g(accompanying)e(table)j(gives)f(data)g(for)i(verifying)f(that)g
Fr(ran4)f Fd(and)g Fr(psdes)f Fd(work)i(correctly)0 471 y(on)h(your)f
(machine.)24 b(W)m(e)14 b(do)e(not)h(advise)f(the)h(use)f(of)h
Fr(ran4)f Fd(unless)g(you)g(are)h(able)f(to)i(reproduce)d(the)0
513 y(hex)i(values)g(shown.)27 b(T)m(ypically)n(,)16 b Fr(ran4)c
Fd(is)j(about)e(4)h(times)g(slower)g(than)g Fr(ran0)f Fd(\()p
Fk(x)p Fd(7.1\),)j(or)f(about)e(3)0 554 y(times)k(slower)g(than)g
Fr(ran1)o Fd(.)p 51 610 1292 3 v 51 674 3 64 v 367 656 a Fb(V)l(alues)8
b(for)g(V)l(erifying)f(the)h(Implementation)f(of)h Fv(psdes)p
1341 674 V 51 675 1292 2 v 51 739 3 64 v 62 721 a(idum)p 141
739 2 64 v 62 w Fb(before)f Fv(psdes)g Fb(call)p 487 739 V
134 w(after)h Fv(psdes)f Fb(call)h(\(hex\))p 940 739 V 192
w Fv(ran4\(idum)o(\))p 1341 739 3 64 v 51 740 1292 2 v 51 804
3 64 v 141 804 2 64 v 184 786 a(lword)p 305 804 V 74 w(irword)p
487 804 V 104 w(lword)p 720 804 V 128 w(irword)p 940 804 V
121 w Fb(V)l(AX)p 1140 804 V 146 w(PC)p 1341 804 3 64 v 51
806 1292 3 v 51 870 3 64 v 81 853 a(\2611)101 b(1)156 b(1)124
b(604D1DCE)75 b(509C0C23)f(0.275898)f(0.219120)p 1341 870 V
51 934 V 85 917 a(99)97 b(1)147 b(99)119 b(D97F8571)74 b(A66CB41A)67
b(0.208204)74 b(0.849246)p 1341 934 V 51 998 V 77 981 a(\26199)79
b(99)148 b(1)128 b(7822309D)87 b(64300984)78 b(0.034307)c(0.375290)p
1341 998 V 51 1062 V 85 1045 a(99)88 b(99)139 b(99)118 b(D7F376F0)76
b(59BA89EB)69 b(0.838676)74 b(0.457334)p 1341 1062 V 51 1064
1292 2 v 51 1209 3 146 v 97 1110 a(Successive)7 b(calls)h(to)g
Fv(psdes)f Fb(with)h(ar)o(guments)f Fo(\000)p Fb(1,)i(99,)e
Fo(\000)p Fb(99,)h(and)g(1,)g(should)f(produce)f(exactly)h(the)97
1147 y Fv(lword)f Fb(and)g Fv(irword)f Fb(values)h(shown.)k(Masking)c
(conversion)f(to)i(a)f(returned)g(\257oating)h(random)e(value)97
1184 y(is)10 b(allowed)f(to)h(be)f(machine)g(dependent;)f(values)h(for)h(V)l
(AX)f(and)g(PC)h(are)g(shown.)p 1341 1209 V 51 1212 1292 3
v 0 1382 a Fg(CITED)j(REFERENCES)g(AND)f(FUR)o(THER)i(READING:)0
1432 y Ff(Data)e(Encryption)g(Standard)p Fg(,)i(1977)e(January)g(15,)g
(Federal)h(Information)h(Processing)e(Standards)h(Publi-)80
1474 y(cation,)e(number)f(46)g(\(W)o(ashington:)j(U.S.)d(Department)h(of)f
(Commerce,)g(National)h(Bureau)h(of)d(Stan-)80 1515 y(dards\).)16
b([1])0 1565 y Ff(Guidelines)10 b(for)e(Implementing)j(and)d(Using)g(the)h
(NBS)e(Data)h(Encryption)h(Standard)p Fg(,)i(1981)e(April)f(1,)g(Federal)80
1606 y(Information)13 b(Processing)e(Standards)h(Publication)q(,)h(number)e
(74)g(\(W)o(ashington)q(:)i(U.S.)d(Department)80 1648 y(of)i(Commerce,)h
(National)i(Bureau)f(of)e(Standards\).)j([2])0 1698 y Ff(V)o(alidating)d(the)
e(Correctness)g(of)g(Hardware)g(Implementatio)q(ns)i(of)d(the)h(NBS)f(Data)h
(Encryption)h(Standard)p Fg(,)80 1739 y(1980,)g(NBS)f(Special)i(Publication)h
(500\26120)f(\(W)o(ashington)q(:)g(U.S.)f(Department)h(of)e(Commerce,)g(Na-)
80 1781 y(tional)15 b(Bureau)h(of)e(Standards\).)h([3])0 1831
y(Meyer)n(,)8 b(C.H.)f(and)h(Matyas,)f(S.M.)h(1982,)h Ff(Cryptography:)g(A)e
(New)h(Dimension)g(in)g(Computer)h(Data)f(Security)80 1872
y Fg(\(New)14 b(Y)m(ork:)g(Wiley\).)i([4])0 1922 y(Knuth,)10
b(D.E.)f(1973,)i Ff(Sorting)f(and)g(Searching)p Fg(,)h(vol.)e(3)g(of)g
Ff(The)h(Art)f(of)g(Computer)h(Programming)h Fg(\(Reading,)80
1963 y(MA:)i(Addison-W)o(esley\),)j(Chapter)f(6.)f([5])0 2013
y(V)o(itter)n(,)k(J.S.,)e(and)h(Chen,)g(W)o(-C.)f(1987,)i Ff(Design)f(and)f
(Analysis)h(of)f(Coalesced)h(Hashing)g Fg(\(New)f(Y)m(ork:)80
2055 y(Oxford)e(University)g(Press\).)g([6])0 2273 y Fe(7.6)j(Simple)j(Monte)
f(Carlo)h(Integration)83 2398 y Fi(Inspirations)7 b(for)i(numerical)g
(methods)g(can)h(spring)e(from)h(unlikely)e(sources.)16 b(\252Splines\272)0
2448 y(\256rst)f(were)h(\257exible)f(strips)g(of)g(wood)g(used)g(by)g
(draftsmen.)31 b(\252Simulated)15 b(annealing\272)h(\(we)0
2497 y(shall)11 b(see)h(in)f Fw(x)p Fi(10.9\))g(is)g(rooted)g(in)f(a)i
(thermodynamic)f(analogy)m(.)18 b(And)11 b(who)g(does)h(not)e(feel)i(at)0
2547 y(least)h(a)h(faint)e(echo)h(of)g(glamor)f(in)h(the)f(name)i(\252Monte)f
(Carlo)f(method\272?)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
